/* soapH.h
   Generated by gSOAP 2.8.14 from soap.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin(soap), soap_serialize_byte(soap, data), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin(soap), soap_serialize_int(soap, data), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_begin(soap), soap_serialize_LONG64(soap, data), soap_begin_send(soap) || soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_LONG64(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_begin(soap), soap_serialize_unsignedByte(soap, data), soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_begin(soap), soap_serialize_unsignedInt(soap, data), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_time
#define soap_write_time(soap, data) ( soap_begin(soap), soap_serialize_time(soap, data), soap_begin_send(soap) || soap_put_time(soap, data, "dateTime", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_time
#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin(soap), soap_serialize_bool(soap, data), soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_ns2__StandardPeriodVariant
#define SOAP_TYPE_ns2__StandardPeriodVariant (93)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__StandardPeriodVariant(struct soap*, enum ns2__StandardPeriodVariant *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__StandardPeriodVariant(struct soap*, const char*, int, const enum ns2__StandardPeriodVariant *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__StandardPeriodVariant2s(struct soap*, enum ns2__StandardPeriodVariant);
SOAP_FMAC3 enum ns2__StandardPeriodVariant * SOAP_FMAC4 soap_in_ns2__StandardPeriodVariant(struct soap*, const char*, enum ns2__StandardPeriodVariant *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__StandardPeriodVariant(struct soap*, const char*, enum ns2__StandardPeriodVariant *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__StandardPeriodVariant(struct soap*, const enum ns2__StandardPeriodVariant *, const char*, const char*);

#ifndef soap_write_ns2__StandardPeriodVariant
#define soap_write_ns2__StandardPeriodVariant(soap, data) ( soap_begin(soap), soap_serialize_ns2__StandardPeriodVariant(soap, data), soap_begin_send(soap) || soap_put_ns2__StandardPeriodVariant(soap, data, "ns2:StandardPeriodVariant", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum ns2__StandardPeriodVariant * SOAP_FMAC4 soap_get_ns2__StandardPeriodVariant(struct soap*, enum ns2__StandardPeriodVariant *, const char*, const char*);

#ifndef soap_read_ns2__StandardPeriodVariant
#define soap_read_ns2__StandardPeriodVariant(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__StandardPeriodVariant(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_ns2__StandardBeginningDateVariant
#define SOAP_TYPE_ns2__StandardBeginningDateVariant (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__StandardBeginningDateVariant(struct soap*, enum ns2__StandardBeginningDateVariant *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__StandardBeginningDateVariant(struct soap*, const char*, int, const enum ns2__StandardBeginningDateVariant *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__StandardBeginningDateVariant2s(struct soap*, enum ns2__StandardBeginningDateVariant);
SOAP_FMAC3 enum ns2__StandardBeginningDateVariant * SOAP_FMAC4 soap_in_ns2__StandardBeginningDateVariant(struct soap*, const char*, enum ns2__StandardBeginningDateVariant *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__StandardBeginningDateVariant(struct soap*, const char*, enum ns2__StandardBeginningDateVariant *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__StandardBeginningDateVariant(struct soap*, const enum ns2__StandardBeginningDateVariant *, const char*, const char*);

#ifndef soap_write_ns2__StandardBeginningDateVariant
#define soap_write_ns2__StandardBeginningDateVariant(soap, data) ( soap_begin(soap), soap_serialize_ns2__StandardBeginningDateVariant(soap, data), soap_begin_send(soap) || soap_put_ns2__StandardBeginningDateVariant(soap, data, "ns2:StandardBeginningDateVariant", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum ns2__StandardBeginningDateVariant * SOAP_FMAC4 soap_get_ns2__StandardBeginningDateVariant(struct soap*, enum ns2__StandardBeginningDateVariant *, const char*, const char*);

#ifndef soap_read_ns2__StandardBeginningDateVariant
#define soap_read_ns2__StandardBeginningDateVariant(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__StandardBeginningDateVariant(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_ns2__FillChecking
#define SOAP_TYPE_ns2__FillChecking (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__FillChecking(struct soap*, enum ns2__FillChecking *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__FillChecking(struct soap*, const char*, int, const enum ns2__FillChecking *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__FillChecking2s(struct soap*, enum ns2__FillChecking);
SOAP_FMAC3 enum ns2__FillChecking * SOAP_FMAC4 soap_in_ns2__FillChecking(struct soap*, const char*, enum ns2__FillChecking *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__FillChecking(struct soap*, const char*, enum ns2__FillChecking *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__FillChecking(struct soap*, const enum ns2__FillChecking *, const char*, const char*);

#ifndef soap_write_ns2__FillChecking
#define soap_write_ns2__FillChecking(soap, data) ( soap_begin(soap), soap_serialize_ns2__FillChecking(soap, data), soap_begin_send(soap) || soap_put_ns2__FillChecking(soap, data, "ns2:FillChecking", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum ns2__FillChecking * SOAP_FMAC4 soap_get_ns2__FillChecking(struct soap*, enum ns2__FillChecking *, const char*, const char*);

#ifndef soap_read_ns2__FillChecking
#define soap_read_ns2__FillChecking(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__FillChecking(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_ns2__FillCheckErrorStatus
#define SOAP_TYPE_ns2__FillCheckErrorStatus (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__FillCheckErrorStatus(struct soap*, enum ns2__FillCheckErrorStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__FillCheckErrorStatus(struct soap*, const char*, int, const enum ns2__FillCheckErrorStatus *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__FillCheckErrorStatus2s(struct soap*, enum ns2__FillCheckErrorStatus);
SOAP_FMAC3 enum ns2__FillCheckErrorStatus * SOAP_FMAC4 soap_in_ns2__FillCheckErrorStatus(struct soap*, const char*, enum ns2__FillCheckErrorStatus *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__FillCheckErrorStatus(struct soap*, const char*, enum ns2__FillCheckErrorStatus *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__FillCheckErrorStatus(struct soap*, const enum ns2__FillCheckErrorStatus *, const char*, const char*);

#ifndef soap_write_ns2__FillCheckErrorStatus
#define soap_write_ns2__FillCheckErrorStatus(soap, data) ( soap_begin(soap), soap_serialize_ns2__FillCheckErrorStatus(soap, data), soap_begin_send(soap) || soap_put_ns2__FillCheckErrorStatus(soap, data, "ns2:FillCheckErrorStatus", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum ns2__FillCheckErrorStatus * SOAP_FMAC4 soap_get_ns2__FillCheckErrorStatus(struct soap*, enum ns2__FillCheckErrorStatus *, const char*, const char*);

#ifndef soap_read_ns2__FillCheckErrorStatus
#define soap_read_ns2__FillCheckErrorStatus(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__FillCheckErrorStatus(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_ns2__DateFractions
#define SOAP_TYPE_ns2__DateFractions (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__DateFractions(struct soap*, enum ns2__DateFractions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__DateFractions(struct soap*, const char*, int, const enum ns2__DateFractions *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__DateFractions2s(struct soap*, enum ns2__DateFractions);
SOAP_FMAC3 enum ns2__DateFractions * SOAP_FMAC4 soap_in_ns2__DateFractions(struct soap*, const char*, enum ns2__DateFractions *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__DateFractions(struct soap*, const char*, enum ns2__DateFractions *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__DateFractions(struct soap*, const enum ns2__DateFractions *, const char*, const char*);

#ifndef soap_write_ns2__DateFractions
#define soap_write_ns2__DateFractions(soap, data) ( soap_begin(soap), soap_serialize_ns2__DateFractions(soap, data), soap_begin_send(soap) || soap_put_ns2__DateFractions(soap, data, "ns2:DateFractions", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum ns2__DateFractions * SOAP_FMAC4 soap_get_ns2__DateFractions(struct soap*, enum ns2__DateFractions *, const char*, const char*);

#ifndef soap_read_ns2__DateFractions
#define soap_read_ns2__DateFractions(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__DateFractions(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_ns2__AllowedSign
#define SOAP_TYPE_ns2__AllowedSign (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__AllowedSign(struct soap*, enum ns2__AllowedSign *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__AllowedSign(struct soap*, const char*, int, const enum ns2__AllowedSign *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__AllowedSign2s(struct soap*, enum ns2__AllowedSign);
SOAP_FMAC3 enum ns2__AllowedSign * SOAP_FMAC4 soap_in_ns2__AllowedSign(struct soap*, const char*, enum ns2__AllowedSign *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__AllowedSign(struct soap*, const char*, enum ns2__AllowedSign *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__AllowedSign(struct soap*, const enum ns2__AllowedSign *, const char*, const char*);

#ifndef soap_write_ns2__AllowedSign
#define soap_write_ns2__AllowedSign(soap, data) ( soap_begin(soap), soap_serialize_ns2__AllowedSign(soap, data), soap_begin_send(soap) || soap_put_ns2__AllowedSign(soap, data, "ns2:AllowedSign", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum ns2__AllowedSign * SOAP_FMAC4 soap_get_ns2__AllowedSign(struct soap*, enum ns2__AllowedSign *, const char*, const char*);

#ifndef soap_read_ns2__AllowedSign
#define soap_read_ns2__AllowedSign(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__AllowedSign(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_ns2__AllowedLength
#define SOAP_TYPE_ns2__AllowedLength (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__AllowedLength(struct soap*, enum ns2__AllowedLength *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__AllowedLength(struct soap*, const char*, int, const enum ns2__AllowedLength *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_ns2__AllowedLength2s(struct soap*, enum ns2__AllowedLength);
SOAP_FMAC3 enum ns2__AllowedLength * SOAP_FMAC4 soap_in_ns2__AllowedLength(struct soap*, const char*, enum ns2__AllowedLength *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2ns2__AllowedLength(struct soap*, const char*, enum ns2__AllowedLength *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__AllowedLength(struct soap*, const enum ns2__AllowedLength *, const char*, const char*);

#ifndef soap_write_ns2__AllowedLength
#define soap_write_ns2__AllowedLength(soap, data) ( soap_begin(soap), soap_serialize_ns2__AllowedLength(soap, data), soap_begin_send(soap) || soap_put_ns2__AllowedLength(soap, data, "ns2:AllowedLength", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 enum ns2__AllowedLength * SOAP_FMAC4 soap_get_ns2__AllowedLength(struct soap*, enum ns2__AllowedLength *, const char*, const char*);

#ifndef soap_read_ns2__AllowedLength
#define soap_read_ns2__AllowedLength(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__AllowedLength(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__ns2__Structure_Property
#define SOAP_TYPE__ns2__Structure_Property (123)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__Structure_Property(struct soap*, const char*, int, const _ns2__Structure_Property *, const char*);
SOAP_FMAC3 _ns2__Structure_Property * SOAP_FMAC4 soap_in__ns2__Structure_Property(struct soap*, const char*, _ns2__Structure_Property *, const char*);

#ifndef soap_write__ns2__Structure_Property
#define soap_write__ns2__Structure_Property(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:Structure-Property", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns2__Structure_Property * SOAP_FMAC4 soap_get__ns2__Structure_Property(struct soap*, _ns2__Structure_Property *, const char*, const char*);

#ifndef soap_read__ns2__Structure_Property
#define soap_read__ns2__Structure_Property(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__Structure_Property(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns2__Structure_Property * SOAP_FMAC2 soap_instantiate__ns2__Structure_Property(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__Structure_Property * soap_new__ns2__Structure_Property(struct soap *soap, int n = -1) { return soap_instantiate__ns2__Structure_Property(soap, n, NULL, NULL, NULL); }

inline _ns2__Structure_Property * soap_new_req__ns2__Structure_Property(struct soap *soap, std::wstring& name) { _ns2__Structure_Property *_p = soap_instantiate__ns2__Structure_Property(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__Structure_Property::name = name; } return _p; }

inline _ns2__Structure_Property * soap_new_set__ns2__Structure_Property(struct soap *soap, char *Value, std::wstring& name) { _ns2__Structure_Property *_p = soap_instantiate__ns2__Structure_Property(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__Structure_Property::Value = Value; _p->_ns2__Structure_Property::name = name; } return _p; }

inline void soap_delete__ns2__Structure_Property(struct soap *soap, _ns2__Structure_Property *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__Structure_Property(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns2__FixedStructure_Property
#define SOAP_TYPE__ns2__FixedStructure_Property (117)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns2__FixedStructure_Property(struct soap*, const char*, int, const _ns2__FixedStructure_Property *, const char*);
SOAP_FMAC3 _ns2__FixedStructure_Property * SOAP_FMAC4 soap_in__ns2__FixedStructure_Property(struct soap*, const char*, _ns2__FixedStructure_Property *, const char*);

#ifndef soap_write__ns2__FixedStructure_Property
#define soap_write__ns2__FixedStructure_Property(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:FixedStructure-Property", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns2__FixedStructure_Property * SOAP_FMAC4 soap_get__ns2__FixedStructure_Property(struct soap*, _ns2__FixedStructure_Property *, const char*, const char*);

#ifndef soap_read__ns2__FixedStructure_Property
#define soap_read__ns2__FixedStructure_Property(soap, data) ( soap_begin_recv(soap) || !soap_get__ns2__FixedStructure_Property(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns2__FixedStructure_Property * SOAP_FMAC2 soap_instantiate__ns2__FixedStructure_Property(struct soap*, int, const char*, const char*, size_t*);

inline _ns2__FixedStructure_Property * soap_new__ns2__FixedStructure_Property(struct soap *soap, int n = -1) { return soap_instantiate__ns2__FixedStructure_Property(soap, n, NULL, NULL, NULL); }

inline _ns2__FixedStructure_Property * soap_new_req__ns2__FixedStructure_Property(struct soap *soap, std::wstring& name) { _ns2__FixedStructure_Property *_p = soap_instantiate__ns2__FixedStructure_Property(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__FixedStructure_Property::name = name; } return _p; }

inline _ns2__FixedStructure_Property * soap_new_set__ns2__FixedStructure_Property(struct soap *soap, char *Value, std::wstring& name) { _ns2__FixedStructure_Property *_p = soap_instantiate__ns2__FixedStructure_Property(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns2__FixedStructure_Property::Value = Value; _p->_ns2__FixedStructure_Property::name = name; } return _p; }

inline void soap_delete__ns2__FixedStructure_Property(struct soap *soap, _ns2__FixedStructure_Property *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns2__FixedStructure_Property(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ValueStorage
#define SOAP_TYPE_ns2__ValueStorage (96)
#endif

#define soap_default_ns2__ValueStorage(soap, a) (a)->xsd__base64Binary::soap_default(soap)


#define soap_serialize_ns2__ValueStorage(soap, a) (a)->soap_serialize(soap)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ValueStorage(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_ns2__ValueStorage(struct soap*, const char*, xsd__base64Binary *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__ValueStorage(struct soap*, const xsd__base64Binary *, const char*, const char*);

#ifndef soap_write_ns2__ValueStorage
#define soap_write_ns2__ValueStorage(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:ValueStorage", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_ns2__ValueStorage(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_ns2__ValueStorage
#define soap_read_ns2__ValueStorage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ValueStorage(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_ns2__ValueStorage soap_instantiate_xsd__base64Binary


#define soap_copy_ns2__ValueStorage soap_copy_xsd__base64Binary

#ifndef SOAP_TYPE_ns2__UUID
#define SOAP_TYPE_ns2__UUID (95)
#endif

#define soap_default_ns2__UUID(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__UUID(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__UUID(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns2__UUID(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__UUID(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns2__UUID
#define soap_write_ns2__UUID(soap, data) ( soap_begin(soap), soap_serialize_ns2__UUID(soap, data), soap_begin_send(soap) || soap_put_ns2__UUID(soap, data, "ns2:UUID", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns2__UUID(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns2__UUID
#define soap_read_ns2__UUID(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__UUID(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_ns2__UUID soap_instantiate_std__string


#define soap_copy_ns2__UUID soap_copy_std__string

#ifndef SOAP_TYPE_ns2__Type
#define SOAP_TYPE_ns2__Type (94)
#endif

#define soap_default_ns2__Type(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__Type(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Type(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns2__Type(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__Type(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns2__Type
#define soap_write_ns2__Type(soap, data) ( soap_begin(soap), soap_serialize_ns2__Type(soap, data), soap_begin_send(soap) || soap_put_ns2__Type(soap, data, "ns2:Type", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns2__Type(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns2__Type
#define soap_read_ns2__Type(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Type(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_ns2__Type soap_instantiate_std__string


#define soap_copy_ns2__Type soap_copy_std__string

#ifndef SOAP_TYPE_ns2__Null
#define SOAP_TYPE_ns2__Null (91)
#endif

#define soap_default_ns2__Null(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__Null(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Null(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns2__Null(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__Null(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns2__Null
#define soap_write_ns2__Null(soap, data) ( soap_begin(soap), soap_serialize_ns2__Null(soap, data), soap_begin_send(soap) || soap_put_ns2__Null(soap, data, "ns2:Null", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns2__Null(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns2__Null
#define soap_read_ns2__Null(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Null(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_ns2__Null soap_instantiate_std__string


#define soap_copy_ns2__Null soap_copy_std__string

#ifndef SOAP_TYPE_ns2__CompositeID
#define SOAP_TYPE_ns2__CompositeID (87)
#endif

#define soap_default_ns2__CompositeID(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__CompositeID(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__CompositeID(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_ns2__CompositeID(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__CompositeID(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_ns2__CompositeID
#define soap_write_ns2__CompositeID(soap, data) ( soap_begin(soap), soap_serialize_ns2__CompositeID(soap, data), soap_begin_send(soap) || soap_put_ns2__CompositeID(soap, data, "ns2:CompositeID", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_ns2__CompositeID(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_ns2__CompositeID
#define soap_read_ns2__CompositeID(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__CompositeID(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_ns2__CompositeID soap_instantiate_std__string


#define soap_copy_ns2__CompositeID soap_copy_std__string

#ifndef SOAP_TYPE_ns2__ValueTreeRow
#define SOAP_TYPE_ns2__ValueTreeRow (84)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ValueTreeRow(struct soap*, const char*, int, const ns2__ValueTreeRow *, const char*);
SOAP_FMAC3 ns2__ValueTreeRow * SOAP_FMAC4 soap_in_ns2__ValueTreeRow(struct soap*, const char*, ns2__ValueTreeRow *, const char*);

#ifndef soap_write_ns2__ValueTreeRow
#define soap_write_ns2__ValueTreeRow(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:ValueTreeRow", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTreeRow * SOAP_FMAC4 soap_get_ns2__ValueTreeRow(struct soap*, ns2__ValueTreeRow *, const char*, const char*);

#ifndef soap_read_ns2__ValueTreeRow
#define soap_read_ns2__ValueTreeRow(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ValueTreeRow(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__ValueTreeRow * SOAP_FMAC2 soap_instantiate_ns2__ValueTreeRow(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ValueTreeRow * soap_new_ns2__ValueTreeRow(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ValueTreeRow(soap, n, NULL, NULL, NULL); }

inline ns2__ValueTreeRow * soap_new_req_ns2__ValueTreeRow(struct soap *soap) { ns2__ValueTreeRow *_p = soap_instantiate_ns2__ValueTreeRow(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ValueTreeRow * soap_new_set_ns2__ValueTreeRow(struct soap *soap, std::vector<ns2__ValueTreeRow * >& row, std::vector<char * >& Value) { ns2__ValueTreeRow *_p = soap_instantiate_ns2__ValueTreeRow(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueTreeRow::row = row; _p->ns2__ValueTreeRow::Value = Value; } return _p; }

inline void soap_delete_ns2__ValueTreeRow(struct soap *soap, ns2__ValueTreeRow *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ValueTreeRow(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ValueTreeColumn
#define SOAP_TYPE_ns2__ValueTreeColumn (83)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ValueTreeColumn(struct soap*, const char*, int, const ns2__ValueTreeColumn *, const char*);
SOAP_FMAC3 ns2__ValueTreeColumn * SOAP_FMAC4 soap_in_ns2__ValueTreeColumn(struct soap*, const char*, ns2__ValueTreeColumn *, const char*);

#ifndef soap_write_ns2__ValueTreeColumn
#define soap_write_ns2__ValueTreeColumn(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:ValueTreeColumn", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTreeColumn * SOAP_FMAC4 soap_get_ns2__ValueTreeColumn(struct soap*, ns2__ValueTreeColumn *, const char*, const char*);

#ifndef soap_read_ns2__ValueTreeColumn
#define soap_read_ns2__ValueTreeColumn(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ValueTreeColumn(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__ValueTreeColumn * SOAP_FMAC2 soap_instantiate_ns2__ValueTreeColumn(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ValueTreeColumn * soap_new_ns2__ValueTreeColumn(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ValueTreeColumn(soap, n, NULL, NULL, NULL); }

inline ns2__ValueTreeColumn * soap_new_req_ns2__ValueTreeColumn(struct soap *soap) { ns2__ValueTreeColumn *_p = soap_instantiate_ns2__ValueTreeColumn(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ValueTreeColumn * soap_new_set_ns2__ValueTreeColumn(struct soap *soap, std::wstring *Name, ns2__TypeDescription *ValueType, std::string *Title, std::string *Width) { ns2__ValueTreeColumn *_p = soap_instantiate_ns2__ValueTreeColumn(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueTreeColumn::Name = Name; _p->ns2__ValueTreeColumn::ValueType = ValueType; _p->ns2__ValueTreeColumn::Title = Title; _p->ns2__ValueTreeColumn::Width = Width; } return _p; }

inline void soap_delete_ns2__ValueTreeColumn(struct soap *soap, ns2__ValueTreeColumn *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ValueTreeColumn(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ValueTree
#define SOAP_TYPE_ns2__ValueTree (82)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ValueTree(struct soap*, const char*, int, const ns2__ValueTree *, const char*);
SOAP_FMAC3 ns2__ValueTree * SOAP_FMAC4 soap_in_ns2__ValueTree(struct soap*, const char*, ns2__ValueTree *, const char*);

#ifndef soap_write_ns2__ValueTree
#define soap_write_ns2__ValueTree(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:ValueTree", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTree * SOAP_FMAC4 soap_get_ns2__ValueTree(struct soap*, ns2__ValueTree *, const char*, const char*);

#ifndef soap_read_ns2__ValueTree
#define soap_read_ns2__ValueTree(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ValueTree(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__ValueTree * SOAP_FMAC2 soap_instantiate_ns2__ValueTree(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ValueTree * soap_new_ns2__ValueTree(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ValueTree(soap, n, NULL, NULL, NULL); }

inline ns2__ValueTree * soap_new_req_ns2__ValueTree(struct soap *soap) { ns2__ValueTree *_p = soap_instantiate_ns2__ValueTree(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ValueTree * soap_new_set_ns2__ValueTree(struct soap *soap, std::vector<ns2__ValueTreeColumn * >& column, std::vector<ns2__ValueTreeRow * >& row) { ns2__ValueTree *_p = soap_instantiate_ns2__ValueTree(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueTree::column = column; _p->ns2__ValueTree::row = row; } return _p; }

inline void soap_delete_ns2__ValueTree(struct soap *soap, ns2__ValueTree *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ValueTree(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ValueTableRow
#define SOAP_TYPE_ns2__ValueTableRow (81)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ValueTableRow(struct soap*, const char*, int, const ns2__ValueTableRow *, const char*);
SOAP_FMAC3 ns2__ValueTableRow * SOAP_FMAC4 soap_in_ns2__ValueTableRow(struct soap*, const char*, ns2__ValueTableRow *, const char*);

#ifndef soap_write_ns2__ValueTableRow
#define soap_write_ns2__ValueTableRow(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:ValueTableRow", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTableRow * SOAP_FMAC4 soap_get_ns2__ValueTableRow(struct soap*, ns2__ValueTableRow *, const char*, const char*);

#ifndef soap_read_ns2__ValueTableRow
#define soap_read_ns2__ValueTableRow(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ValueTableRow(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__ValueTableRow * SOAP_FMAC2 soap_instantiate_ns2__ValueTableRow(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ValueTableRow * soap_new_ns2__ValueTableRow(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ValueTableRow(soap, n, NULL, NULL, NULL); }

inline ns2__ValueTableRow * soap_new_req_ns2__ValueTableRow(struct soap *soap) { ns2__ValueTableRow *_p = soap_instantiate_ns2__ValueTableRow(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ValueTableRow * soap_new_set_ns2__ValueTableRow(struct soap *soap, std::vector<wchar_t * >& Value) { ns2__ValueTableRow *_p = soap_instantiate_ns2__ValueTableRow(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueTableRow::Value = Value; } return _p; }

inline void soap_delete_ns2__ValueTableRow(struct soap *soap, ns2__ValueTableRow *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ValueTableRow(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ValueTableIndex
#define SOAP_TYPE_ns2__ValueTableIndex (80)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ValueTableIndex(struct soap*, const char*, int, const ns2__ValueTableIndex *, const char*);
SOAP_FMAC3 ns2__ValueTableIndex * SOAP_FMAC4 soap_in_ns2__ValueTableIndex(struct soap*, const char*, ns2__ValueTableIndex *, const char*);

#ifndef soap_write_ns2__ValueTableIndex
#define soap_write_ns2__ValueTableIndex(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:ValueTableIndex", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTableIndex * SOAP_FMAC4 soap_get_ns2__ValueTableIndex(struct soap*, ns2__ValueTableIndex *, const char*, const char*);

#ifndef soap_read_ns2__ValueTableIndex
#define soap_read_ns2__ValueTableIndex(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ValueTableIndex(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__ValueTableIndex * SOAP_FMAC2 soap_instantiate_ns2__ValueTableIndex(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ValueTableIndex * soap_new_ns2__ValueTableIndex(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ValueTableIndex(soap, n, NULL, NULL, NULL); }

inline ns2__ValueTableIndex * soap_new_req_ns2__ValueTableIndex(struct soap *soap, std::vector<std::wstring >& column) { ns2__ValueTableIndex *_p = soap_instantiate_ns2__ValueTableIndex(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueTableIndex::column = column; } return _p; }

inline ns2__ValueTableIndex * soap_new_set_ns2__ValueTableIndex(struct soap *soap, std::vector<std::wstring >& column) { ns2__ValueTableIndex *_p = soap_instantiate_ns2__ValueTableIndex(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueTableIndex::column = column; } return _p; }

inline void soap_delete_ns2__ValueTableIndex(struct soap *soap, ns2__ValueTableIndex *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ValueTableIndex(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ValueTableColumn
#define SOAP_TYPE_ns2__ValueTableColumn (79)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ValueTableColumn(struct soap*, const char*, int, const ns2__ValueTableColumn *, const char*);
SOAP_FMAC3 ns2__ValueTableColumn * SOAP_FMAC4 soap_in_ns2__ValueTableColumn(struct soap*, const char*, ns2__ValueTableColumn *, const char*);

#ifndef soap_write_ns2__ValueTableColumn
#define soap_write_ns2__ValueTableColumn(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:ValueTableColumn", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTableColumn * SOAP_FMAC4 soap_get_ns2__ValueTableColumn(struct soap*, ns2__ValueTableColumn *, const char*, const char*);

#ifndef soap_read_ns2__ValueTableColumn
#define soap_read_ns2__ValueTableColumn(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ValueTableColumn(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__ValueTableColumn * SOAP_FMAC2 soap_instantiate_ns2__ValueTableColumn(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ValueTableColumn * soap_new_ns2__ValueTableColumn(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ValueTableColumn(soap, n, NULL, NULL, NULL); }

inline ns2__ValueTableColumn * soap_new_req_ns2__ValueTableColumn(struct soap *soap) { ns2__ValueTableColumn *_p = soap_instantiate_ns2__ValueTableColumn(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ValueTableColumn * soap_new_set_ns2__ValueTableColumn(struct soap *soap, std::wstring *Name, ns2__TypeDescription *ValueType, std::wstring *Title, std::string *Width) { ns2__ValueTableColumn *_p = soap_instantiate_ns2__ValueTableColumn(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueTableColumn::Name = Name; _p->ns2__ValueTableColumn::ValueType = ValueType; _p->ns2__ValueTableColumn::Title = Title; _p->ns2__ValueTableColumn::Width = Width; } return _p; }

inline void soap_delete_ns2__ValueTableColumn(struct soap *soap, ns2__ValueTableColumn *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ValueTableColumn(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ValueTable
#define SOAP_TYPE_ns2__ValueTable (78)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ValueTable(struct soap*, const char*, int, const ns2__ValueTable *, const char*);
SOAP_FMAC3 ns2__ValueTable * SOAP_FMAC4 soap_in_ns2__ValueTable(struct soap*, const char*, ns2__ValueTable *, const char*);

#ifndef soap_write_ns2__ValueTable
#define soap_write_ns2__ValueTable(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:ValueTable", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTable * SOAP_FMAC4 soap_get_ns2__ValueTable(struct soap*, ns2__ValueTable *, const char*, const char*);

#ifndef soap_read_ns2__ValueTable
#define soap_read_ns2__ValueTable(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ValueTable(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__ValueTable * SOAP_FMAC2 soap_instantiate_ns2__ValueTable(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ValueTable * soap_new_ns2__ValueTable(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ValueTable(soap, n, NULL, NULL, NULL); }

inline ns2__ValueTable * soap_new_req_ns2__ValueTable(struct soap *soap) { ns2__ValueTable *_p = soap_instantiate_ns2__ValueTable(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ValueTable * soap_new_set_ns2__ValueTable(struct soap *soap, std::vector<ns2__ValueTableColumn * >& column, std::vector<ns2__ValueTableIndex * >& index, std::vector<ns2__ValueTableRow * >& row) { ns2__ValueTable *_p = soap_instantiate_ns2__ValueTable(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueTable::column = column; _p->ns2__ValueTable::index = index; _p->ns2__ValueTable::row = row; } return _p; }

inline void soap_delete_ns2__ValueTable(struct soap *soap, ns2__ValueTable *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ValueTable(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ValueListType
#define SOAP_TYPE_ns2__ValueListType (77)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ValueListType(struct soap*, const char*, int, const ns2__ValueListType *, const char*);
SOAP_FMAC3 ns2__ValueListType * SOAP_FMAC4 soap_in_ns2__ValueListType(struct soap*, const char*, ns2__ValueListType *, const char*);

#ifndef soap_write_ns2__ValueListType
#define soap_write_ns2__ValueListType(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:ValueListType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueListType * SOAP_FMAC4 soap_get_ns2__ValueListType(struct soap*, ns2__ValueListType *, const char*, const char*);

#ifndef soap_read_ns2__ValueListType
#define soap_read_ns2__ValueListType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ValueListType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__ValueListType * SOAP_FMAC2 soap_instantiate_ns2__ValueListType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ValueListType * soap_new_ns2__ValueListType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ValueListType(soap, n, NULL, NULL, NULL); }

inline ns2__ValueListType * soap_new_req_ns2__ValueListType(struct soap *soap, ns2__TypeDescription *valueType) { ns2__ValueListType *_p = soap_instantiate_ns2__ValueListType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueListType::valueType = valueType; } return _p; }

inline ns2__ValueListType * soap_new_set_ns2__ValueListType(struct soap *soap, ns2__TypeDescription *valueType, ns2__ValueListType *availableValues, std::vector<ns2__ValueListItemType * >& item, LONG64 *lastId) { ns2__ValueListType *_p = soap_instantiate_ns2__ValueListType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueListType::valueType = valueType; _p->ns2__ValueListType::availableValues = availableValues; _p->ns2__ValueListType::item = item; _p->ns2__ValueListType::lastId = lastId; } return _p; }

inline void soap_delete_ns2__ValueListType(struct soap *soap, ns2__ValueListType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ValueListType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ValueListItemType
#define SOAP_TYPE_ns2__ValueListItemType (76)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ValueListItemType(struct soap*, const char*, int, const ns2__ValueListItemType *, const char*);
SOAP_FMAC3 ns2__ValueListItemType * SOAP_FMAC4 soap_in_ns2__ValueListItemType(struct soap*, const char*, ns2__ValueListItemType *, const char*);

#ifndef soap_write_ns2__ValueListItemType
#define soap_write_ns2__ValueListItemType(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:ValueListItemType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueListItemType * SOAP_FMAC4 soap_get_ns2__ValueListItemType(struct soap*, ns2__ValueListItemType *, const char*, const char*);

#ifndef soap_read_ns2__ValueListItemType
#define soap_read_ns2__ValueListItemType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ValueListItemType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__ValueListItemType * SOAP_FMAC2 soap_instantiate_ns2__ValueListItemType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__ValueListItemType * soap_new_ns2__ValueListItemType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ValueListItemType(soap, n, NULL, NULL, NULL); }

inline ns2__ValueListItemType * soap_new_req_ns2__ValueListItemType(struct soap *soap) { ns2__ValueListItemType *_p = soap_instantiate_ns2__ValueListItemType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__ValueListItemType * soap_new_set_ns2__ValueListItemType(struct soap *soap, char *value, std::string *presentation, std::string *checkState, char *picture, LONG64 *id) { ns2__ValueListItemType *_p = soap_instantiate_ns2__ValueListItemType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__ValueListItemType::value = value; _p->ns2__ValueListItemType::presentation = presentation; _p->ns2__ValueListItemType::checkState = checkState; _p->ns2__ValueListItemType::picture = picture; _p->ns2__ValueListItemType::id = id; } return _p; }

inline void soap_delete_ns2__ValueListItemType(struct soap *soap, ns2__ValueListItemType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ValueListItemType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__TypeDescription
#define SOAP_TYPE_ns2__TypeDescription (75)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__TypeDescription(struct soap*, const char*, int, const ns2__TypeDescription *, const char*);
SOAP_FMAC3 ns2__TypeDescription * SOAP_FMAC4 soap_in_ns2__TypeDescription(struct soap*, const char*, ns2__TypeDescription *, const char*);

#ifndef soap_write_ns2__TypeDescription
#define soap_write_ns2__TypeDescription(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:TypeDescription", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__TypeDescription * SOAP_FMAC4 soap_get_ns2__TypeDescription(struct soap*, ns2__TypeDescription *, const char*, const char*);

#ifndef soap_read_ns2__TypeDescription
#define soap_read_ns2__TypeDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__TypeDescription(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__TypeDescription * SOAP_FMAC2 soap_instantiate_ns2__TypeDescription(struct soap*, int, const char*, const char*, size_t*);

inline ns2__TypeDescription * soap_new_ns2__TypeDescription(struct soap *soap, int n = -1) { return soap_instantiate_ns2__TypeDescription(soap, n, NULL, NULL, NULL); }

inline ns2__TypeDescription * soap_new_req_ns2__TypeDescription(struct soap *soap) { ns2__TypeDescription *_p = soap_instantiate_ns2__TypeDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__TypeDescription * soap_new_set_ns2__TypeDescription(struct soap *soap, std::vector<std::string >& Type, std::vector<std::string >& TypeSet, std::vector<std::string >& TypeId, ns2__NumberQualifiers *NumberQualifiers, ns2__StringQualifiers *StringQualifiers, ns2__DateQualifiers *DateQualifiers, ns2__BinaryDataQualifiers *BinaryDataQualifiers) { ns2__TypeDescription *_p = soap_instantiate_ns2__TypeDescription(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__TypeDescription::Type = Type; _p->ns2__TypeDescription::TypeSet = TypeSet; _p->ns2__TypeDescription::TypeId = TypeId; _p->ns2__TypeDescription::NumberQualifiers = NumberQualifiers; _p->ns2__TypeDescription::StringQualifiers = StringQualifiers; _p->ns2__TypeDescription::DateQualifiers = DateQualifiers; _p->ns2__TypeDescription::BinaryDataQualifiers = BinaryDataQualifiers; } return _p; }

inline void soap_delete_ns2__TypeDescription(struct soap *soap, ns2__TypeDescription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__TypeDescription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__Structure
#define SOAP_TYPE_ns2__Structure (74)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Structure(struct soap*, const char*, int, const ns2__Structure *, const char*);
SOAP_FMAC3 ns2__Structure * SOAP_FMAC4 soap_in_ns2__Structure(struct soap*, const char*, ns2__Structure *, const char*);

#ifndef soap_write_ns2__Structure
#define soap_write_ns2__Structure(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:Structure", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__Structure * SOAP_FMAC4 soap_get_ns2__Structure(struct soap*, ns2__Structure *, const char*, const char*);

#ifndef soap_read_ns2__Structure
#define soap_read_ns2__Structure(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Structure(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__Structure * SOAP_FMAC2 soap_instantiate_ns2__Structure(struct soap*, int, const char*, const char*, size_t*);

inline ns2__Structure * soap_new_ns2__Structure(struct soap *soap, int n = -1) { return soap_instantiate_ns2__Structure(soap, n, NULL, NULL, NULL); }

inline ns2__Structure * soap_new_req_ns2__Structure(struct soap *soap) { ns2__Structure *_p = soap_instantiate_ns2__Structure(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__Structure * soap_new_set_ns2__Structure(struct soap *soap, std::vector<_ns2__Structure_Property >*Property) { ns2__Structure *_p = soap_instantiate_ns2__Structure(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__Structure::Property = Property; } return _p; }

inline void soap_delete_ns2__Structure(struct soap *soap, ns2__Structure *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__Structure(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__StringQualifiers
#define SOAP_TYPE_ns2__StringQualifiers (73)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__StringQualifiers(struct soap*, const char*, int, const ns2__StringQualifiers *, const char*);
SOAP_FMAC3 ns2__StringQualifiers * SOAP_FMAC4 soap_in_ns2__StringQualifiers(struct soap*, const char*, ns2__StringQualifiers *, const char*);

#ifndef soap_write_ns2__StringQualifiers
#define soap_write_ns2__StringQualifiers(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:StringQualifiers", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__StringQualifiers * SOAP_FMAC4 soap_get_ns2__StringQualifiers(struct soap*, ns2__StringQualifiers *, const char*, const char*);

#ifndef soap_read_ns2__StringQualifiers
#define soap_read_ns2__StringQualifiers(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__StringQualifiers(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__StringQualifiers * SOAP_FMAC2 soap_instantiate_ns2__StringQualifiers(struct soap*, int, const char*, const char*, size_t*);

inline ns2__StringQualifiers * soap_new_ns2__StringQualifiers(struct soap *soap, int n = -1) { return soap_instantiate_ns2__StringQualifiers(soap, n, NULL, NULL, NULL); }

inline ns2__StringQualifiers * soap_new_req_ns2__StringQualifiers(struct soap *soap, std::string& Length, enum ns2__AllowedLength AllowedLength) { ns2__StringQualifiers *_p = soap_instantiate_ns2__StringQualifiers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__StringQualifiers::Length = Length; _p->ns2__StringQualifiers::AllowedLength = AllowedLength; } return _p; }

inline ns2__StringQualifiers * soap_new_set_ns2__StringQualifiers(struct soap *soap, std::string& Length, enum ns2__AllowedLength AllowedLength) { ns2__StringQualifiers *_p = soap_instantiate_ns2__StringQualifiers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__StringQualifiers::Length = Length; _p->ns2__StringQualifiers::AllowedLength = AllowedLength; } return _p; }

inline void soap_delete_ns2__StringQualifiers(struct soap *soap, ns2__StringQualifiers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__StringQualifiers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__StandardPeriod
#define SOAP_TYPE_ns2__StandardPeriod (72)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__StandardPeriod(struct soap*, const char*, int, const ns2__StandardPeriod *, const char*);
SOAP_FMAC3 ns2__StandardPeriod * SOAP_FMAC4 soap_in_ns2__StandardPeriod(struct soap*, const char*, ns2__StandardPeriod *, const char*);

#ifndef soap_write_ns2__StandardPeriod
#define soap_write_ns2__StandardPeriod(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:StandardPeriod", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__StandardPeriod * SOAP_FMAC4 soap_get_ns2__StandardPeriod(struct soap*, ns2__StandardPeriod *, const char*, const char*);

#ifndef soap_read_ns2__StandardPeriod
#define soap_read_ns2__StandardPeriod(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__StandardPeriod(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__StandardPeriod * SOAP_FMAC2 soap_instantiate_ns2__StandardPeriod(struct soap*, int, const char*, const char*, size_t*);

inline ns2__StandardPeriod * soap_new_ns2__StandardPeriod(struct soap *soap, int n = -1) { return soap_instantiate_ns2__StandardPeriod(soap, n, NULL, NULL, NULL); }

inline ns2__StandardPeriod * soap_new_req_ns2__StandardPeriod(struct soap *soap, char *variant) { ns2__StandardPeriod *_p = soap_instantiate_ns2__StandardPeriod(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__StandardPeriod::variant = variant; } return _p; }

inline ns2__StandardPeriod * soap_new_set_ns2__StandardPeriod(struct soap *soap, char *variant, time_t *startDate, time_t *endDate) { ns2__StandardPeriod *_p = soap_instantiate_ns2__StandardPeriod(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__StandardPeriod::variant = variant; _p->ns2__StandardPeriod::startDate = startDate; _p->ns2__StandardPeriod::endDate = endDate; } return _p; }

inline void soap_delete_ns2__StandardPeriod(struct soap *soap, ns2__StandardPeriod *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__StandardPeriod(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__StandardBeginningDate
#define SOAP_TYPE_ns2__StandardBeginningDate (71)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__StandardBeginningDate(struct soap*, const char*, int, const ns2__StandardBeginningDate *, const char*);
SOAP_FMAC3 ns2__StandardBeginningDate * SOAP_FMAC4 soap_in_ns2__StandardBeginningDate(struct soap*, const char*, ns2__StandardBeginningDate *, const char*);

#ifndef soap_write_ns2__StandardBeginningDate
#define soap_write_ns2__StandardBeginningDate(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:StandardBeginningDate", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__StandardBeginningDate * SOAP_FMAC4 soap_get_ns2__StandardBeginningDate(struct soap*, ns2__StandardBeginningDate *, const char*, const char*);

#ifndef soap_read_ns2__StandardBeginningDate
#define soap_read_ns2__StandardBeginningDate(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__StandardBeginningDate(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__StandardBeginningDate * SOAP_FMAC2 soap_instantiate_ns2__StandardBeginningDate(struct soap*, int, const char*, const char*, size_t*);

inline ns2__StandardBeginningDate * soap_new_ns2__StandardBeginningDate(struct soap *soap, int n = -1) { return soap_instantiate_ns2__StandardBeginningDate(soap, n, NULL, NULL, NULL); }

inline ns2__StandardBeginningDate * soap_new_req_ns2__StandardBeginningDate(struct soap *soap, char *variant) { ns2__StandardBeginningDate *_p = soap_instantiate_ns2__StandardBeginningDate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__StandardBeginningDate::variant = variant; } return _p; }

inline ns2__StandardBeginningDate * soap_new_set_ns2__StandardBeginningDate(struct soap *soap, char *variant, time_t *date) { ns2__StandardBeginningDate *_p = soap_instantiate_ns2__StandardBeginningDate(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__StandardBeginningDate::variant = variant; _p->ns2__StandardBeginningDate::date = date; } return _p; }

inline void soap_delete_ns2__StandardBeginningDate(struct soap *soap, ns2__StandardBeginningDate *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__StandardBeginningDate(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__NumberQualifiers
#define SOAP_TYPE_ns2__NumberQualifiers (70)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__NumberQualifiers(struct soap*, const char*, int, const ns2__NumberQualifiers *, const char*);
SOAP_FMAC3 ns2__NumberQualifiers * SOAP_FMAC4 soap_in_ns2__NumberQualifiers(struct soap*, const char*, ns2__NumberQualifiers *, const char*);

#ifndef soap_write_ns2__NumberQualifiers
#define soap_write_ns2__NumberQualifiers(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:NumberQualifiers", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__NumberQualifiers * SOAP_FMAC4 soap_get_ns2__NumberQualifiers(struct soap*, ns2__NumberQualifiers *, const char*, const char*);

#ifndef soap_read_ns2__NumberQualifiers
#define soap_read_ns2__NumberQualifiers(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__NumberQualifiers(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__NumberQualifiers * SOAP_FMAC2 soap_instantiate_ns2__NumberQualifiers(struct soap*, int, const char*, const char*, size_t*);

inline ns2__NumberQualifiers * soap_new_ns2__NumberQualifiers(struct soap *soap, int n = -1) { return soap_instantiate_ns2__NumberQualifiers(soap, n, NULL, NULL, NULL); }

inline ns2__NumberQualifiers * soap_new_req_ns2__NumberQualifiers(struct soap *soap, std::string& Digits, std::string& FractionDigits, enum ns2__AllowedSign AllowedSign) { ns2__NumberQualifiers *_p = soap_instantiate_ns2__NumberQualifiers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__NumberQualifiers::Digits = Digits; _p->ns2__NumberQualifiers::FractionDigits = FractionDigits; _p->ns2__NumberQualifiers::AllowedSign = AllowedSign; } return _p; }

inline ns2__NumberQualifiers * soap_new_set_ns2__NumberQualifiers(struct soap *soap, std::string& Digits, std::string& FractionDigits, enum ns2__AllowedSign AllowedSign) { ns2__NumberQualifiers *_p = soap_instantiate_ns2__NumberQualifiers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__NumberQualifiers::Digits = Digits; _p->ns2__NumberQualifiers::FractionDigits = FractionDigits; _p->ns2__NumberQualifiers::AllowedSign = AllowedSign; } return _p; }

inline void soap_delete_ns2__NumberQualifiers(struct soap *soap, ns2__NumberQualifiers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__NumberQualifiers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__Map
#define SOAP_TYPE_ns2__Map (69)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Map(struct soap*, const char*, int, const ns2__Map *, const char*);
SOAP_FMAC3 ns2__Map * SOAP_FMAC4 soap_in_ns2__Map(struct soap*, const char*, ns2__Map *, const char*);

#ifndef soap_write_ns2__Map
#define soap_write_ns2__Map(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:Map", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__Map * SOAP_FMAC4 soap_get_ns2__Map(struct soap*, ns2__Map *, const char*, const char*);

#ifndef soap_read_ns2__Map
#define soap_read_ns2__Map(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Map(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__Map * SOAP_FMAC2 soap_instantiate_ns2__Map(struct soap*, int, const char*, const char*, size_t*);

inline ns2__Map * soap_new_ns2__Map(struct soap *soap, int n = -1) { return soap_instantiate_ns2__Map(soap, n, NULL, NULL, NULL); }

inline ns2__Map * soap_new_req_ns2__Map(struct soap *soap) { ns2__Map *_p = soap_instantiate_ns2__Map(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__Map * soap_new_set_ns2__Map(struct soap *soap, std::vector<ns2__KeyAndValue * >& pair) { ns2__Map *_p = soap_instantiate_ns2__Map(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__Map::pair = pair; } return _p; }

inline void soap_delete_ns2__Map(struct soap *soap, ns2__Map *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__Map(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__LocalStringType
#define SOAP_TYPE_ns2__LocalStringType (68)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__LocalStringType(struct soap*, const char*, int, const ns2__LocalStringType *, const char*);
SOAP_FMAC3 ns2__LocalStringType * SOAP_FMAC4 soap_in_ns2__LocalStringType(struct soap*, const char*, ns2__LocalStringType *, const char*);

#ifndef soap_write_ns2__LocalStringType
#define soap_write_ns2__LocalStringType(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:LocalStringType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__LocalStringType * SOAP_FMAC4 soap_get_ns2__LocalStringType(struct soap*, ns2__LocalStringType *, const char*, const char*);

#ifndef soap_read_ns2__LocalStringType
#define soap_read_ns2__LocalStringType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__LocalStringType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__LocalStringType * SOAP_FMAC2 soap_instantiate_ns2__LocalStringType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__LocalStringType * soap_new_ns2__LocalStringType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__LocalStringType(soap, n, NULL, NULL, NULL); }

inline ns2__LocalStringType * soap_new_req_ns2__LocalStringType(struct soap *soap) { ns2__LocalStringType *_p = soap_instantiate_ns2__LocalStringType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__LocalStringType * soap_new_set_ns2__LocalStringType(struct soap *soap, std::vector<ns2__LocalStringItemType * >& item) { ns2__LocalStringType *_p = soap_instantiate_ns2__LocalStringType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__LocalStringType::item = item; } return _p; }

inline void soap_delete_ns2__LocalStringType(struct soap *soap, ns2__LocalStringType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__LocalStringType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__LocalStringItemType
#define SOAP_TYPE_ns2__LocalStringItemType (67)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__LocalStringItemType(struct soap*, const char*, int, const ns2__LocalStringItemType *, const char*);
SOAP_FMAC3 ns2__LocalStringItemType * SOAP_FMAC4 soap_in_ns2__LocalStringItemType(struct soap*, const char*, ns2__LocalStringItemType *, const char*);

#ifndef soap_write_ns2__LocalStringItemType
#define soap_write_ns2__LocalStringItemType(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:LocalStringItemType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__LocalStringItemType * SOAP_FMAC4 soap_get_ns2__LocalStringItemType(struct soap*, ns2__LocalStringItemType *, const char*, const char*);

#ifndef soap_read_ns2__LocalStringItemType
#define soap_read_ns2__LocalStringItemType(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__LocalStringItemType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__LocalStringItemType * SOAP_FMAC2 soap_instantiate_ns2__LocalStringItemType(struct soap*, int, const char*, const char*, size_t*);

inline ns2__LocalStringItemType * soap_new_ns2__LocalStringItemType(struct soap *soap, int n = -1) { return soap_instantiate_ns2__LocalStringItemType(soap, n, NULL, NULL, NULL); }

inline ns2__LocalStringItemType * soap_new_req_ns2__LocalStringItemType(struct soap *soap, std::wstring& lang, std::string& content) { ns2__LocalStringItemType *_p = soap_instantiate_ns2__LocalStringItemType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__LocalStringItemType::lang = lang; _p->ns2__LocalStringItemType::content = content; } return _p; }

inline ns2__LocalStringItemType * soap_new_set_ns2__LocalStringItemType(struct soap *soap, std::wstring& lang, std::string& content) { ns2__LocalStringItemType *_p = soap_instantiate_ns2__LocalStringItemType(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__LocalStringItemType::lang = lang; _p->ns2__LocalStringItemType::content = content; } return _p; }

inline void soap_delete_ns2__LocalStringItemType(struct soap *soap, ns2__LocalStringItemType *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__LocalStringItemType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__KeyAndValue
#define SOAP_TYPE_ns2__KeyAndValue (66)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__KeyAndValue(struct soap*, const char*, int, const ns2__KeyAndValue *, const char*);
SOAP_FMAC3 ns2__KeyAndValue * SOAP_FMAC4 soap_in_ns2__KeyAndValue(struct soap*, const char*, ns2__KeyAndValue *, const char*);

#ifndef soap_write_ns2__KeyAndValue
#define soap_write_ns2__KeyAndValue(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:KeyAndValue", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__KeyAndValue * SOAP_FMAC4 soap_get_ns2__KeyAndValue(struct soap*, ns2__KeyAndValue *, const char*, const char*);

#ifndef soap_read_ns2__KeyAndValue
#define soap_read_ns2__KeyAndValue(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__KeyAndValue(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__KeyAndValue * SOAP_FMAC2 soap_instantiate_ns2__KeyAndValue(struct soap*, int, const char*, const char*, size_t*);

inline ns2__KeyAndValue * soap_new_ns2__KeyAndValue(struct soap *soap, int n = -1) { return soap_instantiate_ns2__KeyAndValue(soap, n, NULL, NULL, NULL); }

inline ns2__KeyAndValue * soap_new_req_ns2__KeyAndValue(struct soap *soap, char *Key) { ns2__KeyAndValue *_p = soap_instantiate_ns2__KeyAndValue(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__KeyAndValue::Key = Key; } return _p; }

inline ns2__KeyAndValue * soap_new_set_ns2__KeyAndValue(struct soap *soap, char *Key, char *Value) { ns2__KeyAndValue *_p = soap_instantiate_ns2__KeyAndValue(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__KeyAndValue::Key = Key; _p->ns2__KeyAndValue::Value = Value; } return _p; }

inline void soap_delete_ns2__KeyAndValue(struct soap *soap, ns2__KeyAndValue *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__KeyAndValue(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__GenericException
#define SOAP_TYPE_ns2__GenericException (65)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__GenericException(struct soap*, const char*, int, const ns2__GenericException *, const char*);
SOAP_FMAC3 ns2__GenericException * SOAP_FMAC4 soap_in_ns2__GenericException(struct soap*, const char*, ns2__GenericException *, const char*);

#ifndef soap_write_ns2__GenericException
#define soap_write_ns2__GenericException(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:GenericException", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__GenericException * SOAP_FMAC4 soap_get_ns2__GenericException(struct soap*, ns2__GenericException *, const char*, const char*);

#ifndef soap_read_ns2__GenericException
#define soap_read_ns2__GenericException(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__GenericException(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__GenericException * SOAP_FMAC2 soap_instantiate_ns2__GenericException(struct soap*, int, const char*, const char*, size_t*);

inline ns2__GenericException * soap_new_ns2__GenericException(struct soap *soap, int n = -1) { return soap_instantiate_ns2__GenericException(soap, n, NULL, NULL, NULL); }

inline ns2__GenericException * soap_new_req_ns2__GenericException(struct soap *soap, std::string& descr, std::string& clsid) { ns2__GenericException *_p = soap_instantiate_ns2__GenericException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__GenericException::descr = descr; _p->ns2__GenericException::clsid = clsid; } return _p; }

inline ns2__GenericException * soap_new_set_ns2__GenericException(struct soap *soap, std::string& descr, ns2__GenericException *inner, std::string& clsid, bool encoded) { ns2__GenericException *_p = soap_instantiate_ns2__GenericException(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__GenericException::descr = descr; _p->ns2__GenericException::inner = inner; _p->ns2__GenericException::clsid = clsid; _p->ns2__GenericException::encoded = encoded; } return _p; }

inline void soap_delete_ns2__GenericException(struct soap *soap, ns2__GenericException *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__GenericException(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__FixedStructure
#define SOAP_TYPE_ns2__FixedStructure (64)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__FixedStructure(struct soap*, const char*, int, const ns2__FixedStructure *, const char*);
SOAP_FMAC3 ns2__FixedStructure * SOAP_FMAC4 soap_in_ns2__FixedStructure(struct soap*, const char*, ns2__FixedStructure *, const char*);

#ifndef soap_write_ns2__FixedStructure
#define soap_write_ns2__FixedStructure(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:FixedStructure", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__FixedStructure * SOAP_FMAC4 soap_get_ns2__FixedStructure(struct soap*, ns2__FixedStructure *, const char*, const char*);

#ifndef soap_read_ns2__FixedStructure
#define soap_read_ns2__FixedStructure(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__FixedStructure(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__FixedStructure * SOAP_FMAC2 soap_instantiate_ns2__FixedStructure(struct soap*, int, const char*, const char*, size_t*);

inline ns2__FixedStructure * soap_new_ns2__FixedStructure(struct soap *soap, int n = -1) { return soap_instantiate_ns2__FixedStructure(soap, n, NULL, NULL, NULL); }

inline ns2__FixedStructure * soap_new_req_ns2__FixedStructure(struct soap *soap) { ns2__FixedStructure *_p = soap_instantiate_ns2__FixedStructure(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__FixedStructure * soap_new_set_ns2__FixedStructure(struct soap *soap, std::vector<_ns2__FixedStructure_Property >*Property) { ns2__FixedStructure *_p = soap_instantiate_ns2__FixedStructure(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__FixedStructure::Property = Property; } return _p; }

inline void soap_delete_ns2__FixedStructure(struct soap *soap, ns2__FixedStructure *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__FixedStructure(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__FixedMap
#define SOAP_TYPE_ns2__FixedMap (63)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__FixedMap(struct soap*, const char*, int, const ns2__FixedMap *, const char*);
SOAP_FMAC3 ns2__FixedMap * SOAP_FMAC4 soap_in_ns2__FixedMap(struct soap*, const char*, ns2__FixedMap *, const char*);

#ifndef soap_write_ns2__FixedMap
#define soap_write_ns2__FixedMap(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:FixedMap", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__FixedMap * SOAP_FMAC4 soap_get_ns2__FixedMap(struct soap*, ns2__FixedMap *, const char*, const char*);

#ifndef soap_read_ns2__FixedMap
#define soap_read_ns2__FixedMap(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__FixedMap(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__FixedMap * SOAP_FMAC2 soap_instantiate_ns2__FixedMap(struct soap*, int, const char*, const char*, size_t*);

inline ns2__FixedMap * soap_new_ns2__FixedMap(struct soap *soap, int n = -1) { return soap_instantiate_ns2__FixedMap(soap, n, NULL, NULL, NULL); }

inline ns2__FixedMap * soap_new_req_ns2__FixedMap(struct soap *soap) { ns2__FixedMap *_p = soap_instantiate_ns2__FixedMap(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__FixedMap * soap_new_set_ns2__FixedMap(struct soap *soap, std::vector<ns2__KeyAndValue * >& pair) { ns2__FixedMap *_p = soap_instantiate_ns2__FixedMap(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__FixedMap::pair = pair; } return _p; }

inline void soap_delete_ns2__FixedMap(struct soap *soap, ns2__FixedMap *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__FixedMap(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__FixedArray
#define SOAP_TYPE_ns2__FixedArray (62)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__FixedArray(struct soap*, const char*, int, const ns2__FixedArray *, const char*);
SOAP_FMAC3 ns2__FixedArray * SOAP_FMAC4 soap_in_ns2__FixedArray(struct soap*, const char*, ns2__FixedArray *, const char*);

#ifndef soap_write_ns2__FixedArray
#define soap_write_ns2__FixedArray(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:FixedArray", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__FixedArray * SOAP_FMAC4 soap_get_ns2__FixedArray(struct soap*, ns2__FixedArray *, const char*, const char*);

#ifndef soap_read_ns2__FixedArray
#define soap_read_ns2__FixedArray(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__FixedArray(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__FixedArray * SOAP_FMAC2 soap_instantiate_ns2__FixedArray(struct soap*, int, const char*, const char*, size_t*);

inline ns2__FixedArray * soap_new_ns2__FixedArray(struct soap *soap, int n = -1) { return soap_instantiate_ns2__FixedArray(soap, n, NULL, NULL, NULL); }

inline ns2__FixedArray * soap_new_req_ns2__FixedArray(struct soap *soap) { ns2__FixedArray *_p = soap_instantiate_ns2__FixedArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__FixedArray * soap_new_set_ns2__FixedArray(struct soap *soap, std::vector<char * >& Value) { ns2__FixedArray *_p = soap_instantiate_ns2__FixedArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__FixedArray::Value = Value; } return _p; }

inline void soap_delete_ns2__FixedArray(struct soap *soap, ns2__FixedArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__FixedArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__Exception
#define SOAP_TYPE_ns2__Exception (61)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Exception(struct soap*, const char*, int, const ns2__Exception *, const char*);
SOAP_FMAC3 ns2__Exception * SOAP_FMAC4 soap_in_ns2__Exception(struct soap*, const char*, ns2__Exception *, const char*);

#ifndef soap_write_ns2__Exception
#define soap_write_ns2__Exception(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:Exception", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__Exception * SOAP_FMAC4 soap_get_ns2__Exception(struct soap*, ns2__Exception *, const char*, const char*);

#ifndef soap_read_ns2__Exception
#define soap_read_ns2__Exception(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Exception(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__Exception * SOAP_FMAC2 soap_instantiate_ns2__Exception(struct soap*, int, const char*, const char*, size_t*);

inline ns2__Exception * soap_new_ns2__Exception(struct soap *soap, int n = -1) { return soap_instantiate_ns2__Exception(soap, n, NULL, NULL, NULL); }

inline ns2__Exception * soap_new_req_ns2__Exception(struct soap *soap, std::string& descr1, std::string& clsid1) { ns2__Exception *_p = soap_instantiate_ns2__Exception(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__GenericException::descr = descr1; _p->ns2__GenericException::clsid = clsid1; } return _p; }

inline ns2__Exception * soap_new_set_ns2__Exception(struct soap *soap, xsd__base64Binary *data, std::string& descr1, ns2__GenericException *inner1, std::string& clsid1, bool encoded1) { ns2__Exception *_p = soap_instantiate_ns2__Exception(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__Exception::data = data; _p->ns2__GenericException::descr = descr1; _p->ns2__GenericException::inner = inner1; _p->ns2__GenericException::clsid = clsid1; _p->ns2__GenericException::encoded = encoded1; } return _p; }

inline void soap_delete_ns2__Exception(struct soap *soap, ns2__Exception *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__Exception(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__DateQualifiers
#define SOAP_TYPE_ns2__DateQualifiers (60)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__DateQualifiers(struct soap*, const char*, int, const ns2__DateQualifiers *, const char*);
SOAP_FMAC3 ns2__DateQualifiers * SOAP_FMAC4 soap_in_ns2__DateQualifiers(struct soap*, const char*, ns2__DateQualifiers *, const char*);

#ifndef soap_write_ns2__DateQualifiers
#define soap_write_ns2__DateQualifiers(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:DateQualifiers", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__DateQualifiers * SOAP_FMAC4 soap_get_ns2__DateQualifiers(struct soap*, ns2__DateQualifiers *, const char*, const char*);

#ifndef soap_read_ns2__DateQualifiers
#define soap_read_ns2__DateQualifiers(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__DateQualifiers(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__DateQualifiers * SOAP_FMAC2 soap_instantiate_ns2__DateQualifiers(struct soap*, int, const char*, const char*, size_t*);

inline ns2__DateQualifiers * soap_new_ns2__DateQualifiers(struct soap *soap, int n = -1) { return soap_instantiate_ns2__DateQualifiers(soap, n, NULL, NULL, NULL); }

inline ns2__DateQualifiers * soap_new_req_ns2__DateQualifiers(struct soap *soap, enum ns2__DateFractions DateFractions) { ns2__DateQualifiers *_p = soap_instantiate_ns2__DateQualifiers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__DateQualifiers::DateFractions = DateFractions; } return _p; }

inline ns2__DateQualifiers * soap_new_set_ns2__DateQualifiers(struct soap *soap, enum ns2__DateFractions DateFractions) { ns2__DateQualifiers *_p = soap_instantiate_ns2__DateQualifiers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__DateQualifiers::DateFractions = DateFractions; } return _p; }

inline void soap_delete_ns2__DateQualifiers(struct soap *soap, ns2__DateQualifiers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__DateQualifiers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__DataFillErrors
#define SOAP_TYPE_ns2__DataFillErrors (59)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__DataFillErrors(struct soap*, const char*, int, const ns2__DataFillErrors *, const char*);
SOAP_FMAC3 ns2__DataFillErrors * SOAP_FMAC4 soap_in_ns2__DataFillErrors(struct soap*, const char*, ns2__DataFillErrors *, const char*);

#ifndef soap_write_ns2__DataFillErrors
#define soap_write_ns2__DataFillErrors(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:DataFillErrors", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__DataFillErrors * SOAP_FMAC4 soap_get_ns2__DataFillErrors(struct soap*, ns2__DataFillErrors *, const char*, const char*);

#ifndef soap_read_ns2__DataFillErrors
#define soap_read_ns2__DataFillErrors(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__DataFillErrors(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__DataFillErrors * SOAP_FMAC2 soap_instantiate_ns2__DataFillErrors(struct soap*, int, const char*, const char*, size_t*);

inline ns2__DataFillErrors * soap_new_ns2__DataFillErrors(struct soap *soap, int n = -1) { return soap_instantiate_ns2__DataFillErrors(soap, n, NULL, NULL, NULL); }

inline ns2__DataFillErrors * soap_new_req_ns2__DataFillErrors(struct soap *soap) { ns2__DataFillErrors *_p = soap_instantiate_ns2__DataFillErrors(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__DataFillErrors * soap_new_set_ns2__DataFillErrors(struct soap *soap, std::vector<ns2__DataFillError * >& item) { ns2__DataFillErrors *_p = soap_instantiate_ns2__DataFillErrors(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__DataFillErrors::item = item; } return _p; }

inline void soap_delete_ns2__DataFillErrors(struct soap *soap, ns2__DataFillErrors *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__DataFillErrors(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__DataFillError
#define SOAP_TYPE_ns2__DataFillError (58)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__DataFillError(struct soap*, const char*, int, const ns2__DataFillError *, const char*);
SOAP_FMAC3 ns2__DataFillError * SOAP_FMAC4 soap_in_ns2__DataFillError(struct soap*, const char*, ns2__DataFillError *, const char*);

#ifndef soap_write_ns2__DataFillError
#define soap_write_ns2__DataFillError(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:DataFillError", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__DataFillError * SOAP_FMAC4 soap_get_ns2__DataFillError(struct soap*, ns2__DataFillError *, const char*, const char*);

#ifndef soap_read_ns2__DataFillError
#define soap_read_ns2__DataFillError(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__DataFillError(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__DataFillError * SOAP_FMAC2 soap_instantiate_ns2__DataFillError(struct soap*, int, const char*, const char*, size_t*);

inline ns2__DataFillError * soap_new_ns2__DataFillError(struct soap *soap, int n = -1) { return soap_instantiate_ns2__DataFillError(soap, n, NULL, NULL, NULL); }

inline ns2__DataFillError * soap_new_req_ns2__DataFillError(struct soap *soap, std::string& Data, std::string& DataDescr, std::string& Text, enum ns2__FillCheckErrorStatus Status) { ns2__DataFillError *_p = soap_instantiate_ns2__DataFillError(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__DataFillError::Data = Data; _p->ns2__DataFillError::DataDescr = DataDescr; _p->ns2__DataFillError::Text = Text; _p->ns2__DataFillError::Status = Status; } return _p; }

inline ns2__DataFillError * soap_new_set_ns2__DataFillError(struct soap *soap, std::string& Data, std::string& DataDescr, std::string& Text, enum ns2__FillCheckErrorStatus Status) { ns2__DataFillError *_p = soap_instantiate_ns2__DataFillError(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__DataFillError::Data = Data; _p->ns2__DataFillError::DataDescr = DataDescr; _p->ns2__DataFillError::Text = Text; _p->ns2__DataFillError::Status = Status; } return _p; }

inline void soap_delete_ns2__DataFillError(struct soap *soap, ns2__DataFillError *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__DataFillError(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__BinaryDataQualifiers
#define SOAP_TYPE_ns2__BinaryDataQualifiers (57)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__BinaryDataQualifiers(struct soap*, const char*, int, const ns2__BinaryDataQualifiers *, const char*);
SOAP_FMAC3 ns2__BinaryDataQualifiers * SOAP_FMAC4 soap_in_ns2__BinaryDataQualifiers(struct soap*, const char*, ns2__BinaryDataQualifiers *, const char*);

#ifndef soap_write_ns2__BinaryDataQualifiers
#define soap_write_ns2__BinaryDataQualifiers(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:BinaryDataQualifiers", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__BinaryDataQualifiers * SOAP_FMAC4 soap_get_ns2__BinaryDataQualifiers(struct soap*, ns2__BinaryDataQualifiers *, const char*, const char*);

#ifndef soap_read_ns2__BinaryDataQualifiers
#define soap_read_ns2__BinaryDataQualifiers(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__BinaryDataQualifiers(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__BinaryDataQualifiers * SOAP_FMAC2 soap_instantiate_ns2__BinaryDataQualifiers(struct soap*, int, const char*, const char*, size_t*);

inline ns2__BinaryDataQualifiers * soap_new_ns2__BinaryDataQualifiers(struct soap *soap, int n = -1) { return soap_instantiate_ns2__BinaryDataQualifiers(soap, n, NULL, NULL, NULL); }

inline ns2__BinaryDataQualifiers * soap_new_req_ns2__BinaryDataQualifiers(struct soap *soap, std::string& Length, enum ns2__AllowedLength AllowedLength) { ns2__BinaryDataQualifiers *_p = soap_instantiate_ns2__BinaryDataQualifiers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__BinaryDataQualifiers::Length = Length; _p->ns2__BinaryDataQualifiers::AllowedLength = AllowedLength; } return _p; }

inline ns2__BinaryDataQualifiers * soap_new_set_ns2__BinaryDataQualifiers(struct soap *soap, std::string& Length, enum ns2__AllowedLength AllowedLength) { ns2__BinaryDataQualifiers *_p = soap_instantiate_ns2__BinaryDataQualifiers(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__BinaryDataQualifiers::Length = Length; _p->ns2__BinaryDataQualifiers::AllowedLength = AllowedLength; } return _p; }

inline void soap_delete_ns2__BinaryDataQualifiers(struct soap *soap, ns2__BinaryDataQualifiers *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__BinaryDataQualifiers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__Array
#define SOAP_TYPE_ns2__Array (56)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Array(struct soap*, const char*, int, const ns2__Array *, const char*);
SOAP_FMAC3 ns2__Array * SOAP_FMAC4 soap_in_ns2__Array(struct soap*, const char*, ns2__Array *, const char*);

#ifndef soap_write_ns2__Array
#define soap_write_ns2__Array(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:Array", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__Array * SOAP_FMAC4 soap_get_ns2__Array(struct soap*, ns2__Array *, const char*, const char*);

#ifndef soap_read_ns2__Array
#define soap_read_ns2__Array(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Array(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__Array * SOAP_FMAC2 soap_instantiate_ns2__Array(struct soap*, int, const char*, const char*, size_t*);

inline ns2__Array * soap_new_ns2__Array(struct soap *soap, int n = -1) { return soap_instantiate_ns2__Array(soap, n, NULL, NULL, NULL); }

inline ns2__Array * soap_new_req_ns2__Array(struct soap *soap) { ns2__Array *_p = soap_instantiate_ns2__Array(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__Array * soap_new_set_ns2__Array(struct soap *soap, std::vector<wchar_t * >& Value) { ns2__Array *_p = soap_instantiate_ns2__Array(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__Array::Value = Value; } return _p; }

inline void soap_delete_ns2__Array(struct soap *soap, ns2__Array *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__Array(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryUniversalResponse
#define SOAP_TYPE__ns1__QueryUniversalResponse (55)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryUniversalResponse(struct soap*, const char*, int, const _ns1__QueryUniversalResponse *, const char*);
SOAP_FMAC3 _ns1__QueryUniversalResponse * SOAP_FMAC4 soap_in__ns1__QueryUniversalResponse(struct soap*, const char*, _ns1__QueryUniversalResponse *, const char*);

#ifndef soap_write__ns1__QueryUniversalResponse
#define soap_write__ns1__QueryUniversalResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:QueryUniversalResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__QueryUniversalResponse * SOAP_FMAC4 soap_get__ns1__QueryUniversalResponse(struct soap*, _ns1__QueryUniversalResponse *, const char*, const char*);

#ifndef soap_read__ns1__QueryUniversalResponse
#define soap_read__ns1__QueryUniversalResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryUniversalResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__QueryUniversalResponse * SOAP_FMAC2 soap_instantiate__ns1__QueryUniversalResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryUniversalResponse * soap_new__ns1__QueryUniversalResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryUniversalResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryUniversalResponse * soap_new_req__ns1__QueryUniversalResponse(struct soap *soap) { _ns1__QueryUniversalResponse *_p = soap_instantiate__ns1__QueryUniversalResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__QueryUniversalResponse * soap_new_set__ns1__QueryUniversalResponse(struct soap *soap, ns2__ValueTable *return_) { _ns1__QueryUniversalResponse *_p = soap_instantiate__ns1__QueryUniversalResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryUniversalResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1__QueryUniversalResponse(struct soap *soap, _ns1__QueryUniversalResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryUniversalResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryUniversal
#define SOAP_TYPE__ns1__QueryUniversal (54)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryUniversal(struct soap*, const char*, int, const _ns1__QueryUniversal *, const char*);
SOAP_FMAC3 _ns1__QueryUniversal * SOAP_FMAC4 soap_in__ns1__QueryUniversal(struct soap*, const char*, _ns1__QueryUniversal *, const char*);

#ifndef soap_write__ns1__QueryUniversal
#define soap_write__ns1__QueryUniversal(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:QueryUniversal", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__QueryUniversal * SOAP_FMAC4 soap_get__ns1__QueryUniversal(struct soap*, _ns1__QueryUniversal *, const char*, const char*);

#ifndef soap_read__ns1__QueryUniversal
#define soap_read__ns1__QueryUniversal(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryUniversal(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__QueryUniversal * SOAP_FMAC2 soap_instantiate__ns1__QueryUniversal(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryUniversal * soap_new__ns1__QueryUniversal(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryUniversal(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryUniversal * soap_new_req__ns1__QueryUniversal(struct soap *soap) { _ns1__QueryUniversal *_p = soap_instantiate__ns1__QueryUniversal(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__QueryUniversal * soap_new_set__ns1__QueryUniversal(struct soap *soap, std::wstring *SystemExpression) { _ns1__QueryUniversal *_p = soap_instantiate__ns1__QueryUniversal(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryUniversal::SystemExpression = SystemExpression; } return _p; }

inline void soap_delete__ns1__QueryUniversal(struct soap *soap, _ns1__QueryUniversal *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryUniversal(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response
#define SOAP_TYPE__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response (53)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, const char*, int, const _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *, const char*);
SOAP_FMAC3 _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * SOAP_FMAC4 soap_in__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, const char*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *, const char*);

#ifndef soap_write__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response
#define soap_write__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ЗаписатьДанныеResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * SOAP_FMAC4 soap_get__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *, const char*, const char*);

#ifndef soap_read__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response
#define soap_read__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * SOAP_FMAC2 soap_instantiate__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * soap_new__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, n, NULL, NULL, NULL); }

inline _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * soap_new_req__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap *soap) { _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *_p = soap_instantiate__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * soap_new_set__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap *soap, bool *return_) { _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *_p = soap_instantiate__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response::return_ = return_; } return _p; }

inline void soap_delete__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap *soap, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435
#define SOAP_TYPE__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 (52)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, const char*, int, const _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *, const char*);
SOAP_FMAC3 _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * SOAP_FMAC4 soap_in__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, const char*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *, const char*);

#ifndef soap_write__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435
#define soap_write__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ЗаписатьДанные", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * SOAP_FMAC4 soap_get__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *, const char*, const char*);

#ifndef soap_read__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435
#define soap_read__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * SOAP_FMAC2 soap_instantiate__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * soap_new__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, n, NULL, NULL, NULL); }

inline _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * soap_new_req__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap *soap) { _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *_p = soap_instantiate__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * soap_new_set__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap *soap, std::string *_x0414_x0430_x043d_x043d_x044b_x0435_x041e_x0431_x044a_x0435_x043a_x0442_x0430) { _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *_p = soap_instantiate__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435::_x0414_x0430_x043d_x043d_x044b_x0435_x041e_x0431_x044a_x0435_x043a_x0442_x0430 = _x0414_x0430_x043d_x043d_x044b_x0435_x041e_x0431_x044a_x0435_x043a_x0442_x0430; } return _p; }

inline void soap_delete__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap *soap, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse
#define SOAP_TYPE__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse (51)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, const char*, int, const _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *, const char*);
SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * SOAP_FMAC4 soap_in__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, const char*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *, const char*);

#ifndef soap_write__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse
#define soap_write__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ЦеныНоменклатурыПоПериодамResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * SOAP_FMAC4 soap_get__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *, const char*, const char*);

#ifndef soap_read__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse
#define soap_read__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * SOAP_FMAC2 soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * soap_new__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, n, NULL, NULL, NULL); }

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * soap_new_req__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap *soap) { _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *_p = soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * soap_new_set__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap *soap, ns2__ValueTable *return_) { _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *_p = soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c
#define SOAP_TYPE__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c (50)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, const char*, int, const _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *, const char*);
SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * SOAP_FMAC4 soap_in__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, const char*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *, const char*);

#ifndef soap_write__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c
#define soap_write__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ЦеныНоменклатурыПоПериодам", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * SOAP_FMAC4 soap_get__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *, const char*, const char*);

#ifndef soap_read__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c
#define soap_read__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * SOAP_FMAC2 soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * soap_new__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, n, NULL, NULL, NULL); }

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * soap_new_req__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap *soap) { _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *_p = soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * soap_new_set__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap *soap, ns2__ValueListType *_x041f_x0435_x0440_x0438_x043e_x0434_x044b, ns2__ValueListType *_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x0430, ns2__ValueListType *_x0422_x0438_x043f_x044b_x0426_x0435_x043d) { _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *_p = soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c::_x041f_x0435_x0440_x0438_x043e_x0434_x044b = _x041f_x0435_x0440_x0438_x043e_x0434_x044b; _p->_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c::_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x0430 = _x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x0430; _p->_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c::_x0422_x0438_x043f_x044b_x0426_x0435_x043d = _x0422_x0438_x043f_x044b_x0426_x0435_x043d; } return _p; }

inline void soap_delete__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response
#define SOAP_TYPE__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response (49)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, const char*, int, const _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *, const char*);
SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * SOAP_FMAC4 soap_in__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, const char*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *, const char*);

#ifndef soap_write__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response
#define soap_write__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ЦеныНоменклатурыПоГТДResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * SOAP_FMAC4 soap_get__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *, const char*, const char*);

#ifndef soap_read__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response
#define soap_read__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * SOAP_FMAC2 soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * soap_new__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, n, NULL, NULL, NULL); }

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * soap_new_req__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap *soap) { _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *_p = soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * soap_new_set__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap *soap, ns2__ValueTable *return_) { _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *_p = soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response::return_ = return_; } return _p; }

inline void soap_delete__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414
#define SOAP_TYPE__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 (48)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, const char*, int, const _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *, const char*);
SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * SOAP_FMAC4 soap_in__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, const char*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *, const char*);

#ifndef soap_write__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414
#define soap_write__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ЦеныНоменклатурыПоГТД", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * SOAP_FMAC4 soap_get__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *, const char*, const char*);

#ifndef soap_read__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414
#define soap_read__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * SOAP_FMAC2 soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * soap_new__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, n, NULL, NULL, NULL); }

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * soap_new_req__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap *soap) { _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *_p = soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * soap_new_set__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap *soap, time_t *_x041f_x0435_x0440_x0438_x043e_x0434, ns2__ValueListType *_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x0430) { _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *_p = soap_instantiate__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414::_x041f_x0435_x0440_x0438_x043e_x0434 = _x041f_x0435_x0440_x0438_x043e_x0434; _p->_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414::_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x0430 = _x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x0430; } return _p; }

inline void soap_delete__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response (47)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char*, int, const _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*);
SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_in__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*);

#ifndef soap_write__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_write__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:РасширенныйЗапросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_get__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_read__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_read__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC2 soap_instantiate__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, n, NULL, NULL, NULL); }

inline _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new_req__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap) { _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *_p = soap_instantiate__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new_set__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, ns2__ValueTree *return_) { _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *_p = soap_instantiate__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response::return_ = return_; } return _p; }

inline void soap_delete__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define SOAP_TYPE__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char*, int, const _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*);
SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_in__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*);

#ifndef soap_write__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_write__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:РасширенныйЗапрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_get__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_read__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_read__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC2 soap_instantiate__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, n, NULL, NULL, NULL); }

inline _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new_req__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap) { _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *_p = soap_instantiate__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new_set__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, std::string *_x0421_x0438_x0441_x0442_x0435_x043c_x043d_x043e_x0435_x0412_x044b_x0440_x0430_x0436_x0435_x043d_x0438_x0435, std::string *_x041d_x0430_x0438_x043c_x0435_x043d_x043e_x0432_x0430_x043d_x0438_x0435_x0417_x0430_x043f_x0440_x043e_x0441_x0430) { _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *_p = soap_instantiate__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441::_x0421_x0438_x0441_x0442_x0435_x043c_x043d_x043e_x0435_x0412_x044b_x0440_x0430_x0436_x0435_x043d_x0438_x0435 = _x0421_x0438_x0441_x0442_x0435_x043c_x043d_x043e_x0435_x0412_x044b_x0440_x0430_x0436_x0435_x043d_x0438_x0435; _p->_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441::_x041d_x0430_x0438_x043c_x0435_x043d_x043e_x0432_x0430_x043d_x0438_x0435_x0417_x0430_x043f_x0440_x043e_x0441_x0430 = _x041d_x0430_x0438_x043c_x0435_x043d_x043e_x0432_x0430_x043d_x0438_x0435_x0417_x0430_x043f_x0440_x043e_x0441_x0430; } return _p; }

inline void soap_delete__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char*, int, const _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*);
SOAP_FMAC3 _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_in__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*);

#ifndef soap_write__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_write__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:УниверсальныйЗапросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_get__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_read__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_read__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC2 soap_instantiate__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, n, NULL, NULL, NULL); }

inline _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new_req__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap) { _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *_p = soap_instantiate__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new_set__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, ns2__ValueTable *return_) { _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *_p = soap_instantiate__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response::return_ = return_; } return _p; }

inline void soap_delete__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define SOAP_TYPE__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 (44)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char*, int, const _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*);
SOAP_FMAC3 _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_in__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*);

#ifndef soap_write__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_write__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:УниверсальныйЗапрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_get__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_read__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_read__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC2 soap_instantiate__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, n, NULL, NULL, NULL); }

inline _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new_req__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap) { _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *_p = soap_instantiate__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new_set__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, std::string *_x0421_x0438_x0441_x0442_x0435_x043c_x043d_x043e_x0435_x0412_x044b_x0440_x0430_x0436_x0435_x043d_x0438_x0435, std::string *_x041d_x0430_x0438_x043c_x0435_x043d_x043e_x0432_x0430_x043d_x0438_x0435_x0417_x0430_x043f_x0440_x043e_x0441_x0430) { _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *_p = soap_instantiate__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441::_x0421_x0438_x0441_x0442_x0435_x043c_x043d_x043e_x0435_x0412_x044b_x0440_x0430_x0436_x0435_x043d_x0438_x0435 = _x0421_x0438_x0441_x0442_x0435_x043c_x043d_x043e_x0435_x0412_x044b_x0440_x0430_x0436_x0435_x043d_x0438_x0435; _p->_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441::_x041d_x0430_x0438_x043c_x0435_x043d_x043e_x0432_x0430_x043d_x0438_x0435_x0417_x0430_x043f_x0440_x043e_x0441_x0430 = _x041d_x0430_x0438_x043c_x0435_x043d_x043e_x0432_x0430_x043d_x0438_x0435_x0417_x0430_x043f_x0440_x043e_x0441_x0430; } return _p; }

inline void soap_delete__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response
#define SOAP_TYPE__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, const char*, int, const _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *, const char*);
SOAP_FMAC3 _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * SOAP_FMAC4 soap_in__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, const char*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *, const char*);

#ifndef soap_write__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response
#define soap_write__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ТоварыВПутиResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * SOAP_FMAC4 soap_get__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *, const char*, const char*);

#ifndef soap_read__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response
#define soap_read__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * SOAP_FMAC2 soap_instantiate__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * soap_new__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, n, NULL, NULL, NULL); }

inline _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * soap_new_req__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap *soap, std::string& return_) { _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *_p = soap_instantiate__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response::return_ = return_; } return _p; }

inline _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * soap_new_set__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap *soap, std::string& return_) { _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *_p = soap_instantiate__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response::return_ = return_; } return _p; }

inline void soap_delete__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap *soap, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438
#define SOAP_TYPE__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, const char*, int, const _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *, const char*);
SOAP_FMAC3 _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * SOAP_FMAC4 soap_in__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, const char*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *, const char*);

#ifndef soap_write__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438
#define soap_write__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ТоварыВПути", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * SOAP_FMAC4 soap_get__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *, const char*, const char*);

#ifndef soap_read__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438
#define soap_read__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * SOAP_FMAC2 soap_instantiate__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * soap_new__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, n, NULL, NULL, NULL); }

inline _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * soap_new_req__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap *soap, time_t _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430, time_t _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f) { _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *_p = soap_instantiate__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438::_x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430 = _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430; _p->_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438::_x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f = _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f; } return _p; }

inline _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * soap_new_set__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap *soap, time_t _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430, time_t _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f) { _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *_p = soap_instantiate__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438::_x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430 = _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430; _p->_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438::_x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f = _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f; } return _p; }

inline void soap_delete__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap *soap, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response (41)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char*, int, const _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*);
SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_in__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*);

#ifndef soap_write__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_write__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:РасчитатьАномальныйСпросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_get__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_read__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_read__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC2 soap_instantiate__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, n, NULL, NULL, NULL); }

inline _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new_req__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, std::string& return_) { _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *_p = soap_instantiate__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response::return_ = return_; } return _p; }

inline _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new_set__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, std::string& return_) { _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *_p = soap_instantiate__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response::return_ = return_; } return _p; }

inline void soap_delete__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define SOAP_TYPE__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 (40)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char*, int, const _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*);
SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_in__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*);

#ifndef soap_write__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_write__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:РасчитатьАномальныйСпрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_get__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_read__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_read__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC2 soap_instantiate__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, n, NULL, NULL, NULL); }

inline _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new_req__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, std::string& _x0414_x0430_x0442_x0430_x041e_x0442_x0441_x0447_x0435_x0442_x0430) { _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *_p = soap_instantiate__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441::_x0414_x0430_x0442_x0430_x041e_x0442_x0441_x0447_x0435_x0442_x0430 = _x0414_x0430_x0442_x0430_x041e_x0442_x0441_x0447_x0435_x0442_x0430; } return _p; }

inline _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new_set__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, std::string& _x0414_x0430_x0442_x0430_x041e_x0442_x0441_x0447_x0435_x0442_x0430) { _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *_p = soap_instantiate__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441::_x0414_x0430_x0442_x0430_x041e_x0442_x0441_x0447_x0435_x0442_x0430 = _x0414_x0430_x0442_x0430_x041e_x0442_x0441_x0447_x0435_x0442_x0430; } return _p; }

inline void soap_delete__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response
#define SOAP_TYPE__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, const char*, int, const _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *, const char*);
SOAP_FMAC3 _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * SOAP_FMAC4 soap_in__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, const char*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *, const char*);

#ifndef soap_write__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response
#define soap_write__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ПродажиResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * SOAP_FMAC4 soap_get__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *, const char*, const char*);

#ifndef soap_read__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response
#define soap_read__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * SOAP_FMAC2 soap_instantiate__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * soap_new__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, n, NULL, NULL, NULL); }

inline _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * soap_new_req__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap *soap, std::string& return_) { _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *_p = soap_instantiate__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response::return_ = return_; } return _p; }

inline _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * soap_new_set__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap *soap, std::string& return_) { _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *_p = soap_instantiate__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response::return_ = return_; } return _p; }

inline void soap_delete__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap *soap, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438
#define SOAP_TYPE__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 (38)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, const char*, int, const _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *, const char*);
SOAP_FMAC3 _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * SOAP_FMAC4 soap_in__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, const char*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *, const char*);

#ifndef soap_write__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438
#define soap_write__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Продажи", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * SOAP_FMAC4 soap_get__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *, const char*, const char*);

#ifndef soap_read__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438
#define soap_read__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * SOAP_FMAC2 soap_instantiate__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * soap_new__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, n, NULL, NULL, NULL); }

inline _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * soap_new_req__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap *soap, time_t _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430, time_t _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f) { _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *_p = soap_instantiate__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438::_x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430 = _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430; _p->_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438::_x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f = _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f; } return _p; }

inline _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * soap_new_set__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap *soap, time_t _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430, time_t _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f) { _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *_p = soap_instantiate__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438::_x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430 = _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430; _p->_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438::_x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f = _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f; } return _p; }

inline void soap_delete__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap *soap, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse
#define SOAP_TYPE__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse (37)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, const char*, int, const _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *, const char*);
SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * SOAP_FMAC4 soap_in__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, const char*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *, const char*);

#ifndef soap_write__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse
#define soap_write__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ПолучитьЦеныНоменклатурыResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * SOAP_FMAC4 soap_get__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *, const char*, const char*);

#ifndef soap_read__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse
#define soap_read__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * SOAP_FMAC2 soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * soap_new__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, n, NULL, NULL, NULL); }

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * soap_new_req__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap *soap) { _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *_p = soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * soap_new_set__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap *soap, ns2__ValueTable *return_) { _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *_p = soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b
#define SOAP_TYPE__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, const char*, int, const _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *, const char*);
SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * SOAP_FMAC4 soap_in__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, const char*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *, const char*);

#ifndef soap_write__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b
#define soap_write__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ПолучитьЦеныНоменклатуры", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * SOAP_FMAC4 soap_get__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *, const char*, const char*);

#ifndef soap_read__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b
#define soap_read__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * SOAP_FMAC2 soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * soap_new__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, n, NULL, NULL, NULL); }

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * soap_new_req__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap *soap) { _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *_p = soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * soap_new_set__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap *soap, ns2__ValueListType *_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x0430, ns2__ValueTable *_x0422_x0438_x043f_x044b_x0426_x0435_x043d) { _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *_p = soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b::_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x0430 = _x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x0430; _p->_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b::_x0422_x0438_x043f_x044b_x0426_x0435_x043d = _x0422_x0438_x043f_x044b_x0426_x0435_x043d; } return _p; }

inline void soap_delete__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response
#define SOAP_TYPE__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, const char*, int, const _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *, const char*);
SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * SOAP_FMAC4 soap_in__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, const char*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *, const char*);

#ifndef soap_write__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response
#define soap_write__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ПолучитьКурсыВалютResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * SOAP_FMAC4 soap_get__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *, const char*, const char*);

#ifndef soap_read__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response
#define soap_read__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * SOAP_FMAC2 soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * soap_new__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, n, NULL, NULL, NULL); }

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * soap_new_req__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap *soap) { _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *_p = soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * soap_new_set__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap *soap, ns2__ValueTable *return_) { _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *_p = soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response::return_ = return_; } return _p; }

inline void soap_delete__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442
#define SOAP_TYPE__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 (34)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, const char*, int, const _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *, const char*);
SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * SOAP_FMAC4 soap_in__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, const char*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *, const char*);

#ifndef soap_write__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442
#define soap_write__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ПолучитьКурсыВалют", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * SOAP_FMAC4 soap_get__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *, const char*, const char*);

#ifndef soap_read__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442
#define soap_read__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * SOAP_FMAC2 soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * soap_new__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, n, NULL, NULL, NULL); }

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * soap_new_req__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap *soap) { _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *_p = soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * soap_new_set__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap *soap, time_t *_x041f_x0435_x0440_x0438_x043e_x0434) { _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *_p = soap_instantiate__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442::_x041f_x0435_x0440_x0438_x043e_x0434 = _x041f_x0435_x0440_x0438_x043e_x0434; } return _p; }

inline void soap_delete__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response
#define SOAP_TYPE__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, const char*, int, const _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *, const char*);
SOAP_FMAC3 _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * SOAP_FMAC4 soap_in__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, const char*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *, const char*);

#ifndef soap_write__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response
#define soap_write__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ОстаткиResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * SOAP_FMAC4 soap_get__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *, const char*, const char*);

#ifndef soap_read__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response
#define soap_read__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * SOAP_FMAC2 soap_instantiate__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * soap_new__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, n, NULL, NULL, NULL); }

inline _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * soap_new_req__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap *soap, std::string& return_) { _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *_p = soap_instantiate__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response::return_ = return_; } return _p; }

inline _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * soap_new_set__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap *soap, std::string& return_) { _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *_p = soap_instantiate__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response::return_ = return_; } return _p; }

inline void soap_delete__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap *soap, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438
#define SOAP_TYPE__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, const char*, int, const _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *, const char*);
SOAP_FMAC3 _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * SOAP_FMAC4 soap_in__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, const char*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *, const char*);

#ifndef soap_write__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438
#define soap_write__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Остатки", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * SOAP_FMAC4 soap_get__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *, const char*, const char*);

#ifndef soap_read__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438
#define soap_read__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * SOAP_FMAC2 soap_instantiate__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * soap_new__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, n, NULL, NULL, NULL); }

inline _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * soap_new_req__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap *soap, std::string& _x0414_x0430_x0442_x0430_x041e_x0441_x0442_x0430_x0442_x043a_x043e_x0432, bool _x0423_x0447_x0438_x0442_x044b_x0432_x0430_x0442_x044c_x0421_x0442_x0430_x0442_x0443_x0441_x044b_x0414_x043e_x043a_x0443_x043c_x0435_x043d_x0442_x043e_x0432) { _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *_p = soap_instantiate__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438::_x0414_x0430_x0442_x0430_x041e_x0441_x0442_x0430_x0442_x043a_x043e_x0432 = _x0414_x0430_x0442_x0430_x041e_x0441_x0442_x0430_x0442_x043a_x043e_x0432; _p->_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438::_x0423_x0447_x0438_x0442_x044b_x0432_x0430_x0442_x044c_x0421_x0442_x0430_x0442_x0443_x0441_x044b_x0414_x043e_x043a_x0443_x043c_x0435_x043d_x0442_x043e_x0432 = _x0423_x0447_x0438_x0442_x044b_x0432_x0430_x0442_x044c_x0421_x0442_x0430_x0442_x0443_x0441_x044b_x0414_x043e_x043a_x0443_x043c_x0435_x043d_x0442_x043e_x0432; } return _p; }

inline _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * soap_new_set__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap *soap, std::string& _x0414_x0430_x0442_x0430_x041e_x0441_x0442_x0430_x0442_x043a_x043e_x0432, bool _x0423_x0447_x0438_x0442_x044b_x0432_x0430_x0442_x044c_x0421_x0442_x0430_x0442_x0443_x0441_x044b_x0414_x043e_x043a_x0443_x043c_x0435_x043d_x0442_x043e_x0432) { _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *_p = soap_instantiate__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438::_x0414_x0430_x0442_x0430_x041e_x0441_x0442_x0430_x0442_x043a_x043e_x0432 = _x0414_x0430_x0442_x0430_x041e_x0441_x0442_x0430_x0442_x043a_x043e_x0432; _p->_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438::_x0423_x0447_x0438_x0442_x044b_x0432_x0430_x0442_x044c_x0421_x0442_x0430_x0442_x0443_x0441_x044b_x0414_x043e_x043a_x0443_x043c_x0435_x043d_x0442_x043e_x0432 = _x0423_x0447_x0438_x0442_x044b_x0432_x0430_x0442_x044c_x0421_x0442_x0430_x0442_x0443_x0441_x044b_x0414_x043e_x043a_x0443_x043c_x0435_x043d_x0442_x043e_x0432; } return _p; }

inline void soap_delete__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap *soap, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char*, int, const _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*);
SOAP_FMAC3 _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_in__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*);

#ifndef soap_write__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_write__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:НеВыполненныйСпросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_get__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_read__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_read__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC2 soap_instantiate__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, n, NULL, NULL, NULL); }

inline _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new_req__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, std::string& return_) { _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *_p = soap_instantiate__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response::return_ = return_; } return _p; }

inline _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new_set__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, std::string& return_) { _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *_p = soap_instantiate__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response::return_ = return_; } return _p; }

inline void soap_delete__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define SOAP_TYPE__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char*, int, const _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*);
SOAP_FMAC3 _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_in__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*);

#ifndef soap_write__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_write__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:НеВыполненныйСпрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_get__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_read__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_read__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC2 soap_instantiate__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, n, NULL, NULL, NULL); }

inline _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new_req__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, time_t _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430, time_t _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f, bool _x0422_x043e_x043b_x044c_x043a_x043e_x0421_x0435_x0442_x0438) { _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *_p = soap_instantiate__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441::_x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430 = _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430; _p->_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441::_x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f = _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f; _p->_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441::_x0422_x043e_x043b_x044c_x043a_x043e_x0421_x0435_x0442_x0438 = _x0422_x043e_x043b_x044c_x043a_x043e_x0421_x0435_x0442_x0438; } return _p; }

inline _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new_set__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, time_t _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430, time_t _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f, bool _x0422_x043e_x043b_x044c_x043a_x043e_x0421_x0435_x0442_x0438) { _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *_p = soap_instantiate__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441::_x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430 = _x0414_x0430_x0442_x0430_x041d_x0430_x0447_x0430_x043b_x0430; _p->_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441::_x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f = _x0414_x0430_x0442_x0430_x041e_x043a_x043e_x043d_x0447_x0430_x043d_x0438_x044f; _p->_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441::_x0422_x043e_x043b_x044c_x043a_x043e_x0421_x0435_x0442_x0438 = _x0422_x043e_x043b_x044c_x043a_x043e_x0421_x0435_x0442_x0438; } return _p; }

inline void soap_delete__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse
#define SOAP_TYPE__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, const char*, int, const _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *, const char*);
SOAP_FMAC3 _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * SOAP_FMAC4 soap_in__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, const char*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *, const char*);

#ifndef soap_write__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse
#define soap_write__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ИнформационныеБазыResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * SOAP_FMAC4 soap_get__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *, const char*, const char*);

#ifndef soap_read__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse
#define soap_read__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * SOAP_FMAC2 soap_instantiate__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * soap_new__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, n, NULL, NULL, NULL); }

inline _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * soap_new_req__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap *soap) { _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *_p = soap_instantiate__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * soap_new_set__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap *soap, ns2__ValueTable *return_) { _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *_p = soap_instantiate__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap *soap, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b
#define SOAP_TYPE__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, const char*, int, const _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *, const char*);
SOAP_FMAC3 _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * SOAP_FMAC4 soap_in__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, const char*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *, const char*);

#ifndef soap_write__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b
#define soap_write__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ИнформационныеБазы", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * SOAP_FMAC4 soap_get__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *, const char*, const char*);

#ifndef soap_read__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b
#define soap_read__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * SOAP_FMAC2 soap_instantiate__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * soap_new__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, n, NULL, NULL, NULL); }

inline _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * soap_new_req__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap *soap) { _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *_p = soap_instantiate__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * soap_new_set__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap *soap) { _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *_p = soap_instantiate__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap *soap, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse
#define SOAP_TYPE__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, const char*, int, const _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *, const char*);
SOAP_FMAC3 _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * SOAP_FMAC4 soap_in__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, const char*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *, const char*);

#ifndef soap_write__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse
#define soap_write__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ДниОтсутствияResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * SOAP_FMAC4 soap_get__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *, const char*, const char*);

#ifndef soap_read__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse
#define soap_read__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * SOAP_FMAC2 soap_instantiate__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * soap_new__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, n, NULL, NULL, NULL); }

inline _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * soap_new_req__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap *soap, std::string& return_) { _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *_p = soap_instantiate__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse::return_ = return_; } return _p; }

inline _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * soap_new_set__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap *soap, std::string& return_) { _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *_p = soap_instantiate__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap *soap, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f
#define SOAP_TYPE__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, const char*, int, const _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *, const char*);
SOAP_FMAC3 _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * SOAP_FMAC4 soap_in__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, const char*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *, const char*);

#ifndef soap_write__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f
#define soap_write__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ДниОтсутствия", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * SOAP_FMAC4 soap_get__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *, const char*, const char*);

#ifndef soap_read__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f
#define soap_read__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * SOAP_FMAC2 soap_instantiate__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, int, const char*, const char*, size_t*);

inline _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * soap_new__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap *soap, int n = -1) { return soap_instantiate__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, n, NULL, NULL, NULL); }

inline _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * soap_new_req__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap *soap, time_t _x041d_x0430_x0447_x0430_x043b_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430, time_t _x041a_x043e_x043d_x0435_x0446_x041f_x0435_x0440_x0438_x043e_x0434_x0430) { _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *_p = soap_instantiate__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f::_x041d_x0430_x0447_x0430_x043b_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430 = _x041d_x0430_x0447_x0430_x043b_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430; _p->_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f::_x041a_x043e_x043d_x0435_x0446_x041f_x0435_x0440_x0438_x043e_x0434_x0430 = _x041a_x043e_x043d_x0435_x0446_x041f_x0435_x0440_x0438_x043e_x0434_x0430; } return _p; }

inline _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * soap_new_set__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap *soap, time_t _x041d_x0430_x0447_x0430_x043b_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430, time_t _x041a_x043e_x043d_x0435_x0446_x041f_x0435_x0440_x0438_x043e_x0434_x0430) { _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *_p = soap_instantiate__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f::_x041d_x0430_x0447_x0430_x043b_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430 = _x041d_x0430_x0447_x0430_x043b_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430; _p->_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f::_x041a_x043e_x043d_x0435_x0446_x041f_x0435_x0440_x0438_x043e_x0434_x0430 = _x041a_x043e_x043d_x0435_x0446_x041f_x0435_x0440_x0438_x043e_x0434_x0430; } return _p; }

inline void soap_delete__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap *soap, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetStructureInfoResponse
#define SOAP_TYPE__ns1__GetStructureInfoResponse (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetStructureInfoResponse(struct soap*, const char*, int, const _ns1__GetStructureInfoResponse *, const char*);
SOAP_FMAC3 _ns1__GetStructureInfoResponse * SOAP_FMAC4 soap_in__ns1__GetStructureInfoResponse(struct soap*, const char*, _ns1__GetStructureInfoResponse *, const char*);

#ifndef soap_write__ns1__GetStructureInfoResponse
#define soap_write__ns1__GetStructureInfoResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:GetStructureInfoResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__GetStructureInfoResponse * SOAP_FMAC4 soap_get__ns1__GetStructureInfoResponse(struct soap*, _ns1__GetStructureInfoResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetStructureInfoResponse
#define soap_read__ns1__GetStructureInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetStructureInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__GetStructureInfoResponse * SOAP_FMAC2 soap_instantiate__ns1__GetStructureInfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetStructureInfoResponse * soap_new__ns1__GetStructureInfoResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetStructureInfoResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetStructureInfoResponse * soap_new_req__ns1__GetStructureInfoResponse(struct soap *soap, ns1__Object *return_) { _ns1__GetStructureInfoResponse *_p = soap_instantiate__ns1__GetStructureInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetStructureInfoResponse::return_ = return_; } return _p; }

inline _ns1__GetStructureInfoResponse * soap_new_set__ns1__GetStructureInfoResponse(struct soap *soap, ns1__Object *return_) { _ns1__GetStructureInfoResponse *_p = soap_instantiate__ns1__GetStructureInfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetStructureInfoResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1__GetStructureInfoResponse(struct soap *soap, _ns1__GetStructureInfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetStructureInfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetStructureInfo
#define SOAP_TYPE__ns1__GetStructureInfo (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetStructureInfo(struct soap*, const char*, int, const _ns1__GetStructureInfo *, const char*);
SOAP_FMAC3 _ns1__GetStructureInfo * SOAP_FMAC4 soap_in__ns1__GetStructureInfo(struct soap*, const char*, _ns1__GetStructureInfo *, const char*);

#ifndef soap_write__ns1__GetStructureInfo
#define soap_write__ns1__GetStructureInfo(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:GetStructureInfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__GetStructureInfo * SOAP_FMAC4 soap_get__ns1__GetStructureInfo(struct soap*, _ns1__GetStructureInfo *, const char*, const char*);

#ifndef soap_read__ns1__GetStructureInfo
#define soap_read__ns1__GetStructureInfo(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetStructureInfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__GetStructureInfo * SOAP_FMAC2 soap_instantiate__ns1__GetStructureInfo(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetStructureInfo * soap_new__ns1__GetStructureInfo(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetStructureInfo(soap, n, NULL, NULL, NULL); }

inline _ns1__GetStructureInfo * soap_new_req__ns1__GetStructureInfo(struct soap *soap) { _ns1__GetStructureInfo *_p = soap_instantiate__ns1__GetStructureInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetStructureInfo * soap_new_set__ns1__GetStructureInfo(struct soap *soap, std::string *TableName) { _ns1__GetStructureInfo *_p = soap_instantiate__ns1__GetStructureInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetStructureInfo::TableName = TableName; } return _p; }

inline void soap_delete__ns1__GetStructureInfo(struct soap *soap, _ns1__GetStructureInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetStructureInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetAmountGoodsResponse
#define SOAP_TYPE__ns1__GetAmountGoodsResponse (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAmountGoodsResponse(struct soap*, const char*, int, const _ns1__GetAmountGoodsResponse *, const char*);
SOAP_FMAC3 _ns1__GetAmountGoodsResponse * SOAP_FMAC4 soap_in__ns1__GetAmountGoodsResponse(struct soap*, const char*, _ns1__GetAmountGoodsResponse *, const char*);

#ifndef soap_write__ns1__GetAmountGoodsResponse
#define soap_write__ns1__GetAmountGoodsResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:GetAmountGoodsResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__GetAmountGoodsResponse * SOAP_FMAC4 soap_get__ns1__GetAmountGoodsResponse(struct soap*, _ns1__GetAmountGoodsResponse *, const char*, const char*);

#ifndef soap_read__ns1__GetAmountGoodsResponse
#define soap_read__ns1__GetAmountGoodsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetAmountGoodsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__GetAmountGoodsResponse * SOAP_FMAC2 soap_instantiate__ns1__GetAmountGoodsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAmountGoodsResponse * soap_new__ns1__GetAmountGoodsResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetAmountGoodsResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__GetAmountGoodsResponse * soap_new_req__ns1__GetAmountGoodsResponse(struct soap *soap, ns2__ValueTable *return_) { _ns1__GetAmountGoodsResponse *_p = soap_instantiate__ns1__GetAmountGoodsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetAmountGoodsResponse::return_ = return_; } return _p; }

inline _ns1__GetAmountGoodsResponse * soap_new_set__ns1__GetAmountGoodsResponse(struct soap *soap, ns2__ValueTable *return_) { _ns1__GetAmountGoodsResponse *_p = soap_instantiate__ns1__GetAmountGoodsResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetAmountGoodsResponse::return_ = return_; } return _p; }

inline void soap_delete__ns1__GetAmountGoodsResponse(struct soap *soap, _ns1__GetAmountGoodsResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetAmountGoodsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__GetAmountGoods
#define SOAP_TYPE__ns1__GetAmountGoods (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__GetAmountGoods(struct soap*, const char*, int, const _ns1__GetAmountGoods *, const char*);
SOAP_FMAC3 _ns1__GetAmountGoods * SOAP_FMAC4 soap_in__ns1__GetAmountGoods(struct soap*, const char*, _ns1__GetAmountGoods *, const char*);

#ifndef soap_write__ns1__GetAmountGoods
#define soap_write__ns1__GetAmountGoods(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:GetAmountGoods", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__GetAmountGoods * SOAP_FMAC4 soap_get__ns1__GetAmountGoods(struct soap*, _ns1__GetAmountGoods *, const char*, const char*);

#ifndef soap_read__ns1__GetAmountGoods
#define soap_read__ns1__GetAmountGoods(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__GetAmountGoods(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__GetAmountGoods * SOAP_FMAC2 soap_instantiate__ns1__GetAmountGoods(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__GetAmountGoods * soap_new__ns1__GetAmountGoods(struct soap *soap, int n = -1) { return soap_instantiate__ns1__GetAmountGoods(soap, n, NULL, NULL, NULL); }

inline _ns1__GetAmountGoods * soap_new_req__ns1__GetAmountGoods(struct soap *soap) { _ns1__GetAmountGoods *_p = soap_instantiate__ns1__GetAmountGoods(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline _ns1__GetAmountGoods * soap_new_set__ns1__GetAmountGoods(struct soap *soap, time_t *Period, ns2__Structure *Options, ns2__Structure *Selections) { _ns1__GetAmountGoods *_p = soap_instantiate__ns1__GetAmountGoods(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__GetAmountGoods::Period = Period; _p->_ns1__GetAmountGoods::Options = Options; _p->_ns1__GetAmountGoods::Selections = Selections; } return _p; }

inline void soap_delete__ns1__GetAmountGoods(struct soap *soap, _ns1__GetAmountGoods *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__GetAmountGoods(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Structure
#define SOAP_TYPE_ns1__Structure (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Structure(struct soap*, const char*, int, const ns1__Structure *, const char*);
SOAP_FMAC3 ns1__Structure * SOAP_FMAC4 soap_in_ns1__Structure(struct soap*, const char*, ns1__Structure *, const char*);

#ifndef soap_write_ns1__Structure
#define soap_write_ns1__Structure(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Structure", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__Structure * SOAP_FMAC4 soap_get_ns1__Structure(struct soap*, ns1__Structure *, const char*, const char*);

#ifndef soap_read_ns1__Structure
#define soap_read_ns1__Structure(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Structure(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__Structure * SOAP_FMAC2 soap_instantiate_ns1__Structure(struct soap*, int, const char*, const char*, size_t*);

inline ns1__Structure * soap_new_ns1__Structure(struct soap *soap, int n = -1) { return soap_instantiate_ns1__Structure(soap, n, NULL, NULL, NULL); }

inline ns1__Structure * soap_new_req_ns1__Structure(struct soap *soap, std::vector<ns1__Object * >& Objects) { ns1__Structure *_p = soap_instantiate_ns1__Structure(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__Structure::Objects = Objects; } return _p; }

inline ns1__Structure * soap_new_set_ns1__Structure(struct soap *soap, std::vector<ns1__Object * >& Objects) { ns1__Structure *_p = soap_instantiate_ns1__Structure(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__Structure::Objects = Objects; } return _p; }

inline void soap_delete_ns1__Structure(struct soap *soap, ns1__Structure *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Structure(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Object
#define SOAP_TYPE_ns1__Object (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Object(struct soap*, const char*, int, const ns1__Object *, const char*);
SOAP_FMAC3 ns1__Object * SOAP_FMAC4 soap_in_ns1__Object(struct soap*, const char*, ns1__Object *, const char*);

#ifndef soap_write_ns1__Object
#define soap_write_ns1__Object(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Object", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__Object * SOAP_FMAC4 soap_get_ns1__Object(struct soap*, ns1__Object *, const char*, const char*);

#ifndef soap_read_ns1__Object
#define soap_read_ns1__Object(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Object(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__Object * SOAP_FMAC2 soap_instantiate_ns1__Object(struct soap*, int, const char*, const char*, size_t*);

inline ns1__Object * soap_new_ns1__Object(struct soap *soap, int n = -1) { return soap_instantiate_ns1__Object(soap, n, NULL, NULL, NULL); }

inline ns1__Object * soap_new_req_ns1__Object(struct soap *soap, std::string& StorageTableName, std::string& StorageFieldName, std::string& FieldName, std::string& Metadata) { ns1__Object *_p = soap_instantiate_ns1__Object(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__Object::StorageTableName = StorageTableName; _p->ns1__Object::StorageFieldName = StorageFieldName; _p->ns1__Object::FieldName = FieldName; _p->ns1__Object::Metadata = Metadata; } return _p; }

inline ns1__Object * soap_new_set_ns1__Object(struct soap *soap, std::string& StorageTableName, std::string& StorageFieldName, std::string& FieldName, std::string& Metadata) { ns1__Object *_p = soap_instantiate_ns1__Object(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__Object::StorageTableName = StorageTableName; _p->ns1__Object::StorageFieldName = StorageFieldName; _p->ns1__Object::FieldName = FieldName; _p->ns1__Object::Metadata = Metadata; } return _p; }

inline void soap_delete_ns1__Object(struct soap *soap, ns1__Object *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Object(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (19)
#endif

#define soap_default_xsd__nonNegativeInteger(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__nonNegativeInteger(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonNegativeInteger(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__nonNegativeInteger(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonNegativeInteger(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__nonNegativeInteger
#define soap_write_xsd__nonNegativeInteger(soap, data) ( soap_begin(soap), soap_serialize_xsd__nonNegativeInteger(soap, data), soap_begin_send(soap) || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__nonNegativeInteger(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__nonNegativeInteger
#define soap_read_xsd__nonNegativeInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__nonNegativeInteger(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_xsd__nonNegativeInteger soap_instantiate_std__string


#define soap_copy_xsd__nonNegativeInteger soap_copy_std__string

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (18)
#endif

#define soap_default_xsd__decimal(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__decimal(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__decimal(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__decimal(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__decimal(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__decimal
#define soap_write_xsd__decimal(soap, data) ( soap_begin(soap), soap_serialize_xsd__decimal(soap, data), soap_begin_send(soap) || soap_put_xsd__decimal(soap, data, "xsd:decimal", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__decimal(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__decimal
#define soap_read_xsd__decimal(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__decimal(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_xsd__decimal soap_instantiate_std__string


#define soap_copy_xsd__decimal soap_copy_std__string

#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (17)
#endif

#define soap_default_xsd__date(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__date(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__date(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__date(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__date(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__date
#define soap_write_xsd__date(soap, data) ( soap_begin(soap), soap_serialize_xsd__date(soap, data), soap_begin_send(soap) || soap_put_xsd__date(soap, data, "xsd:date", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__date(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__date
#define soap_read_xsd__date(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__date(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_xsd__date soap_instantiate_std__string


#define soap_copy_xsd__date soap_copy_std__string

#ifndef SOAP_TYPE_xsd__NMTOKEN
#define SOAP_TYPE_xsd__NMTOKEN (16)
#endif

#define soap_default_xsd__NMTOKEN(soap, a) soap_default_std__wstring(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__NMTOKEN(struct soap*, const std::wstring *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__NMTOKEN(struct soap*, const char*, int, const std::wstring*, const char*);
SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_in_xsd__NMTOKEN(struct soap*, const char*, std::wstring*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__NMTOKEN(struct soap*, const std::wstring *, const char*, const char*);

#ifndef soap_write_xsd__NMTOKEN
#define soap_write_xsd__NMTOKEN(soap, data) ( soap_begin(soap), soap_serialize_xsd__NMTOKEN(soap, data), soap_begin_send(soap) || soap_put_xsd__NMTOKEN(soap, data, "xsd:NMTOKEN", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_get_xsd__NMTOKEN(struct soap*, std::wstring *, const char*, const char*);

#ifndef soap_read_xsd__NMTOKEN
#define soap_read_xsd__NMTOKEN(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__NMTOKEN(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#define soap_instantiate_xsd__NMTOKEN soap_instantiate_std__wstring


#define soap_copy_xsd__NMTOKEN soap_copy_std__wstring

#ifndef SOAP_TYPE_std__wstring
#define SOAP_TYPE_std__wstring (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__wstring(struct soap*, std::wstring *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__wstring(struct soap*, const std::wstring *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__wstring(struct soap*, const char*, int, const std::wstring*, const char*);
SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_in_std__wstring(struct soap*, const char*, std::wstring*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__wstring(struct soap*, const std::wstring *, const char*, const char*);

#ifndef soap_write_std__wstring
#define soap_write_std__wstring(soap, data) ( soap_begin(soap), soap_serialize_std__wstring(soap, data), soap_begin_send(soap) || soap_put_std__wstring(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::wstring * SOAP_FMAC4 soap_get_std__wstring(struct soap*, std::wstring *, const char*, const char*);

#ifndef soap_read_std__wstring
#define soap_read_std__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_std__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 std::wstring * SOAP_FMAC2 soap_instantiate_std__wstring(struct soap*, int, const char*, const char*, size_t*);

inline std::wstring * soap_new_std__wstring(struct soap *soap, int n = -1) { return soap_instantiate_std__wstring(soap, n, NULL, NULL, NULL); }

inline std::wstring * soap_new_req_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline std::wstring * soap_new_set_std__wstring(struct soap *soap) { std::wstring *_p = soap_instantiate_std__wstring(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__wstring(soap, _p); } return _p; }

inline void soap_delete_std__wstring(struct soap *soap, std::wstring *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__wstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (10)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(struct soap *soap) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(struct soap *soap, unsigned char *__ptr, int __size, char *id, char *type, char *options) { xsd__base64Binary *_p = soap_instantiate_xsd__base64Binary(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->xsd__base64Binary::__ptr = __ptr; _p->xsd__base64Binary::__size = __size; _p->xsd__base64Binary::id = id; _p->xsd__base64Binary::type = type; _p->xsd__base64Binary::options = options; } return _p; }

inline void soap_delete_xsd__base64Binary(struct soap *soap, xsd__base64Binary *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__base64Binary(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__QName(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__QName(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__QName(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__QName(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__QName(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__QName
#define soap_write_xsd__QName(soap, data) ( soap_begin(soap), soap_serialize_xsd__QName(soap, data), soap_begin_send(soap) || soap_put_xsd__QName(soap, data, "xsd:QName", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__QName(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__QName
#define soap_read_xsd__QName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_xsd__QName(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_xsd__QName(struct soap *soap, int n = -1) { return soap_instantiate_xsd__QName(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_xsd__QName(struct soap *soap) { std::string *_p = soap_instantiate_xsd__QName(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xsd__QName(soap, _p); } return _p; }

inline std::string * soap_new_set_xsd__QName(struct soap *soap) { std::string *_p = soap_instantiate_xsd__QName(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_xsd__QName(soap, _p); } return _p; }

inline void soap_delete_xsd__QName(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__QName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin(soap), soap_serialize_std__string(soap, data), soap_begin_send(soap) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (289)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Fault(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (288)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (285)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (283)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (282)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Header(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__QueryUniversal_
#define SOAP_TYPE___ns1__QueryUniversal_ (281)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryUniversal_(struct soap*, struct __ns1__QueryUniversal_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryUniversal_(struct soap*, const struct __ns1__QueryUniversal_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryUniversal_(struct soap*, const char*, int, const struct __ns1__QueryUniversal_ *, const char*);
SOAP_FMAC3 struct __ns1__QueryUniversal_ * SOAP_FMAC4 soap_in___ns1__QueryUniversal_(struct soap*, const char*, struct __ns1__QueryUniversal_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryUniversal_(struct soap*, const struct __ns1__QueryUniversal_ *, const char*, const char*);

#ifndef soap_write___ns1__QueryUniversal_
#define soap_write___ns1__QueryUniversal_(soap, data) ( soap_begin(soap), soap_serialize___ns1__QueryUniversal_(soap, data), soap_begin_send(soap) || soap_put___ns1__QueryUniversal_(soap, data, "-ns1:QueryUniversal", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__QueryUniversal_ * SOAP_FMAC4 soap_get___ns1__QueryUniversal_(struct soap*, struct __ns1__QueryUniversal_ *, const char*, const char*);

#ifndef soap_read___ns1__QueryUniversal_
#define soap_read___ns1__QueryUniversal_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryUniversal_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__QueryUniversal_ * SOAP_FMAC2 soap_instantiate___ns1__QueryUniversal_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryUniversal_ * soap_new___ns1__QueryUniversal_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryUniversal_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryUniversal_ * soap_new_req___ns1__QueryUniversal_(struct soap *soap) { struct __ns1__QueryUniversal_ *_p = soap_instantiate___ns1__QueryUniversal_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryUniversal_(soap, _p); } return _p; }

inline struct __ns1__QueryUniversal_ * soap_new_set___ns1__QueryUniversal_(struct soap *soap, _ns1__QueryUniversal *ns1__QueryUniversal) { struct __ns1__QueryUniversal_ *_p = soap_instantiate___ns1__QueryUniversal_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryUniversal_(soap, _p); _p->ns1__QueryUniversal = ns1__QueryUniversal; } return _p; }

inline void soap_delete___ns1__QueryUniversal_(struct soap *soap, struct __ns1__QueryUniversal_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryUniversal_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_
#define SOAP_TYPE___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ (279)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap*, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap*, const char*, int, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ *, const char*);
SOAP_FMAC3 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ * SOAP_FMAC4 soap_in___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap*, const char*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap*, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ *, const char*, const char*);

#ifndef soap_write___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_
#define soap_write___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(soap, data), soap_begin_send(soap) || soap_put___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(soap, data, "-ns1:ЗаписатьДанные", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ * SOAP_FMAC4 soap_get___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ *, const char*, const char*);

#ifndef soap_read___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_
#define soap_read___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ * SOAP_FMAC2 soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ * soap_new___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ * soap_new_req___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap *soap) { struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ *_p = soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(soap, _p); } return _p; }

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ * soap_new_set___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap *soap, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435) { struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ *_p = soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(soap, _p); _p->ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 = ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435; } return _p; }

inline void soap_delete___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap *soap, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response
#define SOAP_TYPE___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response (278)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap*, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap*, const char*, int, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response *, const char*);
SOAP_FMAC3 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response * SOAP_FMAC4 soap_in___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap*, const char*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap*, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response *, const char*, const char*);

#ifndef soap_write___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response
#define soap_write___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(soap, data, "-ns1:ЗаписатьДанные-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response * SOAP_FMAC4 soap_get___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response *, const char*, const char*);

#ifndef soap_read___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response
#define soap_read___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response * SOAP_FMAC2 soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response * soap_new___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response * soap_new_req___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap *soap) { struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response *_p = soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(soap, _p); } return _p; }

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response * soap_new_set___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap *soap, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response) { struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response *_p = soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(soap, _p); _p->ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response = ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response; } return _p; }

inline void soap_delete___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap *soap, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_
#define SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ (276)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap*, const char*, int, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ *, const char*);
SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ * SOAP_FMAC4 soap_in___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap*, const char*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ *, const char*, const char*);

#ifndef soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_
#define soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(soap, data), soap_begin_send(soap) || soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(soap, data, "-ns1:ЦеныНоменклатурыПоПериодам", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ * SOAP_FMAC4 soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ *, const char*, const char*);

#ifndef soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_
#define soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ * SOAP_FMAC2 soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ * soap_new___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ * soap_new_req___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap *soap) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(soap, _p); } return _p; }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ * soap_new_set___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(soap, _p); _p->ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c = ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c; } return _p; }

inline void soap_delete___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap *soap, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response
#define SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response (275)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap*, const char*, int, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response *, const char*);
SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response * SOAP_FMAC4 soap_in___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap*, const char*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response *, const char*, const char*);

#ifndef soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response
#define soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(soap, data, "-ns1:ЦеныНоменклатурыПоПериодам-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response * SOAP_FMAC4 soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response *, const char*, const char*);

#ifndef soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response
#define soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response * SOAP_FMAC2 soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response * soap_new___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response * soap_new_req___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap *soap) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(soap, _p); } return _p; }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response * soap_new_set___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(soap, _p); _p->ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse = ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse; } return _p; }

inline void soap_delete___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap *soap, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_
#define SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ (273)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap*, const char*, int, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ *, const char*);
SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ * SOAP_FMAC4 soap_in___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap*, const char*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ *, const char*, const char*);

#ifndef soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_
#define soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(soap, data), soap_begin_send(soap) || soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(soap, data, "-ns1:ЦеныНоменклатурыПоГТД", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ * SOAP_FMAC4 soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ *, const char*, const char*);

#ifndef soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_
#define soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ * SOAP_FMAC2 soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ * soap_new___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ * soap_new_req___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap *soap) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(soap, _p); } return _p; }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ * soap_new_set___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(soap, _p); _p->ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 = ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414; } return _p; }

inline void soap_delete___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap *soap, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response
#define SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response (272)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap*, const char*, int, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response *, const char*);
SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response * SOAP_FMAC4 soap_in___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap*, const char*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response *, const char*, const char*);

#ifndef soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response
#define soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(soap, data, "-ns1:ЦеныНоменклатурыПоГТД-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response * SOAP_FMAC4 soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response *, const char*, const char*);

#ifndef soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response
#define soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response * SOAP_FMAC2 soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response * soap_new___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response * soap_new_req___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap *soap) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(soap, _p); } return _p; }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response * soap_new_set___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(soap, _p); _p->ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response = ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response; } return _p; }

inline void soap_delete___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap *soap, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_
#define SOAP_TYPE___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ (270)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, const char*, int, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *, const char*);
SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * SOAP_FMAC4 soap_in___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, const char*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *, const char*, const char*);

#ifndef soap_write___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_
#define soap_write___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, data), soap_begin_send(soap) || soap_put___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, data, "-ns1:РасширенныйЗапрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * SOAP_FMAC4 soap_get___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *, const char*, const char*);

#ifndef soap_read___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_
#define soap_read___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * SOAP_FMAC2 soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * soap_new___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * soap_new_req___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap *soap) { struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, _p); } return _p; }

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * soap_new_set___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap *soap, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441) { struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, _p); _p->ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 = ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441; } return _p; }

inline void soap_delete___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap *soap, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response
#define SOAP_TYPE___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response (269)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, const char*, int, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *, const char*);
SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * SOAP_FMAC4 soap_in___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, const char*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *, const char*, const char*);

#ifndef soap_write___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response
#define soap_write___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, data, "-ns1:РасширенныйЗапрос-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * SOAP_FMAC4 soap_get___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *, const char*, const char*);

#ifndef soap_read___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response
#define soap_read___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * SOAP_FMAC2 soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * soap_new___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * soap_new_req___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap *soap) { struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, _p); } return _p; }

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * soap_new_set___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap *soap, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response) { struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, _p); _p->ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response = ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response; } return _p; }

inline void soap_delete___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap *soap, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_
#define SOAP_TYPE___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ (267)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, const char*, int, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *, const char*);
SOAP_FMAC3 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * SOAP_FMAC4 soap_in___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, const char*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *, const char*, const char*);

#ifndef soap_write___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_
#define soap_write___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, data), soap_begin_send(soap) || soap_put___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, data, "-ns1:УниверсальныйЗапрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * SOAP_FMAC4 soap_get___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *, const char*, const char*);

#ifndef soap_read___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_
#define soap_read___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * SOAP_FMAC2 soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * soap_new___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * soap_new_req___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap *soap) { struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *_p = soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, _p); } return _p; }

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ * soap_new_set___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap *soap, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441) { struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *_p = soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(soap, _p); _p->ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 = ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441; } return _p; }

inline void soap_delete___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap *soap, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response
#define SOAP_TYPE___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response (266)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, const char*, int, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *, const char*);
SOAP_FMAC3 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * SOAP_FMAC4 soap_in___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, const char*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *, const char*, const char*);

#ifndef soap_write___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response
#define soap_write___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, data, "-ns1:УниверсальныйЗапрос-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * SOAP_FMAC4 soap_get___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *, const char*, const char*);

#ifndef soap_read___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response
#define soap_read___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * SOAP_FMAC2 soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * soap_new___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * soap_new_req___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap *soap) { struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *_p = soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, _p); } return _p; }

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response * soap_new_set___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap *soap, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response) { struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *_p = soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(soap, _p); _p->ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response = ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response; } return _p; }

inline void soap_delete___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap *soap, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_
#define SOAP_TYPE___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ (264)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap*, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap*, const char*, int, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ *, const char*);
SOAP_FMAC3 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ * SOAP_FMAC4 soap_in___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap*, const char*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap*, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ *, const char*, const char*);

#ifndef soap_write___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_
#define soap_write___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(soap, data), soap_begin_send(soap) || soap_put___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(soap, data, "-ns1:ТоварыВПути", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ * SOAP_FMAC4 soap_get___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ *, const char*, const char*);

#ifndef soap_read___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_
#define soap_read___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ * SOAP_FMAC2 soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ * soap_new___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ * soap_new_req___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap *soap) { struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ *_p = soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(soap, _p); } return _p; }

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ * soap_new_set___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap *soap, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438) { struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ *_p = soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(soap, _p); _p->ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 = ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438; } return _p; }

inline void soap_delete___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap *soap, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response
#define SOAP_TYPE___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response (263)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap*, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap*, const char*, int, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response *, const char*);
SOAP_FMAC3 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response * SOAP_FMAC4 soap_in___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap*, const char*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap*, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response *, const char*, const char*);

#ifndef soap_write___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response
#define soap_write___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(soap, data, "-ns1:ТоварыВПути-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response * SOAP_FMAC4 soap_get___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response *, const char*, const char*);

#ifndef soap_read___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response
#define soap_read___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response * SOAP_FMAC2 soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response * soap_new___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response * soap_new_req___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap *soap) { struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response *_p = soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(soap, _p); } return _p; }

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response * soap_new_set___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap *soap, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response) { struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response *_p = soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(soap, _p); _p->ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response = ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response; } return _p; }

inline void soap_delete___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap *soap, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_
#define SOAP_TYPE___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ (261)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, const char*, int, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *, const char*);
SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * SOAP_FMAC4 soap_in___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, const char*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *, const char*, const char*);

#ifndef soap_write___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_
#define soap_write___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, data), soap_begin_send(soap) || soap_put___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, data, "-ns1:РасчитатьАномальныйСпрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * SOAP_FMAC4 soap_get___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *, const char*, const char*);

#ifndef soap_read___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_
#define soap_read___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * SOAP_FMAC2 soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * soap_new___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * soap_new_req___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap *soap) { struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, _p); } return _p; }

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * soap_new_set___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap *soap, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441) { struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, _p); _p->ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 = ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441; } return _p; }

inline void soap_delete___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap *soap, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response
#define SOAP_TYPE___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response (260)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, const char*, int, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *, const char*);
SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * SOAP_FMAC4 soap_in___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, const char*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *, const char*, const char*);

#ifndef soap_write___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response
#define soap_write___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, data, "-ns1:РасчитатьАномальныйСпрос-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * SOAP_FMAC4 soap_get___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *, const char*, const char*);

#ifndef soap_read___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response
#define soap_read___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * SOAP_FMAC2 soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * soap_new___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * soap_new_req___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap *soap) { struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, _p); } return _p; }

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * soap_new_set___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap *soap, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response) { struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, _p); _p->ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response = ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response; } return _p; }

inline void soap_delete___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap *soap, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_
#define SOAP_TYPE___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ (258)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap*, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap*, const char*, int, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ * SOAP_FMAC4 soap_in___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap*, const char*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap*, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_
#define soap_write___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(soap, data, "-ns1:Продажи", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ * SOAP_FMAC4 soap_get___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_
#define soap_read___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ * SOAP_FMAC2 soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ * soap_new___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ * soap_new_req___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap *soap) { struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ *_p = soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(soap, _p); } return _p; }

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ * soap_new_set___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap *soap, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438) { struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ *_p = soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(soap, _p); _p->ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 = ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438; } return _p; }

inline void soap_delete___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap *soap, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response
#define SOAP_TYPE___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response (257)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap*, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap*, const char*, int, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response * SOAP_FMAC4 soap_in___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap*, const char*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap*, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response
#define soap_write___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(soap, data, "-ns1:Продажи-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response * SOAP_FMAC4 soap_get___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response
#define soap_read___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response * SOAP_FMAC2 soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response * soap_new___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response * soap_new_req___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap *soap) { struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response *_p = soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(soap, _p); } return _p; }

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response * soap_new_set___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap *soap, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response) { struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response *_p = soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(soap, _p); _p->ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response = ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response; } return _p; }

inline void soap_delete___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap *soap, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_
#define SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ (255)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap*, const char*, int, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ * SOAP_FMAC4 soap_in___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap*, const char*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_
#define soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(soap, data, "-ns1:ПолучитьЦеныНоменклатуры", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ * SOAP_FMAC4 soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_
#define soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ * SOAP_FMAC2 soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ * soap_new___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ * soap_new_req___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap *soap) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(soap, _p); } return _p; }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ * soap_new_set___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(soap, _p); _p->ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b = ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b; } return _p; }

inline void soap_delete___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap *soap, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response
#define SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response (254)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap*, const char*, int, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response * SOAP_FMAC4 soap_in___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap*, const char*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response
#define soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(soap, data, "-ns1:ПолучитьЦеныНоменклатуры-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response * SOAP_FMAC4 soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response
#define soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response * SOAP_FMAC2 soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response * soap_new___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response * soap_new_req___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap *soap) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(soap, _p); } return _p; }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response * soap_new_set___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(soap, _p); _p->ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse = ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse; } return _p; }

inline void soap_delete___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap *soap, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_
#define SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ (252)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap*, const char*, int, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ * SOAP_FMAC4 soap_in___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap*, const char*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_
#define soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(soap, data, "-ns1:ПолучитьКурсыВалют", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ * SOAP_FMAC4 soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_
#define soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ * SOAP_FMAC2 soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ * soap_new___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ * soap_new_req___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap *soap) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(soap, _p); } return _p; }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ * soap_new_set___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(soap, _p); _p->ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 = ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442; } return _p; }

inline void soap_delete___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap *soap, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response
#define SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response (251)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap*, const char*, int, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response * SOAP_FMAC4 soap_in___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap*, const char*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response
#define soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(soap, data, "-ns1:ПолучитьКурсыВалют-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response * SOAP_FMAC4 soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response
#define soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response * SOAP_FMAC2 soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response * soap_new___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response * soap_new_req___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap *soap) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(soap, _p); } return _p; }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response * soap_new_set___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(soap, _p); _p->ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response = ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response; } return _p; }

inline void soap_delete___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap *soap, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_
#define SOAP_TYPE___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ (249)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap*, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap*, const char*, int, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ *, const char*);
SOAP_FMAC3 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ * SOAP_FMAC4 soap_in___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap*, const char*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap*, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ *, const char*, const char*);

#ifndef soap_write___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_
#define soap_write___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(soap, data), soap_begin_send(soap) || soap_put___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(soap, data, "-ns1:Остатки", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ * SOAP_FMAC4 soap_get___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ *, const char*, const char*);

#ifndef soap_read___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_
#define soap_read___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ * SOAP_FMAC2 soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ * soap_new___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ * soap_new_req___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap *soap) { struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ *_p = soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(soap, _p); } return _p; }

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ * soap_new_set___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap *soap, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438) { struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ *_p = soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(soap, _p); _p->ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 = ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438; } return _p; }

inline void soap_delete___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap *soap, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response
#define SOAP_TYPE___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response (248)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap*, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap*, const char*, int, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response *, const char*);
SOAP_FMAC3 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response * SOAP_FMAC4 soap_in___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap*, const char*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap*, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response *, const char*, const char*);

#ifndef soap_write___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response
#define soap_write___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(soap, data, "-ns1:Остатки-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response * SOAP_FMAC4 soap_get___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response *, const char*, const char*);

#ifndef soap_read___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response
#define soap_read___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response * SOAP_FMAC2 soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response * soap_new___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response * soap_new_req___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap *soap) { struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response *_p = soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(soap, _p); } return _p; }

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response * soap_new_set___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap *soap, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response) { struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response *_p = soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(soap, _p); _p->ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response = ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response; } return _p; }

inline void soap_delete___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap *soap, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_
#define SOAP_TYPE___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ (246)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, const char*, int, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *, const char*);
SOAP_FMAC3 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * SOAP_FMAC4 soap_in___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, const char*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *, const char*, const char*);

#ifndef soap_write___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_
#define soap_write___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, data), soap_begin_send(soap) || soap_put___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, data, "-ns1:НеВыполненныйСпрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * SOAP_FMAC4 soap_get___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *, const char*, const char*);

#ifndef soap_read___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_
#define soap_read___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * SOAP_FMAC2 soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * soap_new___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * soap_new_req___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap *soap) { struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *_p = soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, _p); } return _p; }

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ * soap_new_set___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap *soap, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441) { struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *_p = soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(soap, _p); _p->ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 = ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441; } return _p; }

inline void soap_delete___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap *soap, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response
#define SOAP_TYPE___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response (245)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, const char*, int, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *, const char*);
SOAP_FMAC3 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * SOAP_FMAC4 soap_in___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, const char*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *, const char*, const char*);

#ifndef soap_write___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response
#define soap_write___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, data, "-ns1:НеВыполненныйСпрос-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * SOAP_FMAC4 soap_get___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *, const char*, const char*);

#ifndef soap_read___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response
#define soap_read___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * SOAP_FMAC2 soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * soap_new___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * soap_new_req___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap *soap) { struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *_p = soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, _p); } return _p; }

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response * soap_new_set___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap *soap, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response) { struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *_p = soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(soap, _p); _p->ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response = ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response; } return _p; }

inline void soap_delete___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap *soap, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_
#define SOAP_TYPE___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ (243)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap*, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap*, const char*, int, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ *, const char*);
SOAP_FMAC3 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ * SOAP_FMAC4 soap_in___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap*, const char*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap*, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ *, const char*, const char*);

#ifndef soap_write___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_
#define soap_write___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(soap, data), soap_begin_send(soap) || soap_put___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(soap, data, "-ns1:ИнформационныеБазы", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ * SOAP_FMAC4 soap_get___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ *, const char*, const char*);

#ifndef soap_read___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_
#define soap_read___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ * SOAP_FMAC2 soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ * soap_new___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ * soap_new_req___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap *soap) { struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ *_p = soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(soap, _p); } return _p; }

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ * soap_new_set___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap *soap, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b) { struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ *_p = soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(soap, _p); _p->ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b = ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b; } return _p; }

inline void soap_delete___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap *soap, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response
#define SOAP_TYPE___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response (242)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap*, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap*, const char*, int, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response *, const char*);
SOAP_FMAC3 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response * SOAP_FMAC4 soap_in___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap*, const char*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap*, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response *, const char*, const char*);

#ifndef soap_write___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response
#define soap_write___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(soap, data, "-ns1:ИнформационныеБазы-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response * SOAP_FMAC4 soap_get___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response *, const char*, const char*);

#ifndef soap_read___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response
#define soap_read___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response * SOAP_FMAC2 soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response * soap_new___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response * soap_new_req___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap *soap) { struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response *_p = soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(soap, _p); } return _p; }

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response * soap_new_set___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap *soap, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse) { struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response *_p = soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(soap, _p); _p->ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse = ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse; } return _p; }

inline void soap_delete___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap *soap, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_
#define SOAP_TYPE___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ (240)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap*, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap*, const char*, int, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ *, const char*);
SOAP_FMAC3 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ * SOAP_FMAC4 soap_in___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap*, const char*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap*, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ *, const char*, const char*);

#ifndef soap_write___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_
#define soap_write___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(soap, data), soap_begin_send(soap) || soap_put___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(soap, data, "-ns1:ДниОтсутствия", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ * SOAP_FMAC4 soap_get___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ *, const char*, const char*);

#ifndef soap_read___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_
#define soap_read___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ * SOAP_FMAC2 soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ * soap_new___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ * soap_new_req___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap *soap) { struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ *_p = soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(soap, _p); } return _p; }

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ * soap_new_set___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap *soap, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f) { struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ *_p = soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(soap, _p); _p->ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f = ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f; } return _p; }

inline void soap_delete___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap *soap, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response
#define SOAP_TYPE___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response (239)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap*, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap*, const char*, int, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response *, const char*);
SOAP_FMAC3 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response * SOAP_FMAC4 soap_in___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap*, const char*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap*, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response *, const char*, const char*);

#ifndef soap_write___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response
#define soap_write___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(soap, data, "-ns1:ДниОтсутствия-Response", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response * SOAP_FMAC4 soap_get___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response *, const char*, const char*);

#ifndef soap_read___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response
#define soap_read___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response * SOAP_FMAC2 soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response * soap_new___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response * soap_new_req___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap *soap) { struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response *_p = soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(soap, _p); } return _p; }

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response * soap_new_set___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap *soap, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse) { struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response *_p = soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(soap, _p); _p->ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse = ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse; } return _p; }

inline void soap_delete___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap *soap, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f_Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetStructureInfo_
#define SOAP_TYPE___ns1__GetStructureInfo_ (237)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetStructureInfo_(struct soap*, struct __ns1__GetStructureInfo_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetStructureInfo_(struct soap*, const struct __ns1__GetStructureInfo_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetStructureInfo_(struct soap*, const char*, int, const struct __ns1__GetStructureInfo_ *, const char*);
SOAP_FMAC3 struct __ns1__GetStructureInfo_ * SOAP_FMAC4 soap_in___ns1__GetStructureInfo_(struct soap*, const char*, struct __ns1__GetStructureInfo_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetStructureInfo_(struct soap*, const struct __ns1__GetStructureInfo_ *, const char*, const char*);

#ifndef soap_write___ns1__GetStructureInfo_
#define soap_write___ns1__GetStructureInfo_(soap, data) ( soap_begin(soap), soap_serialize___ns1__GetStructureInfo_(soap, data), soap_begin_send(soap) || soap_put___ns1__GetStructureInfo_(soap, data, "-ns1:GetStructureInfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__GetStructureInfo_ * SOAP_FMAC4 soap_get___ns1__GetStructureInfo_(struct soap*, struct __ns1__GetStructureInfo_ *, const char*, const char*);

#ifndef soap_read___ns1__GetStructureInfo_
#define soap_read___ns1__GetStructureInfo_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetStructureInfo_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__GetStructureInfo_ * SOAP_FMAC2 soap_instantiate___ns1__GetStructureInfo_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetStructureInfo_ * soap_new___ns1__GetStructureInfo_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetStructureInfo_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetStructureInfo_ * soap_new_req___ns1__GetStructureInfo_(struct soap *soap) { struct __ns1__GetStructureInfo_ *_p = soap_instantiate___ns1__GetStructureInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetStructureInfo_(soap, _p); } return _p; }

inline struct __ns1__GetStructureInfo_ * soap_new_set___ns1__GetStructureInfo_(struct soap *soap, _ns1__GetStructureInfo *ns1__GetStructureInfo) { struct __ns1__GetStructureInfo_ *_p = soap_instantiate___ns1__GetStructureInfo_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetStructureInfo_(soap, _p); _p->ns1__GetStructureInfo = ns1__GetStructureInfo; } return _p; }

inline void soap_delete___ns1__GetStructureInfo_(struct soap *soap, struct __ns1__GetStructureInfo_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetStructureInfo_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetAmountGoods_
#define SOAP_TYPE___ns1__GetAmountGoods_ (235)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetAmountGoods_(struct soap*, struct __ns1__GetAmountGoods_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetAmountGoods_(struct soap*, const struct __ns1__GetAmountGoods_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetAmountGoods_(struct soap*, const char*, int, const struct __ns1__GetAmountGoods_ *, const char*);
SOAP_FMAC3 struct __ns1__GetAmountGoods_ * SOAP_FMAC4 soap_in___ns1__GetAmountGoods_(struct soap*, const char*, struct __ns1__GetAmountGoods_ *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetAmountGoods_(struct soap*, const struct __ns1__GetAmountGoods_ *, const char*, const char*);

#ifndef soap_write___ns1__GetAmountGoods_
#define soap_write___ns1__GetAmountGoods_(soap, data) ( soap_begin(soap), soap_serialize___ns1__GetAmountGoods_(soap, data), soap_begin_send(soap) || soap_put___ns1__GetAmountGoods_(soap, data, "-ns1:GetAmountGoods", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__GetAmountGoods_ * SOAP_FMAC4 soap_get___ns1__GetAmountGoods_(struct soap*, struct __ns1__GetAmountGoods_ *, const char*, const char*);

#ifndef soap_read___ns1__GetAmountGoods_
#define soap_read___ns1__GetAmountGoods_(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetAmountGoods_(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__GetAmountGoods_ * SOAP_FMAC2 soap_instantiate___ns1__GetAmountGoods_(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetAmountGoods_ * soap_new___ns1__GetAmountGoods_(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetAmountGoods_(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetAmountGoods_ * soap_new_req___ns1__GetAmountGoods_(struct soap *soap) { struct __ns1__GetAmountGoods_ *_p = soap_instantiate___ns1__GetAmountGoods_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetAmountGoods_(soap, _p); } return _p; }

inline struct __ns1__GetAmountGoods_ * soap_new_set___ns1__GetAmountGoods_(struct soap *soap, _ns1__GetAmountGoods *ns1__GetAmountGoods) { struct __ns1__GetAmountGoods_ *_p = soap_instantiate___ns1__GetAmountGoods_(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetAmountGoods_(soap, _p); _p->ns1__GetAmountGoods = ns1__GetAmountGoods; } return _p; }

inline void soap_delete___ns1__GetAmountGoods_(struct soap *soap, struct __ns1__GetAmountGoods_ *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetAmountGoods_(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__QueryUniversal
#define SOAP_TYPE___ns1__QueryUniversal (233)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__QueryUniversal(struct soap*, struct __ns1__QueryUniversal *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__QueryUniversal(struct soap*, const struct __ns1__QueryUniversal *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__QueryUniversal(struct soap*, const char*, int, const struct __ns1__QueryUniversal *, const char*);
SOAP_FMAC3 struct __ns1__QueryUniversal * SOAP_FMAC4 soap_in___ns1__QueryUniversal(struct soap*, const char*, struct __ns1__QueryUniversal *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__QueryUniversal(struct soap*, const struct __ns1__QueryUniversal *, const char*, const char*);

#ifndef soap_write___ns1__QueryUniversal
#define soap_write___ns1__QueryUniversal(soap, data) ( soap_begin(soap), soap_serialize___ns1__QueryUniversal(soap, data), soap_begin_send(soap) || soap_put___ns1__QueryUniversal(soap, data, "-ns1:QueryUniversal", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__QueryUniversal * SOAP_FMAC4 soap_get___ns1__QueryUniversal(struct soap*, struct __ns1__QueryUniversal *, const char*, const char*);

#ifndef soap_read___ns1__QueryUniversal
#define soap_read___ns1__QueryUniversal(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__QueryUniversal(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__QueryUniversal * SOAP_FMAC2 soap_instantiate___ns1__QueryUniversal(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__QueryUniversal * soap_new___ns1__QueryUniversal(struct soap *soap, int n = -1) { return soap_instantiate___ns1__QueryUniversal(soap, n, NULL, NULL, NULL); }

inline struct __ns1__QueryUniversal * soap_new_req___ns1__QueryUniversal(struct soap *soap) { struct __ns1__QueryUniversal *_p = soap_instantiate___ns1__QueryUniversal(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryUniversal(soap, _p); } return _p; }

inline struct __ns1__QueryUniversal * soap_new_set___ns1__QueryUniversal(struct soap *soap, _ns1__QueryUniversal *ns1__QueryUniversal) { struct __ns1__QueryUniversal *_p = soap_instantiate___ns1__QueryUniversal(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__QueryUniversal(soap, _p); _p->ns1__QueryUniversal = ns1__QueryUniversal; } return _p; }

inline void soap_delete___ns1__QueryUniversal(struct soap *soap, struct __ns1__QueryUniversal *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__QueryUniversal(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435
#define SOAP_TYPE___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 (229)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, const char*, int, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *, const char*);
SOAP_FMAC3 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * SOAP_FMAC4 soap_in___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, const char*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *, const char*, const char*);

#ifndef soap_write___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435
#define soap_write___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data), soap_begin_send(soap) || soap_put___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data, "-ns1:ЗаписатьДанные", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * SOAP_FMAC4 soap_get___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *, const char*, const char*);

#ifndef soap_read___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435
#define soap_read___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * SOAP_FMAC2 soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * soap_new___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * soap_new_req___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap *soap) { struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *_p = soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, _p); } return _p; }

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 * soap_new_set___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap *soap, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435) { struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *_p = soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, _p); _p->ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 = ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435; } return _p; }

inline void soap_delete___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap *soap, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response
#define SOAP_TYPE___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response (228)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, const char*, int, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *, const char*);
SOAP_FMAC3 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * SOAP_FMAC4 soap_in___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, const char*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, const struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *, const char*, const char*);

#ifndef soap_write___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response
#define soap_write___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data, "-ns1:ЗаписатьДанныеResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * SOAP_FMAC4 soap_get___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *, const char*, const char*);

#ifndef soap_read___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response
#define soap_read___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * SOAP_FMAC2 soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * soap_new___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * soap_new_req___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap *soap) { struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *_p = soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, _p); } return _p; }

inline struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response * soap_new_set___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap *soap, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response) { struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *_p = soap_instantiate___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, _p); _p->ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response = ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response; } return _p; }

inline void soap_delete___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap *soap, struct __ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c
#define SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c (224)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, const char*, int, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *, const char*);
SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * SOAP_FMAC4 soap_in___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, const char*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *, const char*, const char*);

#ifndef soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c
#define soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data), soap_begin_send(soap) || soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data, "-ns1:ЦеныНоменклатурыПоПериодам", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * SOAP_FMAC4 soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *, const char*, const char*);

#ifndef soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c
#define soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * SOAP_FMAC2 soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * soap_new___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * soap_new_req___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap *soap) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, _p); } return _p; }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c * soap_new_set___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, _p); _p->ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c = ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c; } return _p; }

inline void soap_delete___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap *soap, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse
#define SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse (223)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, const char*, int, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *, const char*);
SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * SOAP_FMAC4 soap_in___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, const char*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *, const char*, const char*);

#ifndef soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse
#define soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data), soap_begin_send(soap) || soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data, "-ns1:ЦеныНоменклатурыПоПериодамResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * SOAP_FMAC4 soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *, const char*, const char*);

#ifndef soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse
#define soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * SOAP_FMAC2 soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * soap_new___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * soap_new_req___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap *soap) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, _p); } return _p; }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse * soap_new_set___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, _p); _p->ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse = ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse; } return _p; }

inline void soap_delete___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap *soap, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414
#define SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 (219)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, const char*, int, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *, const char*);
SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * SOAP_FMAC4 soap_in___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, const char*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *, const char*, const char*);

#ifndef soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414
#define soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data), soap_begin_send(soap) || soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data, "-ns1:ЦеныНоменклатурыПоГТД", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * SOAP_FMAC4 soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *, const char*, const char*);

#ifndef soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414
#define soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * SOAP_FMAC2 soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * soap_new___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * soap_new_req___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap *soap) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, _p); } return _p; }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 * soap_new_set___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, _p); _p->ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 = ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414; } return _p; }

inline void soap_delete___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap *soap, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response
#define SOAP_TYPE___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response (218)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, const char*, int, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *, const char*);
SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * SOAP_FMAC4 soap_in___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, const char*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, const struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *, const char*, const char*);

#ifndef soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response
#define soap_write___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data, "-ns1:ЦеныНоменклатурыПоГТДResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * SOAP_FMAC4 soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *, const char*, const char*);

#ifndef soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response
#define soap_read___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * SOAP_FMAC2 soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * soap_new___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * soap_new_req___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap *soap) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, _p); } return _p; }

inline struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response * soap_new_set___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap *soap, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response) { struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *_p = soap_instantiate___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, _p); _p->ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response = ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response; } return _p; }

inline void soap_delete___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap *soap, struct __ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define SOAP_TYPE___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 (214)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char*, int, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*);
SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_in___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_write___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_write___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data), soap_begin_send(soap) || soap_put___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data, "-ns1:РасширенныйЗапрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_get___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_read___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_read___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC2 soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new_req___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap) { struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, _p); } return _p; }

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new_set___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441) { struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, _p); _p->ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 = ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441; } return _p; }

inline void soap_delete___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response (213)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char*, int, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*);
SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_in___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_write___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_write___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data, "-ns1:РасширенныйЗапросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_get___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_read___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_read___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC2 soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new_req___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap) { struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, _p); } return _p; }

inline struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new_set___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response) { struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, _p); _p->ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response = ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response; } return _p; }

inline void soap_delete___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, struct __ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define SOAP_TYPE___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 (209)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char*, int, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*);
SOAP_FMAC3 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_in___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_write___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_write___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data), soap_begin_send(soap) || soap_put___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data, "-ns1:УниверсальныйЗапрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_get___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_read___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_read___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * SOAP_FMAC2 soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new_req___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap) { struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *_p = soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, _p); } return _p; }

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 * soap_new_set___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441) { struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *_p = soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, _p); _p->ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 = ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441; } return _p; }

inline void soap_delete___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap *soap, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response (208)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char*, int, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*);
SOAP_FMAC3 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_in___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_write___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_write___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data, "-ns1:УниверсальныйЗапросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_get___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_read___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_read___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * SOAP_FMAC2 soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new_req___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap) { struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *_p = soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, _p); } return _p; }

inline struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response * soap_new_set___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response) { struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *_p = soap_instantiate___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, _p); _p->ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response = ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response; } return _p; }

inline void soap_delete___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap *soap, struct __ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438
#define SOAP_TYPE___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 (204)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, const char*, int, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *, const char*);
SOAP_FMAC3 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * SOAP_FMAC4 soap_in___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, const char*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *, const char*, const char*);

#ifndef soap_write___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438
#define soap_write___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data), soap_begin_send(soap) || soap_put___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data, "-ns1:ТоварыВПути", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * SOAP_FMAC4 soap_get___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *, const char*, const char*);

#ifndef soap_read___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438
#define soap_read___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * SOAP_FMAC2 soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * soap_new___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * soap_new_req___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap *soap) { struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *_p = soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, _p); } return _p; }

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 * soap_new_set___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap *soap, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438) { struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *_p = soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, _p); _p->ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 = ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438; } return _p; }

inline void soap_delete___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap *soap, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response
#define SOAP_TYPE___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response (203)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, const char*, int, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *, const char*);
SOAP_FMAC3 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * SOAP_FMAC4 soap_in___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, const char*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, const struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *, const char*, const char*);

#ifndef soap_write___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response
#define soap_write___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data, "-ns1:ТоварыВПутиResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * SOAP_FMAC4 soap_get___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *, const char*, const char*);

#ifndef soap_read___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response
#define soap_read___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * SOAP_FMAC2 soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * soap_new___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * soap_new_req___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap *soap) { struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *_p = soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, _p); } return _p; }

inline struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response * soap_new_set___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap *soap, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response) { struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *_p = soap_instantiate___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, _p); _p->ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response = ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response; } return _p; }

inline void soap_delete___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap *soap, struct __ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define SOAP_TYPE___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 (199)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char*, int, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*);
SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_in___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_write___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_write___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data), soap_begin_send(soap) || soap_put___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data, "-ns1:РасчитатьАномальныйСпрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_get___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_read___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_read___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC2 soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new_req___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap) { struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, _p); } return _p; }

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new_set___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441) { struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, _p); _p->ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 = ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441; } return _p; }

inline void soap_delete___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response (198)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char*, int, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*);
SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_in___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_write___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_write___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data, "-ns1:РасчитатьАномальныйСпросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_get___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_read___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_read___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC2 soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new_req___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap) { struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, _p); } return _p; }

inline struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new_set___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response) { struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *_p = soap_instantiate___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, _p); _p->ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response = ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response; } return _p; }

inline void soap_delete___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, struct __ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438
#define SOAP_TYPE___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 (194)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, const char*, int, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * SOAP_FMAC4 soap_in___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, const char*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438
#define soap_write___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data, "-ns1:Продажи", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * SOAP_FMAC4 soap_get___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438
#define soap_read___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * SOAP_FMAC2 soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * soap_new___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * soap_new_req___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap *soap) { struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *_p = soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, _p); } return _p; }

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 * soap_new_set___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap *soap, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438) { struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *_p = soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, _p); _p->ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 = ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438; } return _p; }

inline void soap_delete___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap *soap, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response
#define SOAP_TYPE___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response (193)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, const char*, int, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * SOAP_FMAC4 soap_in___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, const char*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, const struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response
#define soap_write___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data, "-ns1:ПродажиResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * SOAP_FMAC4 soap_get___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response
#define soap_read___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * SOAP_FMAC2 soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * soap_new___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * soap_new_req___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap *soap) { struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *_p = soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, _p); } return _p; }

inline struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response * soap_new_set___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap *soap, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response) { struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *_p = soap_instantiate___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, _p); _p->ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response = ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response; } return _p; }

inline void soap_delete___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap *soap, struct __ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b
#define SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b (189)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, const char*, int, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * SOAP_FMAC4 soap_in___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, const char*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b
#define soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data, "-ns1:ПолучитьЦеныНоменклатуры", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * SOAP_FMAC4 soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b
#define soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * SOAP_FMAC2 soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * soap_new___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * soap_new_req___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap *soap) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, _p); } return _p; }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b * soap_new_set___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, _p); _p->ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b = ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b; } return _p; }

inline void soap_delete___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap *soap, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse
#define SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse (188)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, const char*, int, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * SOAP_FMAC4 soap_in___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, const char*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse
#define soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data, "-ns1:ПолучитьЦеныНоменклатурыResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * SOAP_FMAC4 soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse
#define soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * SOAP_FMAC2 soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * soap_new___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * soap_new_req___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap *soap) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, _p); } return _p; }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse * soap_new_set___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, _p); _p->ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse = ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse; } return _p; }

inline void soap_delete___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap *soap, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442
#define SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 (184)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, const char*, int, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * SOAP_FMAC4 soap_in___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, const char*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442
#define soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data, "-ns1:ПолучитьКурсыВалют", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * SOAP_FMAC4 soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442
#define soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * SOAP_FMAC2 soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * soap_new___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * soap_new_req___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap *soap) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, _p); } return _p; }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 * soap_new_set___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, _p); _p->ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 = ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442; } return _p; }

inline void soap_delete___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap *soap, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response
#define SOAP_TYPE___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response (183)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, const char*, int, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *, const char*);
SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * SOAP_FMAC4 soap_in___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, const char*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, const struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *, const char*, const char*);

#ifndef soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response
#define soap_write___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data, "-ns1:ПолучитьКурсыВалютResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * SOAP_FMAC4 soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *, const char*, const char*);

#ifndef soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response
#define soap_read___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * SOAP_FMAC2 soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * soap_new___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * soap_new_req___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap *soap) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, _p); } return _p; }

inline struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response * soap_new_set___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap *soap, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response) { struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *_p = soap_instantiate___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, _p); _p->ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response = ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response; } return _p; }

inline void soap_delete___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap *soap, struct __ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438
#define SOAP_TYPE___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 (179)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, const char*, int, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *, const char*);
SOAP_FMAC3 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * SOAP_FMAC4 soap_in___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, const char*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *, const char*, const char*);

#ifndef soap_write___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438
#define soap_write___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data), soap_begin_send(soap) || soap_put___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data, "-ns1:Остатки", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * SOAP_FMAC4 soap_get___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *, const char*, const char*);

#ifndef soap_read___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438
#define soap_read___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * SOAP_FMAC2 soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * soap_new___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * soap_new_req___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap *soap) { struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *_p = soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, _p); } return _p; }

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 * soap_new_set___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap *soap, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438) { struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *_p = soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, _p); _p->ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 = ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438; } return _p; }

inline void soap_delete___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap *soap, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response
#define SOAP_TYPE___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response (178)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, const char*, int, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *, const char*);
SOAP_FMAC3 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * SOAP_FMAC4 soap_in___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, const char*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, const struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *, const char*, const char*);

#ifndef soap_write___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response
#define soap_write___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data, "-ns1:ОстаткиResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * SOAP_FMAC4 soap_get___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *, const char*, const char*);

#ifndef soap_read___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response
#define soap_read___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * SOAP_FMAC2 soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * soap_new___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * soap_new_req___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap *soap) { struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *_p = soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, _p); } return _p; }

inline struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response * soap_new_set___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap *soap, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response) { struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *_p = soap_instantiate___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, _p); _p->ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response = ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response; } return _p; }

inline void soap_delete___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap *soap, struct __ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define SOAP_TYPE___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 (174)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char*, int, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*);
SOAP_FMAC3 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_in___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_write___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_write___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data), soap_begin_send(soap) || soap_put___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data, "-ns1:НеВыполненныйСпрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC4 soap_get___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *, const char*, const char*);

#ifndef soap_read___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_read___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * SOAP_FMAC2 soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new_req___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap) { struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *_p = soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, _p); } return _p; }

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 * soap_new_set___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441) { struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *_p = soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, _p); _p->ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 = ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441; } return _p; }

inline void soap_delete___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap *soap, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response (173)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char*, int, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*);
SOAP_FMAC3 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_in___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_write___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_write___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), soap_serialize___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data), soap_begin_send(soap) || soap_put___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data, "-ns1:НеВыполненныйСпросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC4 soap_get___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *, const char*, const char*);

#ifndef soap_read___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_read___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * SOAP_FMAC2 soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new_req___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap) { struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *_p = soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, _p); } return _p; }

inline struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response * soap_new_set___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response) { struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *_p = soap_instantiate___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, _p); _p->ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response = ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response; } return _p; }

inline void soap_delete___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap *soap, struct __ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b
#define SOAP_TYPE___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b (169)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, const char*, int, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *, const char*);
SOAP_FMAC3 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * SOAP_FMAC4 soap_in___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, const char*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *, const char*, const char*);

#ifndef soap_write___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b
#define soap_write___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data), soap_begin_send(soap) || soap_put___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data, "-ns1:ИнформационныеБазы", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * SOAP_FMAC4 soap_get___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *, const char*, const char*);

#ifndef soap_read___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b
#define soap_read___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * SOAP_FMAC2 soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * soap_new___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * soap_new_req___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap *soap) { struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *_p = soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, _p); } return _p; }

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b * soap_new_set___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap *soap, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b) { struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *_p = soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, _p); _p->ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b = ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b; } return _p; }

inline void soap_delete___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap *soap, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse
#define SOAP_TYPE___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse (168)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, const char*, int, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *, const char*);
SOAP_FMAC3 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * SOAP_FMAC4 soap_in___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, const char*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, const struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *, const char*, const char*);

#ifndef soap_write___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse
#define soap_write___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data), soap_begin_send(soap) || soap_put___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data, "-ns1:ИнформационныеБазыResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * SOAP_FMAC4 soap_get___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *, const char*, const char*);

#ifndef soap_read___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse
#define soap_read___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * SOAP_FMAC2 soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * soap_new___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * soap_new_req___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap *soap) { struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *_p = soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, _p); } return _p; }

inline struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse * soap_new_set___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap *soap, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse) { struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *_p = soap_instantiate___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, _p); _p->ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse = ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse; } return _p; }

inline void soap_delete___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap *soap, struct __ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f
#define SOAP_TYPE___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f (164)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, const char*, int, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *, const char*);
SOAP_FMAC3 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * SOAP_FMAC4 soap_in___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, const char*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *, const char*, const char*);

#ifndef soap_write___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f
#define soap_write___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data), soap_begin_send(soap) || soap_put___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data, "-ns1:ДниОтсутствия", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * SOAP_FMAC4 soap_get___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *, const char*, const char*);

#ifndef soap_read___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f
#define soap_read___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * SOAP_FMAC2 soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * soap_new___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * soap_new_req___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap *soap) { struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *_p = soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, _p); } return _p; }

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f * soap_new_set___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap *soap, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f) { struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *_p = soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, _p); _p->ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f = ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f; } return _p; }

inline void soap_delete___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap *soap, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse
#define SOAP_TYPE___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse (163)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, const char*, int, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *, const char*);
SOAP_FMAC3 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * SOAP_FMAC4 soap_in___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, const char*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, const struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *, const char*, const char*);

#ifndef soap_write___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse
#define soap_write___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data) ( soap_begin(soap), soap_serialize___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data), soap_begin_send(soap) || soap_put___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data, "-ns1:ДниОтсутствияResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * SOAP_FMAC4 soap_get___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *, const char*, const char*);

#ifndef soap_read___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse
#define soap_read___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * SOAP_FMAC2 soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * soap_new___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap *soap, int n = -1) { return soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, n, NULL, NULL, NULL); }

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * soap_new_req___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap *soap) { struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *_p = soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, _p); } return _p; }

inline struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse * soap_new_set___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap *soap, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse) { struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *_p = soap_instantiate___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, _p); _p->ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse = ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse; } return _p; }

inline void soap_delete___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap *soap, struct __ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetStructureInfo
#define SOAP_TYPE___ns1__GetStructureInfo (159)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetStructureInfo(struct soap*, struct __ns1__GetStructureInfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetStructureInfo(struct soap*, const struct __ns1__GetStructureInfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetStructureInfo(struct soap*, const char*, int, const struct __ns1__GetStructureInfo *, const char*);
SOAP_FMAC3 struct __ns1__GetStructureInfo * SOAP_FMAC4 soap_in___ns1__GetStructureInfo(struct soap*, const char*, struct __ns1__GetStructureInfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetStructureInfo(struct soap*, const struct __ns1__GetStructureInfo *, const char*, const char*);

#ifndef soap_write___ns1__GetStructureInfo
#define soap_write___ns1__GetStructureInfo(soap, data) ( soap_begin(soap), soap_serialize___ns1__GetStructureInfo(soap, data), soap_begin_send(soap) || soap_put___ns1__GetStructureInfo(soap, data, "-ns1:GetStructureInfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__GetStructureInfo * SOAP_FMAC4 soap_get___ns1__GetStructureInfo(struct soap*, struct __ns1__GetStructureInfo *, const char*, const char*);

#ifndef soap_read___ns1__GetStructureInfo
#define soap_read___ns1__GetStructureInfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetStructureInfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__GetStructureInfo * SOAP_FMAC2 soap_instantiate___ns1__GetStructureInfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetStructureInfo * soap_new___ns1__GetStructureInfo(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetStructureInfo(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetStructureInfo * soap_new_req___ns1__GetStructureInfo(struct soap *soap) { struct __ns1__GetStructureInfo *_p = soap_instantiate___ns1__GetStructureInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetStructureInfo(soap, _p); } return _p; }

inline struct __ns1__GetStructureInfo * soap_new_set___ns1__GetStructureInfo(struct soap *soap, _ns1__GetStructureInfo *ns1__GetStructureInfo) { struct __ns1__GetStructureInfo *_p = soap_instantiate___ns1__GetStructureInfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetStructureInfo(soap, _p); _p->ns1__GetStructureInfo = ns1__GetStructureInfo; } return _p; }

inline void soap_delete___ns1__GetStructureInfo(struct soap *soap, struct __ns1__GetStructureInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetStructureInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__GetAmountGoods
#define SOAP_TYPE___ns1__GetAmountGoods (155)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__GetAmountGoods(struct soap*, struct __ns1__GetAmountGoods *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__GetAmountGoods(struct soap*, const struct __ns1__GetAmountGoods *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__GetAmountGoods(struct soap*, const char*, int, const struct __ns1__GetAmountGoods *, const char*);
SOAP_FMAC3 struct __ns1__GetAmountGoods * SOAP_FMAC4 soap_in___ns1__GetAmountGoods(struct soap*, const char*, struct __ns1__GetAmountGoods *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__GetAmountGoods(struct soap*, const struct __ns1__GetAmountGoods *, const char*, const char*);

#ifndef soap_write___ns1__GetAmountGoods
#define soap_write___ns1__GetAmountGoods(soap, data) ( soap_begin(soap), soap_serialize___ns1__GetAmountGoods(soap, data), soap_begin_send(soap) || soap_put___ns1__GetAmountGoods(soap, data, "-ns1:GetAmountGoods", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__GetAmountGoods * SOAP_FMAC4 soap_get___ns1__GetAmountGoods(struct soap*, struct __ns1__GetAmountGoods *, const char*, const char*);

#ifndef soap_read___ns1__GetAmountGoods
#define soap_read___ns1__GetAmountGoods(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__GetAmountGoods(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__GetAmountGoods * SOAP_FMAC2 soap_instantiate___ns1__GetAmountGoods(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__GetAmountGoods * soap_new___ns1__GetAmountGoods(struct soap *soap, int n = -1) { return soap_instantiate___ns1__GetAmountGoods(soap, n, NULL, NULL, NULL); }

inline struct __ns1__GetAmountGoods * soap_new_req___ns1__GetAmountGoods(struct soap *soap) { struct __ns1__GetAmountGoods *_p = soap_instantiate___ns1__GetAmountGoods(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetAmountGoods(soap, _p); } return _p; }

inline struct __ns1__GetAmountGoods * soap_new_set___ns1__GetAmountGoods(struct soap *soap, _ns1__GetAmountGoods *ns1__GetAmountGoods) { struct __ns1__GetAmountGoods *_p = soap_instantiate___ns1__GetAmountGoods(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__GetAmountGoods(soap, _p); _p->ns1__GetAmountGoods = ns1__GetAmountGoods; } return _p; }

inline void soap_delete___ns1__GetAmountGoods(struct soap *soap, struct __ns1__GetAmountGoods *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__GetAmountGoods(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (291)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (290)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (284)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__QueryUniversalResponse
#define SOAP_TYPE_PointerTo_ns1__QueryUniversalResponse (231)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryUniversalResponse(struct soap*, _ns1__QueryUniversalResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryUniversalResponse(struct soap*, const char *, int, _ns1__QueryUniversalResponse *const*, const char *);
SOAP_FMAC3 _ns1__QueryUniversalResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryUniversalResponse(struct soap*, const char*, _ns1__QueryUniversalResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryUniversalResponse(struct soap*, _ns1__QueryUniversalResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__QueryUniversalResponse
#define soap_write_PointerTo_ns1__QueryUniversalResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__QueryUniversalResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__QueryUniversalResponse(soap, data, "ns1:QueryUniversalResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__QueryUniversalResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryUniversalResponse(struct soap*, _ns1__QueryUniversalResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__QueryUniversalResponse
#define soap_read_PointerTo_ns1__QueryUniversalResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__QueryUniversalResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__QueryUniversal
#define SOAP_TYPE_PointerTo_ns1__QueryUniversal (230)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryUniversal(struct soap*, _ns1__QueryUniversal *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryUniversal(struct soap*, const char *, int, _ns1__QueryUniversal *const*, const char *);
SOAP_FMAC3 _ns1__QueryUniversal ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryUniversal(struct soap*, const char*, _ns1__QueryUniversal **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryUniversal(struct soap*, _ns1__QueryUniversal *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__QueryUniversal
#define soap_write_PointerTo_ns1__QueryUniversal(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__QueryUniversal(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__QueryUniversal(soap, data, "ns1:QueryUniversal", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__QueryUniversal ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryUniversal(struct soap*, _ns1__QueryUniversal **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__QueryUniversal
#define soap_read_PointerTo_ns1__QueryUniversal(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__QueryUniversal(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response
#define SOAP_TYPE_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response (226)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, const char *, int, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *const*, const char *);
SOAP_FMAC3 _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, const char*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response
#define soap_write_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data, "ns1:ЗаписатьДанныеResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(struct soap*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response
#define soap_read_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435
#define SOAP_TYPE_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 (225)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, const char *, int, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *const*, const char *);
SOAP_FMAC3 _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, const char*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435
#define soap_write_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data, "ns1:ЗаписатьДанные", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(struct soap*, _ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435 **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435
#define soap_read_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0417_x0430_x043f_x0438_x0441_x0430_x0442_x044c_x0414_x0430_x043d_x043d_x044b_x0435(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse
#define SOAP_TYPE_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse (221)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, const char *, int, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *const*, const char *);
SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, const char*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse
#define soap_write_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data, "ns1:ЦеныНоменклатурыПоПериодамResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse
#define soap_read_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043cResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c
#define SOAP_TYPE_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c (220)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, const char *, int, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *const*, const char *);
SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, const char*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c
#define soap_write_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data, "ns1:ЦеныНоменклатурыПоПериодам", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c
#define soap_read_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x041f_x0435_x0440_x0438_x043e_x0434_x0430_x043c(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response
#define SOAP_TYPE_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response (216)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, const char *, int, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *const*, const char *);
SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, const char*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response
#define soap_write_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data, "ns1:ЦеныНоменклатурыПоГТДResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response
#define soap_read_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414
#define SOAP_TYPE_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 (215)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, const char *, int, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *const*, const char *);
SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, const char*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414
#define soap_write_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data, "ns1:ЦеныНоменклатурыПоГТД", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(struct soap*, _ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414 **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414
#define soap_read_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b_x041f_x043e_x0413_x0422_x0414(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response (211)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char *, int, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *const*, const char *);
SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_write_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data, "ns1:РасширенныйЗапросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_read_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define SOAP_TYPE_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 (210)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char *, int, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *const*, const char *);
SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_write_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data, "ns1:РасширенныйЗапрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_read_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0420_x0430_x0441_x0448_x0438_x0440_x0435_x043d_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response (206)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char *, int, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *const*, const char *);
SOAP_FMAC3 _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, const char*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_write_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data, "ns1:УниверсальныйЗапросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response
#define soap_read_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define SOAP_TYPE_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 (205)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char *, int, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *const*, const char *);
SOAP_FMAC3 _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, const char*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_write_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data, "ns1:УниверсальныйЗапрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441 **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441
#define soap_read_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0423_x043d_x0438_x0432_x0435_x0440_x0441_x0430_x043b_x044c_x043d_x044b_x0439_x0417_x0430_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response
#define SOAP_TYPE_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response (201)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, const char *, int, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *const*, const char *);
SOAP_FMAC3 _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, const char*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response
#define soap_write_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data, "ns1:ТоварыВПутиResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(struct soap*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response
#define soap_read_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438
#define SOAP_TYPE_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 (200)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, const char *, int, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *const*, const char *);
SOAP_FMAC3 _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, const char*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438
#define soap_write_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data, "ns1:ТоварыВПути", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(struct soap*, _ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438 **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438
#define soap_read_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0422_x043e_x0432_x0430_x0440_x044b_x0412_x041f_x0443_x0442_x0438(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response (196)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char *, int, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *const*, const char *);
SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_write_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data, "ns1:РасчитатьАномальныйСпросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_read_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define SOAP_TYPE_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 (195)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char *, int, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *const*, const char *);
SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_write_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data, "ns1:РасчитатьАномальныйСпрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, _ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_read_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0420_x0430_x0441_x0447_x0438_x0442_x0430_x0442_x044c_x0410_x043d_x043e_x043c_x0430_x043b_x044c_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response
#define SOAP_TYPE_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response (191)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, const char *, int, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *const*, const char *);
SOAP_FMAC3 _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response ** SOAP_FMAC4 soap_in_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, const char*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response
#define soap_write_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data, "ns1:ПродажиResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response ** SOAP_FMAC4 soap_get_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(struct soap*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response
#define soap_read_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438
#define SOAP_TYPE_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 (190)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, const char *, int, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *const*, const char *);
SOAP_FMAC3 _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 ** SOAP_FMAC4 soap_in_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, const char*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438
#define soap_write_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data, "ns1:Продажи", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 ** SOAP_FMAC4 soap_get_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(struct soap*, _ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438 **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438
#define soap_read_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x041f_x0440_x043e_x0434_x0430_x0436_x0438(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse
#define SOAP_TYPE_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse (186)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, const char *, int, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *const*, const char *);
SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, const char*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse
#define soap_write_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data, "ns1:ПолучитьЦеныНоменклатурыResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse
#define soap_read_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044bResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b
#define SOAP_TYPE_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b (185)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, const char *, int, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *const*, const char *);
SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b ** SOAP_FMAC4 soap_in_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, const char*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b
#define soap_write_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data, "ns1:ПолучитьЦеныНоменклатуры", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b ** SOAP_FMAC4 soap_get_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b
#define soap_read_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x0426_x0435_x043d_x044b_x041d_x043e_x043c_x0435_x043d_x043a_x043b_x0430_x0442_x0443_x0440_x044b(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response
#define SOAP_TYPE_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response (181)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, const char *, int, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *const*, const char *);
SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response ** SOAP_FMAC4 soap_in_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, const char*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response
#define soap_write_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data, "ns1:ПолучитьКурсыВалютResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response ** SOAP_FMAC4 soap_get_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response
#define soap_read_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442
#define SOAP_TYPE_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 (180)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, const char *, int, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *const*, const char *);
SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 ** SOAP_FMAC4 soap_in_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, const char*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442
#define soap_write_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data, "ns1:ПолучитьКурсыВалют", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 ** SOAP_FMAC4 soap_get_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(struct soap*, _ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442 **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442
#define soap_read_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x041f_x043e_x043b_x0443_x0447_x0438_x0442_x044c_x041a_x0443_x0440_x0441_x044b_x0412_x0430_x043b_x044e_x0442(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response
#define SOAP_TYPE_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response (176)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, const char *, int, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *const*, const char *);
SOAP_FMAC3 _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response ** SOAP_FMAC4 soap_in_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, const char*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response
#define soap_write_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data, "ns1:ОстаткиResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response ** SOAP_FMAC4 soap_get_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(struct soap*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response
#define soap_read_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438
#define SOAP_TYPE_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 (175)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, const char *, int, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *const*, const char *);
SOAP_FMAC3 _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 ** SOAP_FMAC4 soap_in_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, const char*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438
#define soap_write_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data, "ns1:Остатки", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 ** SOAP_FMAC4 soap_get_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(struct soap*, _ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438 **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438
#define soap_read_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x041e_x0441_x0442_x0430_x0442_x043a_x0438(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define SOAP_TYPE_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response (171)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char *, int, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *const*, const char *);
SOAP_FMAC3 _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response ** SOAP_FMAC4 soap_in_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, const char*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_write_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data, "ns1:НеВыполненныйСпросResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response ** SOAP_FMAC4 soap_get_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(struct soap*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response
#define soap_read_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441Response(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define SOAP_TYPE_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 (170)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char *, int, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *const*, const char *);
SOAP_FMAC3 _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 ** SOAP_FMAC4 soap_in_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, const char*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_write_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data, "ns1:НеВыполненныйСпрос", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 ** SOAP_FMAC4 soap_get_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(struct soap*, _ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441 **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441
#define soap_read_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x041d_x0435_x0412_x044b_x043f_x043e_x043b_x043d_x0435_x043d_x043d_x044b_x0439_x0421_x043f_x0440_x043e_x0441(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse
#define SOAP_TYPE_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse (166)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, const char *, int, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *const*, const char *);
SOAP_FMAC3 _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, const char*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse
#define soap_write_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data, "ns1:ИнформационныеБазыResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(struct soap*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse
#define soap_read_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044bResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b
#define SOAP_TYPE_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b (165)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, const char *, int, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *const*, const char *);
SOAP_FMAC3 _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, const char*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b
#define soap_write_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data, "ns1:ИнформационныеБазы", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(struct soap*, _ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b
#define soap_read_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0418_x043d_x0444_x043e_x0440_x043c_x0430_x0446_x0438_x043e_x043d_x043d_x044b_x0435_x0411_x0430_x0437_x044b(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse
#define SOAP_TYPE_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse (161)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, const char *, int, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *const*, const char *);
SOAP_FMAC3 _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, const char*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse
#define soap_write_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data, "ns1:ДниОтсутствияResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(struct soap*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse
#define soap_read_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044fResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f
#define SOAP_TYPE_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f (160)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, const char *, int, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *const*, const char *);
SOAP_FMAC3 _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f ** SOAP_FMAC4 soap_in_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, const char*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f
#define soap_write_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data, "ns1:ДниОтсутствия", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f ** SOAP_FMAC4 soap_get_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(struct soap*, _ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f
#define soap_read_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1___x0414_x043d_x0438_x041e_x0442_x0441_x0443_x0442_x0441_x0442_x0432_x0438_x044f(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetStructureInfoResponse
#define SOAP_TYPE_PointerTo_ns1__GetStructureInfoResponse (157)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetStructureInfoResponse(struct soap*, _ns1__GetStructureInfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetStructureInfoResponse(struct soap*, const char *, int, _ns1__GetStructureInfoResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetStructureInfoResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetStructureInfoResponse(struct soap*, const char*, _ns1__GetStructureInfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetStructureInfoResponse(struct soap*, _ns1__GetStructureInfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetStructureInfoResponse
#define soap_write_PointerTo_ns1__GetStructureInfoResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__GetStructureInfoResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__GetStructureInfoResponse(soap, data, "ns1:GetStructureInfoResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__GetStructureInfoResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetStructureInfoResponse(struct soap*, _ns1__GetStructureInfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetStructureInfoResponse
#define soap_read_PointerTo_ns1__GetStructureInfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetStructureInfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetStructureInfo
#define SOAP_TYPE_PointerTo_ns1__GetStructureInfo (156)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetStructureInfo(struct soap*, _ns1__GetStructureInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetStructureInfo(struct soap*, const char *, int, _ns1__GetStructureInfo *const*, const char *);
SOAP_FMAC3 _ns1__GetStructureInfo ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetStructureInfo(struct soap*, const char*, _ns1__GetStructureInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetStructureInfo(struct soap*, _ns1__GetStructureInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetStructureInfo
#define soap_write_PointerTo_ns1__GetStructureInfo(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__GetStructureInfo(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__GetStructureInfo(soap, data, "ns1:GetStructureInfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__GetStructureInfo ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetStructureInfo(struct soap*, _ns1__GetStructureInfo **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetStructureInfo
#define soap_read_PointerTo_ns1__GetStructureInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetStructureInfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetAmountGoodsResponse
#define SOAP_TYPE_PointerTo_ns1__GetAmountGoodsResponse (153)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetAmountGoodsResponse(struct soap*, _ns1__GetAmountGoodsResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetAmountGoodsResponse(struct soap*, const char *, int, _ns1__GetAmountGoodsResponse *const*, const char *);
SOAP_FMAC3 _ns1__GetAmountGoodsResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetAmountGoodsResponse(struct soap*, const char*, _ns1__GetAmountGoodsResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetAmountGoodsResponse(struct soap*, _ns1__GetAmountGoodsResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetAmountGoodsResponse
#define soap_write_PointerTo_ns1__GetAmountGoodsResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__GetAmountGoodsResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__GetAmountGoodsResponse(soap, data, "ns1:GetAmountGoodsResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__GetAmountGoodsResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetAmountGoodsResponse(struct soap*, _ns1__GetAmountGoodsResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetAmountGoodsResponse
#define soap_read_PointerTo_ns1__GetAmountGoodsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetAmountGoodsResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__GetAmountGoods
#define SOAP_TYPE_PointerTo_ns1__GetAmountGoods (152)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__GetAmountGoods(struct soap*, _ns1__GetAmountGoods *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__GetAmountGoods(struct soap*, const char *, int, _ns1__GetAmountGoods *const*, const char *);
SOAP_FMAC3 _ns1__GetAmountGoods ** SOAP_FMAC4 soap_in_PointerTo_ns1__GetAmountGoods(struct soap*, const char*, _ns1__GetAmountGoods **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__GetAmountGoods(struct soap*, _ns1__GetAmountGoods *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__GetAmountGoods
#define soap_write_PointerTo_ns1__GetAmountGoods(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__GetAmountGoods(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__GetAmountGoods(soap, data, "ns1:GetAmountGoods", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__GetAmountGoods ** SOAP_FMAC4 soap_get_PointerTo_ns1__GetAmountGoods(struct soap*, _ns1__GetAmountGoods **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__GetAmountGoods
#define soap_read_PointerTo_ns1__GetAmountGoods(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__GetAmountGoods(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__base64Binary
#define SOAP_TYPE_PointerToxsd__base64Binary (151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__base64Binary(struct soap*, const char *, int, xsd__base64Binary *const*, const char *);
SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_in_PointerToxsd__base64Binary(struct soap*, const char*, xsd__base64Binary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__base64Binary
#define soap_write_PointerToxsd__base64Binary(soap, data) ( soap_begin(soap), soap_serialize_PointerToxsd__base64Binary(soap, data), soap_begin_send(soap) || soap_put_PointerToxsd__base64Binary(soap, data, "xsd:base64Binary", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_get_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary **, const char*, const char*);

#ifndef soap_read_PointerToxsd__base64Binary
#define soap_read_PointerToxsd__base64Binary(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__base64Binary(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ValueTreeRow
#define SOAP_TYPE_PointerTons2__ValueTreeRow (149)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ValueTreeRow(struct soap*, ns2__ValueTreeRow *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ValueTreeRow(struct soap*, const char *, int, ns2__ValueTreeRow *const*, const char *);
SOAP_FMAC3 ns2__ValueTreeRow ** SOAP_FMAC4 soap_in_PointerTons2__ValueTreeRow(struct soap*, const char*, ns2__ValueTreeRow **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ValueTreeRow(struct soap*, ns2__ValueTreeRow *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ValueTreeRow
#define soap_write_PointerTons2__ValueTreeRow(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__ValueTreeRow(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__ValueTreeRow(soap, data, "ns2:ValueTreeRow", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTreeRow ** SOAP_FMAC4 soap_get_PointerTons2__ValueTreeRow(struct soap*, ns2__ValueTreeRow **, const char*, const char*);

#ifndef soap_read_PointerTons2__ValueTreeRow
#define soap_read_PointerTons2__ValueTreeRow(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ValueTreeRow(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ValueTreeColumn
#define SOAP_TYPE_PointerTons2__ValueTreeColumn (147)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ValueTreeColumn(struct soap*, ns2__ValueTreeColumn *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ValueTreeColumn(struct soap*, const char *, int, ns2__ValueTreeColumn *const*, const char *);
SOAP_FMAC3 ns2__ValueTreeColumn ** SOAP_FMAC4 soap_in_PointerTons2__ValueTreeColumn(struct soap*, const char*, ns2__ValueTreeColumn **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ValueTreeColumn(struct soap*, ns2__ValueTreeColumn *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ValueTreeColumn
#define soap_write_PointerTons2__ValueTreeColumn(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__ValueTreeColumn(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__ValueTreeColumn(soap, data, "ns2:ValueTreeColumn", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTreeColumn ** SOAP_FMAC4 soap_get_PointerTons2__ValueTreeColumn(struct soap*, ns2__ValueTreeColumn **, const char*, const char*);

#ifndef soap_read_PointerTons2__ValueTreeColumn
#define soap_read_PointerTons2__ValueTreeColumn(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ValueTreeColumn(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__nonNegativeInteger
#define SOAP_TYPE_PointerToxsd__nonNegativeInteger (145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__nonNegativeInteger(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__nonNegativeInteger(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__nonNegativeInteger(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__nonNegativeInteger(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__nonNegativeInteger
#define soap_write_PointerToxsd__nonNegativeInteger(soap, data) ( soap_begin(soap), soap_serialize_PointerToxsd__nonNegativeInteger(soap, data), soap_begin_send(soap) || soap_put_PointerToxsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__nonNegativeInteger(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__nonNegativeInteger
#define soap_read_PointerToxsd__nonNegativeInteger(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__nonNegativeInteger(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__NMTOKEN
#define SOAP_TYPE_PointerToxsd__NMTOKEN (144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__NMTOKEN(struct soap*, std::wstring *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__NMTOKEN(struct soap*, const char *, int, std::wstring *const*, const char *);
SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_in_PointerToxsd__NMTOKEN(struct soap*, const char*, std::wstring **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__NMTOKEN(struct soap*, std::wstring *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__NMTOKEN
#define soap_write_PointerToxsd__NMTOKEN(soap, data) ( soap_begin(soap), soap_serialize_PointerToxsd__NMTOKEN(soap, data), soap_begin_send(soap) || soap_put_PointerToxsd__NMTOKEN(soap, data, "xsd:NMTOKEN", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_get_PointerToxsd__NMTOKEN(struct soap*, std::wstring **, const char*, const char*);

#ifndef soap_read_PointerToxsd__NMTOKEN
#define soap_read_PointerToxsd__NMTOKEN(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__NMTOKEN(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ValueTableRow
#define SOAP_TYPE_PointerTons2__ValueTableRow (142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ValueTableRow(struct soap*, ns2__ValueTableRow *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ValueTableRow(struct soap*, const char *, int, ns2__ValueTableRow *const*, const char *);
SOAP_FMAC3 ns2__ValueTableRow ** SOAP_FMAC4 soap_in_PointerTons2__ValueTableRow(struct soap*, const char*, ns2__ValueTableRow **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ValueTableRow(struct soap*, ns2__ValueTableRow *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ValueTableRow
#define soap_write_PointerTons2__ValueTableRow(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__ValueTableRow(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__ValueTableRow(soap, data, "ns2:ValueTableRow", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTableRow ** SOAP_FMAC4 soap_get_PointerTons2__ValueTableRow(struct soap*, ns2__ValueTableRow **, const char*, const char*);

#ifndef soap_read_PointerTons2__ValueTableRow
#define soap_read_PointerTons2__ValueTableRow(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ValueTableRow(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ValueTableIndex
#define SOAP_TYPE_PointerTons2__ValueTableIndex (140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ValueTableIndex(struct soap*, ns2__ValueTableIndex *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ValueTableIndex(struct soap*, const char *, int, ns2__ValueTableIndex *const*, const char *);
SOAP_FMAC3 ns2__ValueTableIndex ** SOAP_FMAC4 soap_in_PointerTons2__ValueTableIndex(struct soap*, const char*, ns2__ValueTableIndex **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ValueTableIndex(struct soap*, ns2__ValueTableIndex *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ValueTableIndex
#define soap_write_PointerTons2__ValueTableIndex(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__ValueTableIndex(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__ValueTableIndex(soap, data, "ns2:ValueTableIndex", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTableIndex ** SOAP_FMAC4 soap_get_PointerTons2__ValueTableIndex(struct soap*, ns2__ValueTableIndex **, const char*, const char*);

#ifndef soap_read_PointerTons2__ValueTableIndex
#define soap_read_PointerTons2__ValueTableIndex(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ValueTableIndex(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ValueTableColumn
#define SOAP_TYPE_PointerTons2__ValueTableColumn (138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ValueTableColumn(struct soap*, ns2__ValueTableColumn *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ValueTableColumn(struct soap*, const char *, int, ns2__ValueTableColumn *const*, const char *);
SOAP_FMAC3 ns2__ValueTableColumn ** SOAP_FMAC4 soap_in_PointerTons2__ValueTableColumn(struct soap*, const char*, ns2__ValueTableColumn **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ValueTableColumn(struct soap*, ns2__ValueTableColumn *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ValueTableColumn
#define soap_write_PointerTons2__ValueTableColumn(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__ValueTableColumn(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__ValueTableColumn(soap, data, "ns2:ValueTableColumn", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTableColumn ** SOAP_FMAC4 soap_get_PointerTons2__ValueTableColumn(struct soap*, ns2__ValueTableColumn **, const char*, const char*);

#ifndef soap_read_PointerTons2__ValueTableColumn
#define soap_read_PointerTons2__ValueTableColumn(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ValueTableColumn(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ValueListItemType
#define SOAP_TYPE_PointerTons2__ValueListItemType (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ValueListItemType(struct soap*, ns2__ValueListItemType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ValueListItemType(struct soap*, const char *, int, ns2__ValueListItemType *const*, const char *);
SOAP_FMAC3 ns2__ValueListItemType ** SOAP_FMAC4 soap_in_PointerTons2__ValueListItemType(struct soap*, const char*, ns2__ValueListItemType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ValueListItemType(struct soap*, ns2__ValueListItemType *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ValueListItemType
#define soap_write_PointerTons2__ValueListItemType(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__ValueListItemType(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__ValueListItemType(soap, data, "ns2:ValueListItemType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueListItemType ** SOAP_FMAC4 soap_get_PointerTons2__ValueListItemType(struct soap*, ns2__ValueListItemType **, const char*, const char*);

#ifndef soap_read_PointerTons2__ValueListItemType
#define soap_read_PointerTons2__ValueListItemType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ValueListItemType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__TypeDescription
#define SOAP_TYPE_PointerTons2__TypeDescription (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__TypeDescription(struct soap*, ns2__TypeDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__TypeDescription(struct soap*, const char *, int, ns2__TypeDescription *const*, const char *);
SOAP_FMAC3 ns2__TypeDescription ** SOAP_FMAC4 soap_in_PointerTons2__TypeDescription(struct soap*, const char*, ns2__TypeDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__TypeDescription(struct soap*, ns2__TypeDescription *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__TypeDescription
#define soap_write_PointerTons2__TypeDescription(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__TypeDescription(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__TypeDescription(soap, data, "ns2:TypeDescription", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__TypeDescription ** SOAP_FMAC4 soap_get_PointerTons2__TypeDescription(struct soap*, ns2__TypeDescription **, const char*, const char*);

#ifndef soap_read_PointerTons2__TypeDescription
#define soap_read_PointerTons2__TypeDescription(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__TypeDescription(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToLONG64
#define SOAP_TYPE_PointerToLONG64 (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToLONG64(struct soap*, LONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToLONG64(struct soap*, const char *, int, LONG64 *const*, const char *);
SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_in_PointerToLONG64(struct soap*, const char*, LONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToLONG64(struct soap*, LONG64 *const*, const char*, const char*);

#ifndef soap_write_PointerToLONG64
#define soap_write_PointerToLONG64(soap, data) ( soap_begin(soap), soap_serialize_PointerToLONG64(soap, data), soap_begin_send(soap) || soap_put_PointerToLONG64(soap, data, "long", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_get_PointerToLONG64(struct soap*, LONG64 **, const char*, const char*);

#ifndef soap_read_PointerToLONG64
#define soap_read_PointerToLONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToLONG64(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__decimal
#define SOAP_TYPE_PointerToxsd__decimal (132)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__decimal(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__decimal(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__decimal(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__decimal(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__decimal
#define soap_write_PointerToxsd__decimal(soap, data) ( soap_begin(soap), soap_serialize_PointerToxsd__decimal(soap, data), soap_begin_send(soap) || soap_put_PointerToxsd__decimal(soap, data, "xsd:decimal", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__decimal(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__decimal
#define soap_read_PointerToxsd__decimal(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxsd__decimal(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__BinaryDataQualifiers
#define SOAP_TYPE_PointerTons2__BinaryDataQualifiers (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__BinaryDataQualifiers(struct soap*, ns2__BinaryDataQualifiers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__BinaryDataQualifiers(struct soap*, const char *, int, ns2__BinaryDataQualifiers *const*, const char *);
SOAP_FMAC3 ns2__BinaryDataQualifiers ** SOAP_FMAC4 soap_in_PointerTons2__BinaryDataQualifiers(struct soap*, const char*, ns2__BinaryDataQualifiers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__BinaryDataQualifiers(struct soap*, ns2__BinaryDataQualifiers *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__BinaryDataQualifiers
#define soap_write_PointerTons2__BinaryDataQualifiers(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__BinaryDataQualifiers(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__BinaryDataQualifiers(soap, data, "ns2:BinaryDataQualifiers", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__BinaryDataQualifiers ** SOAP_FMAC4 soap_get_PointerTons2__BinaryDataQualifiers(struct soap*, ns2__BinaryDataQualifiers **, const char*, const char*);

#ifndef soap_read_PointerTons2__BinaryDataQualifiers
#define soap_read_PointerTons2__BinaryDataQualifiers(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__BinaryDataQualifiers(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__DateQualifiers
#define SOAP_TYPE_PointerTons2__DateQualifiers (130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__DateQualifiers(struct soap*, ns2__DateQualifiers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__DateQualifiers(struct soap*, const char *, int, ns2__DateQualifiers *const*, const char *);
SOAP_FMAC3 ns2__DateQualifiers ** SOAP_FMAC4 soap_in_PointerTons2__DateQualifiers(struct soap*, const char*, ns2__DateQualifiers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__DateQualifiers(struct soap*, ns2__DateQualifiers *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__DateQualifiers
#define soap_write_PointerTons2__DateQualifiers(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__DateQualifiers(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__DateQualifiers(soap, data, "ns2:DateQualifiers", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__DateQualifiers ** SOAP_FMAC4 soap_get_PointerTons2__DateQualifiers(struct soap*, ns2__DateQualifiers **, const char*, const char*);

#ifndef soap_read_PointerTons2__DateQualifiers
#define soap_read_PointerTons2__DateQualifiers(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__DateQualifiers(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__StringQualifiers
#define SOAP_TYPE_PointerTons2__StringQualifiers (129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__StringQualifiers(struct soap*, ns2__StringQualifiers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__StringQualifiers(struct soap*, const char *, int, ns2__StringQualifiers *const*, const char *);
SOAP_FMAC3 ns2__StringQualifiers ** SOAP_FMAC4 soap_in_PointerTons2__StringQualifiers(struct soap*, const char*, ns2__StringQualifiers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__StringQualifiers(struct soap*, ns2__StringQualifiers *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__StringQualifiers
#define soap_write_PointerTons2__StringQualifiers(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__StringQualifiers(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__StringQualifiers(soap, data, "ns2:StringQualifiers", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__StringQualifiers ** SOAP_FMAC4 soap_get_PointerTons2__StringQualifiers(struct soap*, ns2__StringQualifiers **, const char*, const char*);

#ifndef soap_read_PointerTons2__StringQualifiers
#define soap_read_PointerTons2__StringQualifiers(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__StringQualifiers(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__NumberQualifiers
#define SOAP_TYPE_PointerTons2__NumberQualifiers (128)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__NumberQualifiers(struct soap*, ns2__NumberQualifiers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__NumberQualifiers(struct soap*, const char *, int, ns2__NumberQualifiers *const*, const char *);
SOAP_FMAC3 ns2__NumberQualifiers ** SOAP_FMAC4 soap_in_PointerTons2__NumberQualifiers(struct soap*, const char*, ns2__NumberQualifiers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__NumberQualifiers(struct soap*, ns2__NumberQualifiers *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__NumberQualifiers
#define soap_write_PointerTons2__NumberQualifiers(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__NumberQualifiers(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__NumberQualifiers(soap, data, "ns2:NumberQualifiers", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__NumberQualifiers ** SOAP_FMAC4 soap_get_PointerTons2__NumberQualifiers(struct soap*, ns2__NumberQualifiers **, const char*, const char*);

#ifndef soap_read_PointerTons2__NumberQualifiers
#define soap_read_PointerTons2__NumberQualifiers(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__NumberQualifiers(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_ns2__Structure_Property
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_ns2__Structure_Property (125)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_ns2__Structure_Property(struct soap*, std::vector<_ns2__Structure_Property >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_ns2__Structure_Property(struct soap*, const char *, int, std::vector<_ns2__Structure_Property >*const*, const char *);
SOAP_FMAC3 std::vector<_ns2__Structure_Property >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_ns2__Structure_Property(struct soap*, const char*, std::vector<_ns2__Structure_Property >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_ns2__Structure_Property(struct soap*, std::vector<_ns2__Structure_Property >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_ns2__Structure_Property
#define soap_write_PointerTostd__vectorTemplateOf_ns2__Structure_Property(soap, data) ( soap_begin(soap), soap_serialize_PointerTostd__vectorTemplateOf_ns2__Structure_Property(soap, data), soap_begin_send(soap) || soap_put_PointerTostd__vectorTemplateOf_ns2__Structure_Property(soap, data, "", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::vector<_ns2__Structure_Property >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_ns2__Structure_Property(struct soap*, std::vector<_ns2__Structure_Property >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_ns2__Structure_Property
#define soap_read_PointerTostd__vectorTemplateOf_ns2__Structure_Property(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_ns2__Structure_Property(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__LocalStringItemType
#define SOAP_TYPE_PointerTons2__LocalStringItemType (121)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__LocalStringItemType(struct soap*, ns2__LocalStringItemType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__LocalStringItemType(struct soap*, const char *, int, ns2__LocalStringItemType *const*, const char *);
SOAP_FMAC3 ns2__LocalStringItemType ** SOAP_FMAC4 soap_in_PointerTons2__LocalStringItemType(struct soap*, const char*, ns2__LocalStringItemType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__LocalStringItemType(struct soap*, ns2__LocalStringItemType *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__LocalStringItemType
#define soap_write_PointerTons2__LocalStringItemType(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__LocalStringItemType(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__LocalStringItemType(soap, data, "ns2:LocalStringItemType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__LocalStringItemType ** SOAP_FMAC4 soap_get_PointerTons2__LocalStringItemType(struct soap*, ns2__LocalStringItemType **, const char*, const char*);

#ifndef soap_read_PointerTons2__LocalStringItemType
#define soap_read_PointerTons2__LocalStringItemType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__LocalStringItemType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__GenericException
#define SOAP_TYPE_PointerTons2__GenericException (120)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__GenericException(struct soap*, ns2__GenericException *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__GenericException(struct soap*, const char *, int, ns2__GenericException *const*, const char *);
SOAP_FMAC3 ns2__GenericException ** SOAP_FMAC4 soap_in_PointerTons2__GenericException(struct soap*, const char*, ns2__GenericException **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__GenericException(struct soap*, ns2__GenericException *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__GenericException
#define soap_write_PointerTons2__GenericException(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__GenericException(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__GenericException(soap, data, "ns2:GenericException", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__GenericException ** SOAP_FMAC4 soap_get_PointerTons2__GenericException(struct soap*, ns2__GenericException **, const char*, const char*);

#ifndef soap_read_PointerTons2__GenericException
#define soap_read_PointerTons2__GenericException(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__GenericException(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, std::vector<_ns2__FixedStructure_Property >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, const char *, int, std::vector<_ns2__FixedStructure_Property >*const*, const char *);
SOAP_FMAC3 std::vector<_ns2__FixedStructure_Property >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, const char*, std::vector<_ns2__FixedStructure_Property >**, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, std::vector<_ns2__FixedStructure_Property >*const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property
#define soap_write_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property(soap, data) ( soap_begin(soap), soap_serialize_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property(soap, data), soap_begin_send(soap) || soap_put_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property(soap, data, "", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::vector<_ns2__FixedStructure_Property >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, std::vector<_ns2__FixedStructure_Property >**, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property
#define soap_read_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_ns2__FixedStructure_Property(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__KeyAndValue
#define SOAP_TYPE_PointerTons2__KeyAndValue (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__KeyAndValue(struct soap*, ns2__KeyAndValue *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__KeyAndValue(struct soap*, const char *, int, ns2__KeyAndValue *const*, const char *);
SOAP_FMAC3 ns2__KeyAndValue ** SOAP_FMAC4 soap_in_PointerTons2__KeyAndValue(struct soap*, const char*, ns2__KeyAndValue **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__KeyAndValue(struct soap*, ns2__KeyAndValue *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__KeyAndValue
#define soap_write_PointerTons2__KeyAndValue(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__KeyAndValue(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__KeyAndValue(soap, data, "ns2:KeyAndValue", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__KeyAndValue ** SOAP_FMAC4 soap_get_PointerTons2__KeyAndValue(struct soap*, ns2__KeyAndValue **, const char*, const char*);

#ifndef soap_read_PointerTons2__KeyAndValue
#define soap_read_PointerTons2__KeyAndValue(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__KeyAndValue(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__DataFillError
#define SOAP_TYPE_PointerTons2__DataFillError (112)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__DataFillError(struct soap*, ns2__DataFillError *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__DataFillError(struct soap*, const char *, int, ns2__DataFillError *const*, const char *);
SOAP_FMAC3 ns2__DataFillError ** SOAP_FMAC4 soap_in_PointerTons2__DataFillError(struct soap*, const char*, ns2__DataFillError **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__DataFillError(struct soap*, ns2__DataFillError *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__DataFillError
#define soap_write_PointerTons2__DataFillError(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__DataFillError(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__DataFillError(soap, data, "ns2:DataFillError", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__DataFillError ** SOAP_FMAC4 soap_get_PointerTons2__DataFillError(struct soap*, ns2__DataFillError **, const char*, const char*);

#ifndef soap_read_PointerTons2__DataFillError
#define soap_read_PointerTons2__DataFillError(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__DataFillError(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_wstring
#define SOAP_TYPE_wstring (110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstring(struct soap*, wchar_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstring(struct soap*, const char*, int, wchar_t*const*, const char*);
SOAP_FMAC3 wchar_t * * SOAP_FMAC4 soap_in_wstring(struct soap*, const char*, wchar_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstring(struct soap*, wchar_t *const*, const char*, const char*);

#ifndef soap_write_wstring
#define soap_write_wstring(soap, data) ( soap_begin(soap), soap_serialize_wstring(soap, data), soap_begin_send(soap) || soap_put_wstring(soap, data, "wchar", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 wchar_t ** SOAP_FMAC4 soap_get_wstring(struct soap*, wchar_t **, const char*, const char*);

#ifndef soap_read_wstring
#define soap_read_wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_wstring(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__wstring
#define SOAP_TYPE_PointerTostd__wstring (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__wstring(struct soap*, std::wstring *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__wstring(struct soap*, const char *, int, std::wstring *const*, const char *);
SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_in_PointerTostd__wstring(struct soap*, const char*, std::wstring **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__wstring(struct soap*, std::wstring *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__wstring
#define soap_write_PointerTostd__wstring(soap, data) ( soap_begin(soap), soap_serialize_PointerTostd__wstring(soap, data), soap_begin_send(soap) || soap_put_PointerTostd__wstring(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::wstring ** SOAP_FMAC4 soap_get_PointerTostd__wstring(struct soap*, std::wstring **, const char*, const char*);

#ifndef soap_read_PointerTostd__wstring
#define soap_read_PointerTostd__wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__wstring(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTobool
#define SOAP_TYPE_PointerTobool (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTobool(struct soap*, bool *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTobool(struct soap*, const char *, int, bool *const*, const char *);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_in_PointerTobool(struct soap*, const char*, bool **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTobool(struct soap*, bool *const*, const char*, const char*);

#ifndef soap_write_PointerTobool
#define soap_write_PointerTobool(soap, data) ( soap_begin(soap), soap_serialize_PointerTobool(soap, data), soap_begin_send(soap) || soap_put_PointerTobool(soap, data, "boolean", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 bool ** SOAP_FMAC4 soap_get_PointerTobool(struct soap*, bool **, const char*, const char*);

#ifndef soap_read_PointerTobool
#define soap_read_PointerTobool(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTobool(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ValueTree
#define SOAP_TYPE_PointerTons2__ValueTree (106)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ValueTree(struct soap*, ns2__ValueTree *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ValueTree(struct soap*, const char *, int, ns2__ValueTree *const*, const char *);
SOAP_FMAC3 ns2__ValueTree ** SOAP_FMAC4 soap_in_PointerTons2__ValueTree(struct soap*, const char*, ns2__ValueTree **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ValueTree(struct soap*, ns2__ValueTree *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ValueTree
#define soap_write_PointerTons2__ValueTree(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__ValueTree(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__ValueTree(soap, data, "ns2:ValueTree", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTree ** SOAP_FMAC4 soap_get_PointerTons2__ValueTree(struct soap*, ns2__ValueTree **, const char*, const char*);

#ifndef soap_read_PointerTons2__ValueTree
#define soap_read_PointerTons2__ValueTree(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ValueTree(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ValueListType
#define SOAP_TYPE_PointerTons2__ValueListType (105)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ValueListType(struct soap*, ns2__ValueListType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ValueListType(struct soap*, const char *, int, ns2__ValueListType *const*, const char *);
SOAP_FMAC3 ns2__ValueListType ** SOAP_FMAC4 soap_in_PointerTons2__ValueListType(struct soap*, const char*, ns2__ValueListType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ValueListType(struct soap*, ns2__ValueListType *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ValueListType
#define soap_write_PointerTons2__ValueListType(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__ValueListType(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__ValueListType(soap, data, "ns2:ValueListType", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueListType ** SOAP_FMAC4 soap_get_PointerTons2__ValueListType(struct soap*, ns2__ValueListType **, const char*, const char*);

#ifndef soap_read_PointerTons2__ValueListType
#define soap_read_PointerTons2__ValueListType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ValueListType(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_begin(soap), soap_serialize_PointerTostd__string(soap, data), soap_begin_send(soap) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__ValueTable
#define SOAP_TYPE_PointerTons2__ValueTable (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__ValueTable(struct soap*, ns2__ValueTable *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__ValueTable(struct soap*, const char *, int, ns2__ValueTable *const*, const char *);
SOAP_FMAC3 ns2__ValueTable ** SOAP_FMAC4 soap_in_PointerTons2__ValueTable(struct soap*, const char*, ns2__ValueTable **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__ValueTable(struct soap*, ns2__ValueTable *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__ValueTable
#define soap_write_PointerTons2__ValueTable(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__ValueTable(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__ValueTable(soap, data, "ns2:ValueTable", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__ValueTable ** SOAP_FMAC4 soap_get_PointerTons2__ValueTable(struct soap*, ns2__ValueTable **, const char*, const char*);

#ifndef soap_read_PointerTons2__ValueTable
#define soap_read_PointerTons2__ValueTable(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__ValueTable(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__Structure
#define SOAP_TYPE_PointerTons2__Structure (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__Structure(struct soap*, ns2__Structure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__Structure(struct soap*, const char *, int, ns2__Structure *const*, const char *);
SOAP_FMAC3 ns2__Structure ** SOAP_FMAC4 soap_in_PointerTons2__Structure(struct soap*, const char*, ns2__Structure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__Structure(struct soap*, ns2__Structure *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__Structure
#define soap_write_PointerTons2__Structure(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__Structure(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__Structure(soap, data, "ns2:Structure", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__Structure ** SOAP_FMAC4 soap_get_PointerTons2__Structure(struct soap*, ns2__Structure **, const char*, const char*);

#ifndef soap_read_PointerTons2__Structure
#define soap_read_PointerTons2__Structure(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__Structure(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTotime
#define SOAP_TYPE_PointerTotime (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotime(struct soap*, time_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotime(struct soap*, const char *, int, time_t *const*, const char *);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_in_PointerTotime(struct soap*, const char*, time_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotime(struct soap*, time_t *const*, const char*, const char*);

#ifndef soap_write_PointerTotime
#define soap_write_PointerTotime(soap, data) ( soap_begin(soap), soap_serialize_PointerTotime(soap, data), soap_begin_send(soap) || soap_put_PointerTotime(soap, data, "dateTime", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_get_PointerTotime(struct soap*, time_t **, const char*, const char*);

#ifndef soap_read_PointerTotime
#define soap_read_PointerTotime(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTotime(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__Object
#define SOAP_TYPE_PointerTons1__Object (97)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__Object(struct soap*, ns1__Object *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__Object(struct soap*, const char *, int, ns1__Object *const*, const char *);
SOAP_FMAC3 ns1__Object ** SOAP_FMAC4 soap_in_PointerTons1__Object(struct soap*, const char*, ns1__Object **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__Object(struct soap*, ns1__Object *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__Object
#define soap_write_PointerTons1__Object(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__Object(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__Object(soap, data, "ns1:Object", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__Object ** SOAP_FMAC4 soap_get_PointerTons1__Object(struct soap*, ns1__Object **, const char*, const char*);

#ifndef soap_read_PointerTons1__Object
#define soap_read_PointerTons1__Object(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__Object(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_begin(soap), soap_serialize_PointerTounsignedByte(soap, data), soap_begin_send(soap) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin(soap), soap_serialize__QName(soap, data), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin(soap), soap_serialize_string(soap, data), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueTreeRow
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueTreeRow (150)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__ValueTreeRow(struct soap*, std::vector<ns2__ValueTreeRow * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__ValueTreeRow(struct soap*, const std::vector<ns2__ValueTreeRow * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__ValueTreeRow(struct soap*, const char*, int, const std::vector<ns2__ValueTreeRow * >*, const char*);
SOAP_FMAC3 std::vector<ns2__ValueTreeRow * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__ValueTreeRow(struct soap*, const char*, std::vector<ns2__ValueTreeRow * >*, const char*);
SOAP_FMAC1 std::vector<ns2__ValueTreeRow * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__ValueTreeRow(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__ValueTreeRow * > * soap_new_std__vectorTemplateOfPointerTons2__ValueTreeRow(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__ValueTreeRow(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__ValueTreeRow(struct soap *soap, std::vector<ns2__ValueTreeRow * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__ValueTreeRow(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueTreeColumn
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueTreeColumn (148)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__ValueTreeColumn(struct soap*, std::vector<ns2__ValueTreeColumn * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__ValueTreeColumn(struct soap*, const std::vector<ns2__ValueTreeColumn * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__ValueTreeColumn(struct soap*, const char*, int, const std::vector<ns2__ValueTreeColumn * >*, const char*);
SOAP_FMAC3 std::vector<ns2__ValueTreeColumn * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__ValueTreeColumn(struct soap*, const char*, std::vector<ns2__ValueTreeColumn * >*, const char*);
SOAP_FMAC1 std::vector<ns2__ValueTreeColumn * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__ValueTreeColumn(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__ValueTreeColumn * > * soap_new_std__vectorTemplateOfPointerTons2__ValueTreeColumn(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__ValueTreeColumn(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__ValueTreeColumn(struct soap *soap, std::vector<ns2__ValueTreeColumn * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__ValueTreeColumn(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__NMTOKEN
#define SOAP_TYPE_std__vectorTemplateOfxsd__NMTOKEN (146)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__NMTOKEN(struct soap*, std::vector<std::wstring >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__NMTOKEN(struct soap*, const std::vector<std::wstring >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__NMTOKEN(struct soap*, const char*, int, const std::vector<std::wstring >*, const char*);
SOAP_FMAC3 std::vector<std::wstring >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__NMTOKEN(struct soap*, const char*, std::vector<std::wstring >*, const char*);
SOAP_FMAC1 std::vector<std::wstring > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__NMTOKEN(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::wstring > * soap_new_std__vectorTemplateOfxsd__NMTOKEN(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfxsd__NMTOKEN(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfxsd__NMTOKEN(struct soap *soap, std::vector<std::wstring >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxsd__NMTOKEN(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueTableRow
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueTableRow (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__ValueTableRow(struct soap*, std::vector<ns2__ValueTableRow * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__ValueTableRow(struct soap*, const std::vector<ns2__ValueTableRow * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__ValueTableRow(struct soap*, const char*, int, const std::vector<ns2__ValueTableRow * >*, const char*);
SOAP_FMAC3 std::vector<ns2__ValueTableRow * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__ValueTableRow(struct soap*, const char*, std::vector<ns2__ValueTableRow * >*, const char*);
SOAP_FMAC1 std::vector<ns2__ValueTableRow * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__ValueTableRow(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__ValueTableRow * > * soap_new_std__vectorTemplateOfPointerTons2__ValueTableRow(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__ValueTableRow(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__ValueTableRow(struct soap *soap, std::vector<ns2__ValueTableRow * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__ValueTableRow(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueTableIndex
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueTableIndex (141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__ValueTableIndex(struct soap*, std::vector<ns2__ValueTableIndex * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__ValueTableIndex(struct soap*, const std::vector<ns2__ValueTableIndex * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__ValueTableIndex(struct soap*, const char*, int, const std::vector<ns2__ValueTableIndex * >*, const char*);
SOAP_FMAC3 std::vector<ns2__ValueTableIndex * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__ValueTableIndex(struct soap*, const char*, std::vector<ns2__ValueTableIndex * >*, const char*);
SOAP_FMAC1 std::vector<ns2__ValueTableIndex * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__ValueTableIndex(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__ValueTableIndex * > * soap_new_std__vectorTemplateOfPointerTons2__ValueTableIndex(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__ValueTableIndex(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__ValueTableIndex(struct soap *soap, std::vector<ns2__ValueTableIndex * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__ValueTableIndex(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueTableColumn
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueTableColumn (139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__ValueTableColumn(struct soap*, std::vector<ns2__ValueTableColumn * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__ValueTableColumn(struct soap*, const std::vector<ns2__ValueTableColumn * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__ValueTableColumn(struct soap*, const char*, int, const std::vector<ns2__ValueTableColumn * >*, const char*);
SOAP_FMAC3 std::vector<ns2__ValueTableColumn * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__ValueTableColumn(struct soap*, const char*, std::vector<ns2__ValueTableColumn * >*, const char*);
SOAP_FMAC1 std::vector<ns2__ValueTableColumn * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__ValueTableColumn(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__ValueTableColumn * > * soap_new_std__vectorTemplateOfPointerTons2__ValueTableColumn(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__ValueTableColumn(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__ValueTableColumn(struct soap *soap, std::vector<ns2__ValueTableColumn * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__ValueTableColumn(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueListItemType
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__ValueListItemType (137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__ValueListItemType(struct soap*, std::vector<ns2__ValueListItemType * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__ValueListItemType(struct soap*, const std::vector<ns2__ValueListItemType * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__ValueListItemType(struct soap*, const char*, int, const std::vector<ns2__ValueListItemType * >*, const char*);
SOAP_FMAC3 std::vector<ns2__ValueListItemType * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__ValueListItemType(struct soap*, const char*, std::vector<ns2__ValueListItemType * >*, const char*);
SOAP_FMAC1 std::vector<ns2__ValueListItemType * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__ValueListItemType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__ValueListItemType * > * soap_new_std__vectorTemplateOfPointerTons2__ValueListItemType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__ValueListItemType(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__ValueListItemType(struct soap *soap, std::vector<ns2__ValueListItemType * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__ValueListItemType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfns2__UUID
#define SOAP_TYPE_std__vectorTemplateOfns2__UUID (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfns2__UUID(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfns2__UUID(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfns2__UUID(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfns2__UUID(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfns2__UUID(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOfns2__UUID(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfns2__UUID(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfns2__UUID(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfns2__UUID(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__QName
#define SOAP_TYPE_std__vectorTemplateOfxsd__QName (126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__QName(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__QName(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__QName(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__QName(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__QName(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOfxsd__QName(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfxsd__QName(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfxsd__QName(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxsd__QName(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_ns2__Structure_Property
#define SOAP_TYPE_std__vectorTemplateOf_ns2__Structure_Property (124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_ns2__Structure_Property(struct soap*, std::vector<_ns2__Structure_Property >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_ns2__Structure_Property(struct soap*, const std::vector<_ns2__Structure_Property >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_ns2__Structure_Property(struct soap*, const char*, int, const std::vector<_ns2__Structure_Property >*, const char*);
SOAP_FMAC3 std::vector<_ns2__Structure_Property >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_ns2__Structure_Property(struct soap*, const char*, std::vector<_ns2__Structure_Property >*, const char*);
SOAP_FMAC1 std::vector<_ns2__Structure_Property > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_ns2__Structure_Property(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_ns2__Structure_Property > * soap_new_std__vectorTemplateOf_ns2__Structure_Property(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_ns2__Structure_Property(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_ns2__Structure_Property(struct soap *soap, std::vector<_ns2__Structure_Property >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_ns2__Structure_Property(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__LocalStringItemType
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__LocalStringItemType (122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__LocalStringItemType(struct soap*, std::vector<ns2__LocalStringItemType * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__LocalStringItemType(struct soap*, const std::vector<ns2__LocalStringItemType * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__LocalStringItemType(struct soap*, const char*, int, const std::vector<ns2__LocalStringItemType * >*, const char*);
SOAP_FMAC3 std::vector<ns2__LocalStringItemType * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__LocalStringItemType(struct soap*, const char*, std::vector<ns2__LocalStringItemType * >*, const char*);
SOAP_FMAC1 std::vector<ns2__LocalStringItemType * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__LocalStringItemType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__LocalStringItemType * > * soap_new_std__vectorTemplateOfPointerTons2__LocalStringItemType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__LocalStringItemType(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__LocalStringItemType(struct soap *soap, std::vector<ns2__LocalStringItemType * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__LocalStringItemType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_ns2__FixedStructure_Property
#define SOAP_TYPE_std__vectorTemplateOf_ns2__FixedStructure_Property (118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, std::vector<_ns2__FixedStructure_Property >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, const std::vector<_ns2__FixedStructure_Property >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, const char*, int, const std::vector<_ns2__FixedStructure_Property >*, const char*);
SOAP_FMAC3 std::vector<_ns2__FixedStructure_Property >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, const char*, std::vector<_ns2__FixedStructure_Property >*, const char*);
SOAP_FMAC1 std::vector<_ns2__FixedStructure_Property > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_ns2__FixedStructure_Property > * soap_new_std__vectorTemplateOf_ns2__FixedStructure_Property(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_ns2__FixedStructure_Property(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_ns2__FixedStructure_Property(struct soap *soap, std::vector<_ns2__FixedStructure_Property >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_ns2__FixedStructure_Property(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__KeyAndValue
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__KeyAndValue (116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__KeyAndValue(struct soap*, std::vector<ns2__KeyAndValue * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__KeyAndValue(struct soap*, const std::vector<ns2__KeyAndValue * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__KeyAndValue(struct soap*, const char*, int, const std::vector<ns2__KeyAndValue * >*, const char*);
SOAP_FMAC3 std::vector<ns2__KeyAndValue * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__KeyAndValue(struct soap*, const char*, std::vector<ns2__KeyAndValue * >*, const char*);
SOAP_FMAC1 std::vector<ns2__KeyAndValue * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__KeyAndValue(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__KeyAndValue * > * soap_new_std__vectorTemplateOfPointerTons2__KeyAndValue(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__KeyAndValue(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__KeyAndValue(struct soap *soap, std::vector<ns2__KeyAndValue * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__KeyAndValue(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_XML
#define SOAP_TYPE_std__vectorTemplateOf_XML (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_XML(struct soap*, std::vector<char * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_XML(struct soap*, const std::vector<char * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_XML(struct soap*, const char*, int, const std::vector<char * >*, const char*);
SOAP_FMAC3 std::vector<char * >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_XML(struct soap*, const char*, std::vector<char * >*, const char*);
SOAP_FMAC1 std::vector<char * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_XML(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<char * > * soap_new_std__vectorTemplateOf_XML(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_XML(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOf_XML(struct soap *soap, std::vector<char * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_XML(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__DataFillError
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__DataFillError (113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__DataFillError(struct soap*, std::vector<ns2__DataFillError * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__DataFillError(struct soap*, const std::vector<ns2__DataFillError * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__DataFillError(struct soap*, const char*, int, const std::vector<ns2__DataFillError * >*, const char*);
SOAP_FMAC3 std::vector<ns2__DataFillError * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__DataFillError(struct soap*, const char*, std::vector<ns2__DataFillError * >*, const char*);
SOAP_FMAC1 std::vector<ns2__DataFillError * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__DataFillError(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__DataFillError * > * soap_new_std__vectorTemplateOfPointerTons2__DataFillError(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__DataFillError(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__DataFillError(struct soap *soap, std::vector<ns2__DataFillError * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__DataFillError(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwstring
#define SOAP_TYPE_std__vectorTemplateOfwstring (111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwstring(struct soap*, std::vector<wchar_t * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwstring(struct soap*, const std::vector<wchar_t * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwstring(struct soap*, const char*, int, const std::vector<wchar_t * >*, const char*);
SOAP_FMAC3 std::vector<wchar_t * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwstring(struct soap*, const char*, std::vector<wchar_t * >*, const char*);
SOAP_FMAC1 std::vector<wchar_t * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwstring(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<wchar_t * > * soap_new_std__vectorTemplateOfwstring(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfwstring(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfwstring(struct soap *soap, std::vector<wchar_t * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwstring(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__Object
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__Object (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__Object(struct soap*, std::vector<ns1__Object * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__Object(struct soap*, const std::vector<ns1__Object * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__Object(struct soap*, const char*, int, const std::vector<ns1__Object * >*, const char*);
SOAP_FMAC3 std::vector<ns1__Object * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__Object(struct soap*, const char*, std::vector<ns1__Object * >*, const char*);
SOAP_FMAC1 std::vector<ns1__Object * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__Object(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns1__Object * > * soap_new_std__vectorTemplateOfPointerTons1__Object(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons1__Object(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons1__Object(struct soap *soap, std::vector<ns1__Object * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__Object(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
