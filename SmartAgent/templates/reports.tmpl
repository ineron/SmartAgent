<% c++ #include "data/tmpl_reports.h" %>
<% skin defskin %>
<% view Reports uses Data::Reports  %>

<% template header() %>

<div class="row">
    <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
	<h1 class="page-title txt-color-blueDark">
	    <i class="fa fa-pencil-square-o fa-fw "></i> 
		Отчет
	    <span>>
		<%= reportName %>
	    </span>
	</h1>
    </div>
    <% if (content.user_level == 2) %>
    <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
	<ul id="sparks" class="">
	    <li class="sparks-info">
		<h5> My Income <span class="txt-color-blue">$47,171</span></h5>
		<div class="sparkline txt-color-blue hidden-mobile hidden-md hidden-sm">
		    1300, 1877, 2500, 2577, 2000, 2100, 3000, 2700, 3631, 2471, 2700, 3631, 2471
		</div>
	    </li>
	    <li class="sparks-info">
		<h5> Site Traffic <span class="txt-color-purple"><i class="fa fa-arrow-circle-up" data-rel="bootstrap-tooltip" title="Increased"></i>&nbsp;45%</span></h5>
		<div class="sparkline txt-color-purple hidden-mobile hidden-md hidden-sm">
		    110,150,300,130,400,240,220,310,220,300, 270, 210
		</div>
	    </li>
	    <li class="sparks-info">
		<h5> Site Orders <span class="txt-color-greenDark"><i class="fa fa-shopping-cart"></i>&nbsp;2447</span></h5>
		<div class="sparkline txt-color-greenDark hidden-mobile hidden-md hidden-sm">
		    110,150,300,130,400,240,220,310,220,300, 270, 210
		</div>
	    </li>
	</ul>
    </div>
    <% end %>
</div>
<div class="row">
    <div class="col-xs-12 col-sm-5 col-md-5 col-lg-12">
    <!-- Widget ID (each widget will need unique ID)-->
        <div class="jarviswidget" id="wid-id-3" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                <h2>Параметры отчета </h2>
            </header>
            <!-- widget div-->
            <div>
                
                <!-- widget edit box -->
                <div class="jarviswidget-editbox">
                    <!-- This area used as dropdown edit box -->
                    
                </div>
                <!-- end widget edit box -->
                
                <!-- widget content -->
                <div class="widget-body">
                    <form class="">
                	<% if is_DateRange %>
                        <fieldset>
                            <div class="col-sm-12">
                                <label>Выбор диапозона дат отчета:</label>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <div class="input-group">
                                        <input class="form-control" id="from" type="text" placeholder="Дата начала">
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <div class="input-group">
                                        <input class="form-control" id="to" type="text" placeholder="Дата окончания">
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <% end %>
                        <% if not empty userList %>
                        <fieldset>
                            <div class="col-sm-12">
                            <div class="form-group">
                                <label>Контрагент</label>
                                <select id="contractor" style="width:100%" class="select2">
                                    <optgroup label="Основная группа">
                                	<% foreach item in userList %>
                                	<% item %>
                                        <option value='<%= item.ref %>'  ><%= item.name %></option>
                                        <% end %>
                                        <% end %>
                                    </optgroup>
                                </select>
                            </div>
                            </div>
                        </fieldset>
                        <% end %>
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-12">
                                    <button id="makereport" class="btn btn-primary" type="submit">
                                        <i class="fa fa-refresh"></i>
                                        Сформировать
                                    </button>
                                </div>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <table id="report_table" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
        <thead>
            <tr>
                <% foreach item in headerItemsList %>
                <% item %>
                <th><%= item %></th>
                <% end %>
                <% end %>
            </tr>
        </thead>
    </table>
</div>
<% end template %>


<% template report_table() %>

<% end template %>


<% template script() %>
<script type="text/javascript">

    /* DO NOT REMOVE : GLOBAL FUNCTIONS!
     *
     * pageSetUp(); WILL CALL THE FOLLOWING FUNCTIONS
     *
     * // activate tooltips
     * $("[rel=tooltip]").tooltip();
     *
     * // activate popovers
     * $("[rel=popover]").popover();
     *
     * // activate popovers with hover states
     * $("[rel=popover-hover]").popover({ trigger: "hover" });
     *
     * // activate inline charts
     * runAllCharts();
     *
     * // setup widgets
     * setup_widgets_desktop();
     *
     * // run form elements
     * runAllForms();
     *
     ********************************
     *
     * pageSetUp() is needed whenever you load a page.
     * It initializes and checks for all basic elements of the page
     * and makes rendering easier.
     *
     */

    pageSetUp();
    
    /*
     * ALL PAGE RELATED SCRIPTS CAN GO BELOW HERE
     * eg alert("my home function");
     * 
     * var pagefunction = function() {
     *   ...
     * }
     * loadScript("js/plugin/_PLUGIN_NAME_.js", pagefunction);
     * 
     */
    
    
    // PAGE RELATED SCRIPTS
    
    // pagefunction	
    var pagefunction = function() {
    
    /* // DOM Position key index //
    
        l - Length changing (dropdown)
        f - Filtering input (search)
        t - The Table! (datatable)
        i - Information (records)
        p - Pagination (paging)
        r - pRocessing 
        < and > - div elements
        <"#id" and > - div with an id
        <"class" and > - div with a class
        <"#id.class" and > - div with an id and class
        
        Also see: http://legacy.datatables.net/usage/features
    */	

        var responsiveHelper_report_table = undefined;
        var responsiveHelper_datatable_fixed_column = undefined;
        var responsiveHelper_datatable_col_reorder = undefined;
        var responsiveHelper_datatable_tabletools = undefined;
        var report_table = undefined;

        var breakpointDefinition = {
	    tablet : 1024,
	    phone : 480
        };
	var elemcount = 0;
	var config = {
	    catalog: { add: function(name, val) {this[name] = val; }},
        };

	var catalogdata = localStorage.getItem($('meta[name=useref]').attr("rel"));
	if(!catalogdata)
	{
	    localStorage.setItem($('meta[name=useref]').attr("rel"), JSON.stringify(config.catalog));
        
	}else{
	    var jsdata = JSON.parse(catalogdata);
	    $.each(jsdata,function(key,value){
		config.catalog.add(key,value);
	    });
    	    elemcount = Object.keys(config.catalog).length;
	};

	if(elemcount){
    	    if($("#shopcart").length == 3)
	    $("#shopcart :last").remove();
    	    $("#shopcart").append("<b id=\"shopcartbadge\"class=\"badge bg-color-red bounceIn animated\">"+elemcount+"</b>");
	}
    
    
	 var beginDate = new Date();
	 var endDate = new Date();
        beginDate.setMonth(beginDate.getMonth(), 1);
        // Date Range Picker
        var datepicker = $("#from").datepicker({
            defaultDate: beginDate,
            showCurrentAtPos: 1,
            changeMonth: true,
            gotoCurrent: true,
            numberOfMonths: 1,
            //beforeShowDay: function(date){ return [date.getDate() == 1,""]},
            regional:[ "ru" ],
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onClose: function (selectedDate) {
                $("#from").datepicker("option", "maxDate", selectedDate);
            }
        });
        //console.log($.datepicker._defaults);
        $("#from").datepicker("setDate" ,beginDate);

        endDate.setMonth(endDate.getMonth()+1, 0);
        $("#to").datepicker({
            defaultDate: endDate,
            changeMonth: true,
            numberOfMonths: 1,
            regional:[ "ru" ],
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onClose: function (selectedDate) {
                $("#to").datepicker("option", "minDate", selectedDate);
            }
        });

        $("#to").datepicker("setDate" ,endDate);

	/* Formatting function for row details - modify as you need */
	function format ( d ) {
    	    // `d` is the original data object for the row
    	    console.log(d);
    	    /*'<table cellpadding="5" cellspacing="0" border="0" class="table table-hover table-condensed">'+*/
    	    var tstring = '<table class="table table-striped table-bordered table-hover"> ';
    	    console.log(d.subrow.length);
    	    if(!d.subrow.length)
    		tstring = '<table><tr></tr></table>'
    	    else
    	    {
    		for(i=0;i<d.subrow.length;i++){
    		    tstring += '<tr><td  style="width:3%">'+d.subrow[i].row_id+'</td><td>'+d.subrow[i].row[5].value+'</td>'+
    		    '<td style="width:16%" class="right">'+d.subrow[i].row[6].value+'</td>'+
    		    '<td style="width:16%" class="right">'+d.subrow[i].row[7].value+'</td>'+
    		    '<td style="width:16%" class="right">'+d.subrow[i].row[8].value+'</td>'+
    		    '<td style="width:16%" class="right">'+d.subrow[i].row[9].value+'</td>'+
    		    '</tr>';
    		}
    		tstring+='</table>';
    	    }
    	    return tstring;
	};
	//console.log($("#usercode").attr("name"));
	$('#report_table').dataTable({
    	    "aLengthMenu": [[15, 25, 50, 100, 250, 500, -1], [15 ,25, 50, 100, 250, 500, "All"]],
	    "ajax" : 
    	    function (data, callback, settings) {
        	$.ajax({
    		    type:"GET",
		    data:{
			<% foreach item in ajaxParamList %>
			<% item %>
			<%= item|raw %>,
			<% end %>
			<% end %>
		    },
		    dataType:"json",
		    url:"report-data",
		    success: function(data){callback(data);}
        	});
    	    },
    	    
    	    <% foreach item in dataBindList %>
	    "columns": [
    	    <% item %>
		{<%= item|raw %> },
	    <% end %>
	    ],
	    <% end %>
    	    <% foreach item in dataRenderList %>
    	    "columnDefs":[
    	    <% item %>
		{<%= item|raw %> },
	    <% end %>
	    ],
	    <% end %>
	    
    	    "oLanguage": {
		"sInfo":  'Показанны строки с <span class="txt-color-darken"> _START_</span> по <span class="txt-color-darken"> _END_</span> из <span class="text-primary">_TOTAL_</span> '
    	    },
	    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>"+
		"t"+
		"<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
    	    "preDrawCallback" : function() {
		// Initialize the responsive datatables helper once.
		if (!responsiveHelper_report_table) {
		    responsiveHelper_report_table = new ResponsiveDatatablesHelper($('#report_table'), breakpointDefinition);
		}
    	    },
    	    "rowCallback" : function(nRow) {
		responsiveHelper_report_table.createExpandIcon(nRow);
    	    },
    	    "drawCallback" : function(oSettings) {
		responsiveHelper_report_table.respond();
    	    }

	});
    


	$("#makereport").on("click", function(){
	    responsiveHelper_report_table.api.ajax.reload();
	});


	// Add event listener for opening and closing details
	$('#report_table tbody').on('click', 'td.details-control', function () {
	    var tr = $(this).closest('tr');
	    var row = responsiveHelper_report_table.api.row( tr );
 
	    if ( row.child.isShown() ) {
    		// This row is already open - close it
    		row.child.hide();
    		tr.removeClass('shown');
	    } else {
    		// Open this row
    		row.child( format(row.data()) ).show();
    		tr.addClass('shown');
	    }
	});

    };
    
    loadScript("media/js/plugin/datepicker-ru.js");

    loadScript("media/js/plugin/datatables/jquery.dataTables.min.js", function(){
	loadScript("media/js/plugin/datatables/dataTables.colVis.min.js", function(){
	    loadScript("media/js/plugin/datatables/dataTables.tableTools.min.js", function(){
		loadScript("media/js/plugin/datatables/dataTables.bootstrap.min.js", function(){
		    loadScript("media/js/plugin/datatable-responsive/datatables.responsive.min.js", pagefunction)
		});
	    });
	});
    });
</script>
<% end template %>

<% template render() %>
    <% include header() %>
    <% include script() %>
<% end  template %>
<% end view %>
<% end skin %>
