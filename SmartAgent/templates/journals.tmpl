<% c++ #include "data/tmpl_journals.h" %>
<% skin defskin %>
<% view Journals uses Data::Journals  %>

<% template header() %>

<section id="widget-grid" class="">
    <div class="row">
	<div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
	    <h1 class="page-title txt-color-blueDark">
		<i class="fa fa-pencil-square-o fa-fw "></i> 
		Журнал документов
		<span>>
		    <%= journalName %>
		</span>
	    </h1>
	</div>
	<% if (content.user_level == 2) %>
	<div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
	    <ul id="sparks" class="">
		<li class="sparks-info">
		    <h5> My Income <span class="txt-color-blue">$47,171</span></h5>
		    <div class="sparkline txt-color-blue hidden-mobile hidden-md hidden-sm">
			1300, 1877, 2500, 2577, 2000, 2100, 3000, 2700, 3631, 2471, 2700, 3631, 2471
		    </div>
		</li>
		<li class="sparks-info">
		    <h5> Site Traffic <span class="txt-color-purple"><i class="fa fa-arrow-circle-up" data-rel="bootstrap-tooltip" title="Increased"></i>&nbsp;45%</span></h5>
		    <div class="sparkline txt-color-purple hidden-mobile hidden-md hidden-sm">
			110,150,300,130,400,240,220,310,220,300, 270, 210
		    </div>
		</li>
		<li class="sparks-info">
		    <h5> Site Orders <span class="txt-color-greenDark"><i class="fa fa-shopping-cart"></i>&nbsp;2447</span></h5>
		    <div class="sparkline txt-color-greenDark hidden-mobile hidden-md hidden-sm">
			110,150,300,130,400,240,220,310,220,300, 270, 210
		    </div>
		</li>
	    </ul>
	</div>
	<% end %>
    </div>
    <div class="row">
	<div class="col-xs-12 col-sm-5 col-md-5 col-lg-12">
	    <!-- Widget ID (each widget will need unique ID)-->
    	    <div class="jarviswidget" id="wid-id-3" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false" data-widget-deletebutton="false">
        	<header>
            	    <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
            	    <h2>Параметры журнала </h2>
        	</header>
        	<!-- widget div-->
        	<div>
                
            	    <!-- widget edit box -->
            	    <div class="jarviswidget-editbox">
                	<!-- This area used as dropdown edit box -->
                    
            	    </div>
            	    <!-- end widget edit box -->
                
            	    <!-- widget content -->
            	    <div class="widget-body">
                	<form class="">
                	    <% if is_DateRange %>
                    	    <fieldset>
                        	<div class="col-sm-12">
                            	    <label>Выбор диапозона дат отображения:</label>
                        	</div>
                        	<div class="col-sm-6">
                            	    <div class="form-group">
                                	<div class="input-group">
                                    	    <input class="form-control" id="from" type="text" placeholder="Дата начала">
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                	</div>
                            	    </div>
                        	</div>
                        	<div class="col-sm-6">
                            	    <div class="form-group">
                                	<div class="input-group">
                                    	    <input class="form-control" id="to" type="text" placeholder="Дата окончания">
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                	</div>
                            	    </div>
                        	</div>
                    	    </fieldset>
                    	    <% end %>
                    	    <% if not empty userList %>
                    	    <fieldset>
                        	<div class="col-sm-12">
                        	    <div class="form-group">
                            		<label>Контрагент</label>
                            		<select id="contractor" style="width:100%" class="select2">
                                	    <optgroup label="Основная группа">
                                		<% foreach item in userList %>
                                		<% item %>
                                    		<option value=<%= item.ref %>  ><%= item.name %></option>
                                    		<% end %>
                                    		<% end %>
                                	    </optgroup>
                            		</select>
                        	    </div>
                        	</div>
                    	    </fieldset>
                    	    <% end %>
                    	    <div class="form-actions">
                        	<div class="row">
                            	    <div class="col-md-12">
                                	<button id="makejournal" class="btn btn-primary" type="submit">
                                    	    <i class="fa fa-refresh"></i>
                                    	    Сформировать
                                	</button>
                            	    </div>
                        	</div>
                    	    </div>

                	</form>
            	    </div>
        	</div>
    	    </div>
	</div>
    </div>
    <div class="row">
	<!-- NEW WIDGET START -->
	<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

	    <!-- Widget ID (each widget will need unique ID)-->
	    <div class="jarviswidget" id="wid-id-14" data-widget-editbutton="false" data-widget-sortable="false" data-widget-deletebutton="false">
		<!-- widget options:
		usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

		data-widget-colorbutton="false"
		data-widget-editbutton="false"
		data-widget-togglebutton="false"
		data-widget-deletebutton="false"
		data-widget-fullscreenbutton="false"
		data-widget-custombutton="false"
		data-widget-collapsed="true"
		data-widget-sortable="false"

		-->
		<header>
		    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
		    <h2>Журнал заказов </h2>

		</header>

		<!-- widget div-->
		<div>

		    <!-- widget edit box -->
		    <div class="jarviswidget-editbox">
			<!-- This area used as dropdown edit box -->

		    </div>
		    <!-- end widget edit box -->

		    <!-- widget content -->
		    <div class="widget-body no-padding">
			<% if hasNewDoc %>
			<div class="alert alert-info no-margin fade in">
			    <button class="close" data-dismiss="alert">
				×
			    </button>
			    <i class="fa-fw fa fa-info"></i>
			    У вас есть новые документы !
			</div>
			<% end %>
			<div class="table-responsive-r">

			    <table id="journal_table" class="table table-bordered table-hover table-striped" width="100%">
			    <!--<table id="journal_table" class="table table-striped table-bordered table-hover  has-tickbox smart-form" cellspacing="0" width="100%">-->
    				<thead>
        			    <tr>
            			    <% foreach item in headerItemsList %>
            			    <% item %>
            			    <%= item|raw %>
            			    <% end %>
            			    <% end %>
        			    </tr>
    				</thead>
			    </table>
			</div>
		    </div>
		</div>
	    </div>
	</article>
    </div>
    <div class="row">
	<!-- NEW WIDGET START -->
	<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

	    <!-- Widget ID (each widget will need unique ID)-->
	    <div class="jarviswidget" id="wid-id-14" data-widget-editbutton="false" data-widget-sortable="false" data-widget-deletebutton="false">
		<header>
		    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
		    <h2>Таблица товара </h2>
		</header>

		<!-- widget div-->
		<div>

		    <!-- widget edit box -->
		    <div class="jarviswidget-editbox">
			<!-- This area used as dropdown edit box -->

		    </div>
		    <!-- end widget edit box -->

		    <!-- widget content -->
		    <div class="widget-body no-padding">
			<div class="table-responsive-r">
			    <table id="goods_table" class="table table-bordered table-hover " width="100%">
    				<thead>
        			    <tr>
        				<th>№</th>
        				<th>Товар</th>
        				<th>Количество</th>
        				<th>Цена</th>
        				<th>Сумма</th>
        			    </tr>
    				</thead>
			    </table>
			</div>
		    </div>
		</div>
	    </div>
	</article>
    </div>
</section>
<% end template %>


<% template journal_table() %>

<% end template %>


<% template script() %>
<script type="text/javascript">

    /* DO NOT REMOVE : GLOBAL FUNCTIONS!
     *
     * pageSetUp(); WILL CALL THE FOLLOWING FUNCTIONS
     *
     * // activate tooltips
     * $("[rel=tooltip]").tooltip();
     *
     * // activate popovers
     * $("[rel=popover]").popover();
     *
     * // activate popovers with hover states
     * $("[rel=popover-hover]").popover({ trigger: "hover" });
     *
     * // activate inline charts
     * runAllCharts();
     *
     * // setup widgets
     * setup_widgets_desktop();
     *
     * // run form elements
     * runAllForms();
     *
     ********************************
     *
     * pageSetUp() is needed whenever you load a page.
     * It initializes and checks for all basic elements of the page
     * and makes rendering easier.
     *
     */

    pageSetUp();
    
    /*
     * ALL PAGE RELATED SCRIPTS CAN GO BELOW HERE
     * eg alert("my home function");
     * 
     * var pagefunction = function() {
     *   ...
     * }
     * loadScript("js/plugin/_PLUGIN_NAME_.js", pagefunction);
     * 
     */
    
    // PAGE RELATED SCRIPTS
    
    // pagefunction	
    var pagefunction = function() {
    
    /* // DOM Position key index //
    
        l - Length changing (dropdown)
        f - Filtering input (search)
        t - The Table! (datatable)
        i - Information (records)
        p - Pagination (paging)
        r - pRocessing 
        < and > - div elements
        <"#id" and > - div with an id
        <"class" and > - div with a class
        <"#id.class" and > - div with an id and class
        
        Also see: http://legacy.datatables.net/usage/features
    */	

	/*
	loadScript("media/js/plugin/x-editable/moment.min.js", loadMockJax);
    
	function loadMockJax() {
    	    loadScript("media/js/plugin/x-editable/jquery.mockjax.min.js", loadXeditable);
	}
    
	function loadXeditable() {
    	    loadScript("media/js/plugin/x-editable/x-editable.min.js", loadTypeHead);
	}
    
	function loadTypeHead() {
    	    loadScript("media/js/plugin/typeahead/typeahead.min.js", loadTypeaheadjs);
	}
    
	function loadTypeaheadjs() {
    	    loadScript("media/js/plugin/typeahead/typeaheadjs.min.js", autheditplagin);
	}
	function autheditplagin() {
	    loadScript("media/js/plugin/x-editable/x-editable.min.js",addresspull);
	}
	*/
	loadScript("media/js/plugin/x-editable/x-editable.min.js",addresspull);
	
	function addresspull(){
    	    var adrarray = [];
    	    <% foreach item in addressList %>
    	    $.each({
    		<% item %>"<%= item.ref %>": "<%= item.name %>",<% end %>
    	    }, function (k, v) {
        	adrarray.push({
            	    id: k,
            	    text: v
        	});
    	    });
    	    <% end %>

	    var userarray = [];
    	    <% foreach item in userList %>
    	    $.each({
    		<% item %>"<%= item.ref %>": "<%= item.name %>",<% end %>
    	    }, function (k, v) {
        	userarray.push({
            	    id: k,
            	    text: v
        	});
    	    });
    	    <% end %>

    
    	    $('a[name=address]').editable({
		emptytext:'Не выбран !',
        	source: adrarray,
        	select2: {
            	    width: 200
        	},
        	success:function(data,config){
        	    //console.log("data",$(this).parent().parent(),config);
        	    var tr = $(this).parent().parent();
		    var table = $('#journal_table').dataTable().api();
        	    var d = table.row( tr ).data();
        	    //console.log(d);
        	    var object = d.row[0].value;
        	    //table.ajax.reload();
        	    sendData(object,config);
        	},
    	    });

    	    $('a[name=user]').editable({
		emptytext:'Не выбран !',
        	source: userarray,
        	select2: {
            	    width: 200
        	},
        	success:function(data,config){
        	    //console.log("data",$(this).parent().parent(),config);
        	    var tr = $(this).parent().parent();
		    var table = $('#journal_table').dataTable().api();
        	    var d = table.row( tr ).data();
        	    //console.log(d);
        	    var object = d.row[0].value;
        	    //table.ajax.reload();
        	    sendData(object,config);

        	},
    	    });


    	    $('a[name=comment]').editable({
		emptytext:'<i class="fa fa-pencil txt-color-green right"></i>',
        	//source: adrarray,
        	//type:'textarea',
        	textarea:{width:200},
        	rows:5,
        	success:function(data,config){
        	    //console.log("data",$(this).parent().parent(),config);
        	    var tr = $(this).parent().parent();
		    var table = $('#journal_table').dataTable().api();
        	    var d = table.row( tr ).data();
        	    //console.log(d);
        	    var object = d.row[0].value;
        	    //table.ajax.reload();
        	    sendData(object,config);

        	},
    	    });

	    
    	    $('a[name=number]').editable({
		emptytext:'0',
        	//type:'textarea',
        	textarea:{width:200},
        	rows:5,
        	success:function(data,config){
        	    console.log("data",data,config);
        	    var tr = $(this).parent().parent();
		    var table = $('#journal_table').dataTable().api();
        	    var d = table.row( tr ).data();
        	    //console.log(d);
        	    var object = d.row[0].value;
        	    //table.ajax.reload();
        	    sendEventData(object,'',config);

        	},
    	    });


	};


	function setEventsTebleEditer(){
    	    $('a[name=count]').editable({
		emptytext:'0',
        	//source: adrarray,
        	//type:'textarea',
        	textarea:{width:200},
        	rows:5,
        	mode:"inline",
        	success:function(data,config){
        	    //console.log("data",data,config);
        	    var tr = $(this).parent().parent();
		    var table = $('#goods_table').dataTable().api();
        	    var d = table.row( tr ).data();
        	    var object = d.row[0].value;
        	    console.log(d,object);
        	    sendEventData(object,'6f00fd80-7d50-f85b-f161-d229b9c3d79f',config);
        	    table.ajax.reload();

        	},
    	    });

	}



	var sendEventData = function(object,event,value)
	{
	    console.log(object,event,value);
    	    $.ajax({
		type:"POST",
		data:{
		    event:event,
		    object:object,
		    value:value,
		},
		url:"event-data",
		success: function(data){console.log(data);}
    	    });
	    
	};


	/********************/
	/* GLOBAL VARIABLES */
	/********************/
	
        var responsiveHelper_journal_table = undefined;
        var responsiveHelper_goods_table = undefined;
        var journal_table = undefined;

        var breakpointDefinition = {
	    desktop :2048,
	    tablet : 1024,
	    phone : 480
        };
        
        $("select.select2").select2();
        
        /**************************/
        /* BEGIN SHOPCART COUNTER */
        /**************************/
	var elemcount = 0;
	var config = {
	    catalog: { add: function(name, val) {this[name] = val; }},
	    currentorder:''
        };

	var owner = $('meta[name=useref]').attr("rel");
	var catalogdata = localStorage.getItem(owner);
	if(!catalogdata)
	{
	    localStorage.setItem(owner), JSON.stringify(config.catalog);
        
	}else{
	    var jsdata = JSON.parse(catalogdata);
	    $.each(jsdata,function(key,value){
		config.catalog.add(key,value);
	    });
    	    elemcount = Object.keys(config.catalog).length;
	};

	if(elemcount){
    	    if($("#shopcart").length == 3)
	    $("#shopcart :last").remove();
    	    $("#shopcart").append("<b id=\"shopcartbadge\"class=\"badge bg-color-red bounceIn animated\">"+elemcount+"</b>");
	};
	/* END SHOPCART COUNTER */
    
	/********************************/
	/* BEGIN JOURNAL SETTINGS PANEL */
	/********************************/
	
	 var beginDate = new Date();
	 var endDate = new Date();
        beginDate.setMonth(beginDate.getMonth(), 1);
        // Date Range Picker
        var datepicker = $("#from").datepicker({
            defaultDate: beginDate,
            showCurrentAtPos: 1,
            changeMonth: true,
            gotoCurrent: true,
            numberOfMonths: 1,
            //beforeShowDay: function(date){ return [date.getDate() == 1,""]},
            regional:[ "ru" ],
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onClose: function (selectedDate) {
                $("#from").datepicker("option", "maxDate", selectedDate);
            }
        });
        //console.log($.datepicker._defaults);
        $("#from").datepicker("setDate" ,beginDate);

        endDate.setMonth(endDate.getMonth()+1, 0);
        $("#to").datepicker({
            defaultDate: endDate,
            changeMonth: true,
            numberOfMonths: 1,
            regional:[ "ru" ],
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            onClose: function (selectedDate) {
                $("#to").datepicker("option", "minDate", selectedDate);
            }
        });

        $("#to").datepicker("setDate" ,endDate);
	
	/* END JOURNAL SETTINGS PANEL */
	
	
	/***************************/
	/* BEGIN JOURNAL DATATABLE */
	/***************************/
	
	//console.log($("#usercode").attr("name"));
	
	$('#journal_table').dataTable({
    	    "aLengthMenu": [[5, 10, 25, 50, 100, 250, 500, -1], [5, 10 ,25, 50, 100, 250, 500, "All"]],
    	    "pageLength": 10,
	    <% foreach item in ajaxParamList %>
	    "ajax" : 
    	    function (data, callback, settings) {
        	$.ajax({
    		    type:"GET",
		    data:{
			<% item %>
			<%= item|raw %>,
			<% end %>
		    },
		    dataType:"json",
		    url:"journal-data",
		    success: function(data){callback(data);}
        	});
    	    },
	    <% end %>
    	    
    	    <% foreach item in dataBindList %>
	    "columns": [
    	    <% item %>
		{<%= item|raw %> },
	    <% end %>
	    ],
	    <% end %>
    	    <% foreach item in dataRenderList %>
    	    "columnDefs":[
    	    <% item %>
		{<%= item|raw %> },
	    <% end %>
	    ],
	    <% end %>
	    
    	    "oLanguage": {
		"sInfo":  'Показанны строки с <span class="txt-color-darken"> _START_</span> по <span class="txt-color-darken"> _END_</span> из <span class="text-primary">_TOTAL_</span> '
    	    },
    	    
	    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>"+
		"t"+
		"<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
    	    "preDrawCallback" : function() {
		// Initialize the responsive datatables helper once.
		if (!responsiveHelper_journal_table) {
		    responsiveHelper_journal_table = new ResponsiveDatatablesHelper($('#journal_table'), breakpointDefinition);
		}
    	    },
    	    "rowCallback" : function(nRow) {
    		console.log("nRow",nRow);
		responsiveHelper_journal_table.createExpandIcon(nRow);
		
    	    },
    	    "drawCallback" : function(oSettings) {
    		console.log("oSettings",oSettings,responsiveHelper_journal_table);
		responsiveHelper_journal_table.respond();
		oSettings.bSorted = false;
		oSettings.bFiltered = false;
		//postDraw()		
		//alert( 'DataTables has finished its initialisation.' );
		if($('a[name=address]').size())
		{
		    //console.log($('a[name=address]'));
		    addresspull();
		}
		
    	    },
	     order: [ 1, 'asc' ]
	});

	

	$('#journal_table').on( 'page', function () {
	    //var info = table.page.info();
	    //$('#pageInfo').html( 'Showing page: '+info.page+' of '+info.pages );
	} );

	//$("div.dt-toolbar").html('');

	/************************/
	/* BTGIN DOC TABLE DATA */
	/************************/

	$('#goods_table').dataTable({
    	    "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10 ,25, 50, 100, "All"]],
    	    "autoWidth": true,
    	    "columns":[
    		{data:'row_id'},
    		{data:'row.3.value'},
    		{data:'row.4.value',sWidth:'5%',orderable:false},
    		{data:'row.5.value',sWidth:'5%',orderable:false},
    		{data:'row.6.value',sWidth:'5%',orderable:false},
    		
    	    ],
    	    "columnDefs":[
    		{
    		    targets:2,
    		    render:function(data,type,full,meta){return '<a href="#" name="count"  data-type="text" data-pk="1" data-placeholder="Кол-во..." data-original-title="Количество" class="editable editable-pre-wrapped editable-click">'+data+'</a>';},
    		}
    	    ],
	    "ajax" : 
    		function (data, callback, settings) {
        	    $.ajax({
    			type:"GET",
			data:{
			    record:config.currentorder,
			    recordtype:'order-table'
			},
			dataType:"json",
			url:"journal-data-table",
			success: function(data){callback(data);}
        	    });
    		},
    	    /*"preDrawCallback" : function() {
		// Initialize the responsive datatables helper once.
		if (!responsiveHelper_goods_table) {
		    responsiveHelper_goods_table = new ResponsiveDatatablesHelper($('#goods_table'), breakpointDefinition);
		}
    	    },
    	    "rowCallback" : function(nRow) {
    		console.log("nRow");
		responsiveHelper_goods_table.createExpandIcon(nRow);
    	    },*/
    	    "drawCallback" : function(oSettings) {
    		//console.log("oSettings ",oSettings);
		//var api = new $.fn.dataTable.Api( "goods_table" );
 		// Output the data for the visible rows to the browser's console
		// You might do something more useful with it!
		//console.log( api.rows( {page:'current'} ).data() );
		//responsiveHelper_goods_table.respond();
		if($('a[name=count]').size())
		    setEventsTebleEditer();
    	    },
	});

	$('#journal_table tbody').on( 'click', 'tr', function () {
	    console.log($(this));
	    var tr = $(this).closest('tr');
	    var row = responsiveHelper_journal_table.api.row( tr );
	    
	    responsiveHelper_journal_table.api.showRowDetail = function(){console.log(this);};
	    
	    var table = responsiveHelper_journal_table.api;
	    if ( $(this).hasClass('selected') ) {
        	$(this).removeClass('selected');
    	    } else {
        	table.$('tr.selected').removeClass('selected');
        	$(this).addClass('selected');
        	var d = table.row( this ).data();
        	console.log(d);
        	config.currentorder = d.row[0].value;
        	var table = $('#goods_table').dataTable().api();
        	//console.log(table);
        	//responsiveHelper_goods_
        	table.ajax.reload();
    	    }
	});

	$('table.has-columns-hidden>tbody>tr.detail-show>td span.responsiveExpander').on('click', function () {
	    console.log(this);
	});

	$('td.sorting_1').on('click', function () {
	    console.log(this);
	});


	$("#makejournal").on("click", function(){
	    responsiveHelper_journal_table.api.ajax.reload();
	});

	$('a[name=address]').on('success', function(e, editable) {
	    alert('new value: ' + editable.value);
	});
	
	// Add event listener for opening and closing details
	/*$('#journal_table tbody').on('click', 'td.details-control', function () {
	    var tr = $(this).closest('tr');
	    var row = responsiveHelper_journal_table.api.row( tr );
 
	    if ( row.child.isShown() ) {
    		// This row is already open - close it
    		row.child.hide();
    		tr.removeClass('shown');
	    } else {
    		// Open this row
    		//row.child( format(row.data()) ).show();
    		tr.addClass('shown');
	    }



	});*/




    };


    
    
    loadScript("media/js/plugin/datepicker-ru.js");

    loadScript("media/js/plugin/datatables/jquery.dataTables.min.js", function(){
	loadScript("media/js/plugin/datatables/dataTables.colVis.min.js", function(){
	    loadScript("media/js/plugin/datatables/dataTables.tableTools.min.js", function(){
		loadScript("media/js/plugin/datatables/dataTables.bootstrap.min.js", function(){
		    loadScript("media/js/plugin/datatable-responsive/datatables.responsive.min.js", pagefunction)
		});
	    });
	});
    });
</script>
<% end template %>

<% template render() %>
    <% include header() %>
    <% include script() %>
<% end  template %>
<% end view %>
<% end skin %>
